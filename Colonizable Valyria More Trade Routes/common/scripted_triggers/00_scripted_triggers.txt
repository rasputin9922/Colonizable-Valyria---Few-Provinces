####TRAIT GROUP TRIGGERS####
#If you make changes, update the "Trait group triggers CK2" spreadsheet

#Agreeable
#has_benevolent_trait_trigger		Has a benevolent trait.
#is_benevolent_trigger				Has a benevolent trait and not any evil traits.
#has_pleasant_trait_trigger			Has a pleasant personality trait. 
#has_pleasant_personality_trigger	Has a pleasant personality trait and not any unpleasant personality traits.
#has_pious_trait_trigger			Has a piety trait.
#is_pious_trigger					Has a piety trait and not any impious traits.
#has_virtue_trigger					Has a virtue trait.

#Disagreeable
#has_evil_trait_trigger				Has an evil trait.
#is_evil_trigger					Has an evil trait and not any benevolent traits.
#has_unpleasant_trait_trigger		Has an unpleasant personality trait. 
#has_unpleasant_personality_trigger	Has an  unpleasant personality trait and not any pleasant personality traits.
#has_impious_trait_trigger			Has an impious trait.
#is_impious_trigger					Has a impious trait and not any piety traits.
#has_vice_trigger					Has a vice trait.

#Attractiveness
#has_attractive_trait_trigger		Has a sex appeal trait.
#is_attractive_trigger				Has a sex appeal trait and not any traits with negative sex appeal.
#has_unattractive_trait_trigger		Has a negative sex appeal trait.
#is_unattractive_trigger			Has a negative sex appeal trait and not any traits with sex appeal.

#Health/congential
#is_smart_trigger					Has a smart trait.
#is_smart_incl_genius_trigger
#is_dumb_trigger					Has a dumb trait.
#is_strong_trigger					Has a strong trait.
#is_weak_trigger					Has a weak trait.
#character_disease_trigger			Has a disease trait.
#has_symptom_trigger				Has a symptom trait.
#has_injury_trigger					Has an injury trait.
#is_maimed_trigger					Has a maimed trait
#has_severe_disability_trigger		Has a severe disability, which makes the characters life really hard.
#has_medium_disability_trigger		Has a medium disability, which limits the character to some extent but they can mostly live a full life.
#has_minor_disability_trigger		Has a minor disability, which does not limit the character in a physical sense, but is a source of ridicule and trauma.
#has_disability_trigger				Has a severe or light disability.
#has_mental_disorder_trigger		Has a mental disorder trait.
#has_fertile_trait_trigger			Has a fertile trait.
#is_fertile_trigger					Has a fertile trait and not any infertile traits.
#has_infertile_trait_trigger		Has an infertile trait.
#is_infertile_trigger				Has an infertile trait and not any fertile traits, OR is celibate OR is eunuch.
#has_negative_congenital_trigger	Has a negative congenital trait

#Diplomacy
#has_education_diplomacy_trigger	Has a diplomacy education trait.
#has_lifestyle_diplomacy_trigger	Has a diplomacy lifestyle trait.
#child_personality_diplomacy_triggerHas a child trait with diplomacy bonus.

#Martial
#has_education_martial_trigger		Has a martial education trait.
#has_lifestyle_martial_trigger		Has a martial lifestyle trait.
#child_personality_martial_trigger	Has a child trait with martial bonus.

#Stewardship
#has_education_stewardship_trigger	Has a stewardship education trait.
#has_lifestyle_stewardship_trigger	Has a stewardship  lifestyle trait.
#child_personality_stewardship_trigger	Has a child trait with stewardship bonus.

#Intrigue
#has_education_intrigue_trigger		Has a intrigue education trait.
#has_lifestyle_intrigue_trigger		Has a intrigue lifestyle trait.
#child_personality_intrigue_trigger	Has a child trait with intrigue bonus.

#Learning
#has_education_learning_trigger		Has a learning education trait.
#has_lifestyle_learning_trigger		Has a learning lifestyle trait.
#child_personality_learning_trigger	Has a child trait with learning bonus.
#is_learned_trigger					Has a scholarly trait, learning-oriented trait.

#Religion
#has_crusade_trait_trigger			Has a crusade type trait.
#has_secret_religion_trait_trigger	Has a secret religion trait.

####MERC LEADER/COUNCIL JOB####
#maester_culture_trigger
#can_be_castellan_trigger
#can_be_commander_trigger
#can_be_chancellor_trigger
#can_be_marshal_trigger
#can_be_treasurer_trigger
#can_be_spymaster_trigger
#can_be_physician_trigger
#can_be_spiritual_trigger
#can_be_advisor_trigger

###REAPER'S DUE####
# can_be_maimed_trigger
# physician_bad_trigger
# physician_good_trigger
# is_inaccessible_trigger
# prefers_men_trigger
# root_attraction_trigger #Returns yes when root is attracted the scoped character, based on sex
# attacted_to_root_trigger
# attacted_to_prev_trigger
# is_unimportant_trigger
# sad_example_trigger
# has_epidemic_disease_trigger
# developing_epidemic_disease_trigger
# can_be_prophet_of_doom_trigger

# death_murder_trigger
# death_murder_unknown_trigger
# death_murder_known_trigger
# death_execution_trigger
# death_sacrificed_trigger
# death_accident_trigger
# death_suicide_trigger
# block_general_event_trigger

###MONKS & MYSTICS###

# gender_equality_trigger
# has_prev_education_trigger
# useless_character_trigger

# true_religion_the_seven_trigger
# true_religion_old_gods_trigger
# true_religion_group_westerosi_religion_trigger
# true_religion_beyond_wall_old_gods_trigger
# true_religion_mountain_old_gods_trigger
# true_religion_thenn_rel_trigger
# true_religion_group_wildling_religion_trigger
# true_religion_drowned_god_trigger
# true_religion_rhllor_trigger
# true_religion_group_essos_group_trigger

# relationship_with_root_trigger
# family_of_root_trigger
# cousin_of_root_trigger
# sibling_of_root_trigger
# full_sibling_of_root_trigger
# sibling_child_of_root_trigger
# parent_sibling_of_root_trigger
# grandchild_of_root_trigger
# sibling_in_law_of_root_trigger

# is_murder_quest_target_of_prev_trigger
# assassins_appropriate_target_trigger
# interesting_face_trigger
# can_pay_assassins_debt
# is_rich_holding
# is_richer_holding

#has_society_currency_trivial_trigger
#has_society_currency_tiny_trigger
# has_society_currency_minor_trigger
# has_society_currency_medium_trigger
# has_society_currency_major_trigger

# is_ill_trigger
# is_devil_worshiper_trigger
# has_negative_congenital_trigger

# is_christian_monastic_member_trigger
# is_monastic_member_trigger
# is_ascetic_trigger
# is_virgin_trigger
# print_scope_trigger

# is_secret_religious_society_member_trigger
# is_openly_of_prevs_secret_religion_trigger
# is_openly_of_roots_secret_religion_trigger
# has_sympathy_for_true_religion_of_prev_trigger
# has_sympathy_for_true_religion_of_root_trigger
# ok_sr_induction_mission_target_trigger
# ok_sr_sympathy_mission_target_trigger
# has_prevs_secret_religion_truly_trigger
# has_roots_secret_religion_truly_trigger
# has_my_liege_secret_religion_truly_trigger
# is_in_prevs_interesting_society_trigger
# shares_prevs_secret_religion_trigger
# character_knows_prev_trigger
# shares_true_religion_group_with_prev_trigger
# is_openly_of_prevs_true_religion_group

# is_visible_to_self_trigger
# has_any_char_old_religion

# can_add_admin_bonus_trigger
# can_be_sabotaged_trigger

# has_assassins_prerequisites
# has_common_devilworship_prerequisites
# has_satanists_prerequisites
# has_trollcrafters_prerequisites
# has_cult_of_kali_prerequisites
# has_cold_ones_prerequisites
# has_plaguebringers_prerequisites
# same_society_rank_as_prev_trigger
# higher_society_rank_than_prev_trigger

# possibly_romantically_interested_in_ROOT_trigger
# ROOT_possibly_romantically_interested_trigger
# possibly_romantically_interested_in_each_other_trigger

# looting_artifact_event_religious_artifacts_trigger
# can_be_asked_to_leave_court_trigger

# has_a_seer_modifier_trigger
# has_an_omen_modifier_trigger
# has_positive_omen_modifier_trigger
# has_negative_omen_modifier_trigger
# has_battle_omen_modifier_trigger
# has_relationship_omen_modifier_trigger
# has_power_omen_modifier_trigger
# has_top_tier_education_trait_trigger
# has_childhood_horoscope_modifier_trigger

# is_born_in_january_trigger
# is_born_in_february_trigger
# is_born_in_march_trigger
# is_born_in_april_trigger
# is_born_in_may_trigger
# is_born_in_june_trigger
# is_born_in_july_trigger
# is_born_in_august_trigger
# is_born_in_september_trigger
# is_born_in_october_trigger
# is_born_in_november_trigger
# is_born_in_december_trigger
# is_born_under_Aries_trigger
# is_born_under_Taurus_trigger
# is_born_under_Gemini_trigger
# is_born_under_Cancer_trigger
# is_born_under_Leo_trigger
# is_born_under_Virgo_trigger
# is_born_under_Libra_trigger
# is_born_under_Scorpius_trigger
# is_born_under_Sagittarius_trigger
# is_born_under_Capricorn_trigger
# is_born_under_Aquarius_trigger
# is_born_under_Pisces_trigger
# is_romantic_zodiac_match_with_root_trigger
# is_romantic_zodiac_mismatch_with_root

# has_unsafe_secret_religion
# same_true_religion_as_from_trigger
# same_true_religion_as_root_trigger

# religion_openly_norse_or_reformed_trigger
# is_blood_relative_of_root_trigger
# is_any_kinslayer_trigger
# has_unsafe_religion
# using_unimportant_cb
# death_no_trace_trigger
# proselytize_convert_independent_trigger

# is_toddler_age_trigger
# is_young_child_age_trigger
# is_child_age_trigger
# is_adolescent_age_trigger
# is_teenager_age_trigger
# is_grown_up_age_trigger
# is_senior_age_trigger

# will_add_kinslayer
# assassination_interaction_trigger

# root_has_terrible_opinion_modifier_of_this_trigger

# the_hunt_for_an_artifact_has_made_enough_progress_trigger

##########
###AGOT###
##########
# has_valyrian_steel_sword_trigger

# ###Slavery

# has_slavery_religion_trigger
# has_slavery_culture_trigger
# has_antislavery_religion_trigger
# has_antislavery_culture_trigger
# has_full_slavery_trigger
# can_buy_courtier_slaves_trigger

# ###

# can_host_citadel_trigger

# can_inherit_titles_trigger
# can_press_claims_trigger
# can_marry_trigger

# is_summer_trigger
# is_winter_trigger

# eligible_trial_by_combat_champion_for_ROOT_trigger
# eligible_trial_by_combat_champion_for_FROM_trigger

# below_consort_limit_trigger
# allow_temple_buildings_trigger
# NOT_mythical_creature_trigger
# just_execution_reason_PREV_trigger
# is_in_interregnum_trigger
# demanded_trial_by_combat_trigger
# eligible_triarch_trigger
# can_use_dragon_conquest_trigger
# is_divine_blood_dynasty_trigger
# high_valyrian_dynasty_trigger
# is_coin_flip_dynasty_trigger
# is_weak_khal_trigger

# base_value_1_trigger
# base_value_2_trigger
# base_value_3_trigger
# base_value_4_trigger
# base_value_5_trigger
# base_value_6_trigger

# can_be_kingsguard_candidate_trigger
# highborn_kingsguard_candidate_trigger
# nightswatch_culture_trigger

# magic_returned_trigger

# seniority_culture_trigger
# agnatic_culture_trigger
# true_cognatic_culture_trigger
# enatic_culture_trigger

# valid_exile_destination_ROOT_trigger

# has_tanned_skin_trigger
# has_bronzed_skin_trigger
# has_dark_skin_trigger
# has_copper_skin_trigger
# has_white_skin_trigger

# has_house_words_trigger
# has_chosen_syncretic_faith_trigger
# has_dragonpit_trigger
# cannot_outbreed_trigger
# has_alchemists_guild_prerequisites
# wearing_asshai_mask_trigger
# wearing_shadowlander_mask_trigger
# has_pilgrimage_trait_trigger
# has_bastard_nickname_trigger

# PREV_has_abused_opinion_trigger
# PREV_has_abused_relative_opinion_trigger
# PREV_has_murder_opinion_trigger
# PREV_has_attempted_murder_opinion_trigger
# PREV_has_treason_opinion_trigger
# PREV_has_adultery_opinion_trigger

# has_priest_trait_trigger
# traditional_nomad_territory_trigger

# has_black_nickname_prereq_trigger
# has_white_nickname_prereq_trigger
# has_crazed_nickname_prereq_trigger
# has_wroth_nickname_prereq_trigger
# has_red_nickname_prereq_trigger
# has_big_nickname_prereq_trigger
# has_strong_nickname_prereq_trigger
# has_fair_nickname_prereq_trigger
# has_ugly_nickname_prereq_trigger
# has_little_nickname_prereq_trigger
# has_genius_nickname_prereq_trigger
# has_dumb_nickname_prereq_trigger
# has_dark_nickname_prereq_trigger
# has_weak_nickname_prereq_trigger
# has_silver_nickname_prereq_trigger
# has_old_nickname_prereq_trigger
# has_warrior_nickname_prereq_trigger
# has_laughing_nickname_prereq_trigger

# is_feudal_monarch_trigger
# is_military_command_trigger

# can_use_book_trigger
# true_valyrian_culture_trigger
# can_legitimise_bastards_trigger
# can_wear_a_crown_trigger
# is_valyrian_freehold_trigger
# is_volcano_location_trigger
# is_old_gods_religion_trigger

# rules_in_active_region_trigger
# located_in_active_region_trigger

# far_east_trade_route_post_trigger
# central_trade_route_post_trigger
# southern_trade_route_post_trigger
# rhoyne_trade_route_post_trigger

# salt_dornish_province_trigger
# sand_dornish_province_trigger
# stone_dornish_province_trigger

# northman_culture_trigger

NOT_mythical_creature_trigger = {
	custom_tooltip = {
		text = TOOLTIPNOT_mythical_creature_trigger
		hidden_tooltip = {
			NOR = {
				trait = dragon
				trait = cotf
				trait = giant
				trait = horse
				trait = cat
				culture_group = winter_group
				culture_group = unoccupied_group
			}
		}
	}	
}

##AGREEABLE###

has_benevolent_trait_trigger = {
	OR = {
		trait = just
		trait = kind
		trait = charitable
		trait = patient
		trait = honorable
		trait = affectionate
	}
}

is_benevolent_trigger = {
	has_benevolent_trait_trigger = yes
	has_evil_trait_trigger = no
}

has_pleasant_trait_trigger = {
	OR = {
		trait = honest
		trait = gregarious
		trait = trusting
		trait = affectionate
		trait = playful
		trait = socializer
		trait = charitable
		trait = patient
		trait = kind
		trait = honorable
	}
}

has_pleasant_personality_trigger = {
	has_pleasant_trait_trigger = yes
	has_unpleasant_trait_trigger = no
}

has_pious_trait_trigger = {
	OR = {
		trait = theologian
		trait = celibate
		trait = chaste
		trait = humble
		trait = content
		trait = on_pilgrimage
		#trait = pilgrim
		#trait = monk
		#trait = nun
		#trait = hajjaj
		#trait = on_hajj
		#trait = ashari
		#trait = shieldmaiden
		trait = zealous
		
		has_priest_trait_trigger = yes
	}
}

is_pious_trigger = {
	has_pious_trait_trigger = yes
	has_impious_trait_trigger = no
}

has_virtue_trigger = {
	OR = {
		trait = chaste
		trait = temperate
		trait = charitable
		trait = diligent
		trait = patient
		trait = kind
		trait = humble
		trait = honorable
	}
}


##DISAGREEABLE##

has_evil_trait_trigger = {
	OR = {
		trait = arbitrary
		trait = cruel
		trait = impaler
	}
}

is_evil_trigger = {
	has_evil_trait_trigger = yes
	has_benevolent_trait_trigger = no
}

has_unpleasant_trait_trigger = {
	OR = {
		trait = deceitful
		trait = shy
		trait = paranoid
		trait = cruel
		trait = stubborn
		trait = haughty
		trait = brooding
		trait = impaler
		trait = greedy
		trait = wroth
		trait = envious
		trait = ruthless
	}
}

has_unpleasant_personality_trigger = {
	has_unpleasant_trait_trigger = yes
	has_pleasant_trait_trigger = no
}

has_impious_trait_trigger = {
	OR = {
		trait = cynical
		trait = bad_priest_christian
		trait = bad_priest_muslim
		trait = bad_priest_norse
		trait = bad_priest_tengri
		trait = bad_priest_zoroastrian
		trait = bad_priest_aztec
		trait = hedonist
		trait = lustful
		trait = cannibal_trait
		trait = impaler
	}
}

is_impious_trigger = {
	has_impious_trait_trigger = yes
	has_pious_trait_trigger = no
}

has_vice_trigger = {
	OR = {
		trait = lustful
		trait = gluttonous
		trait = greedy
		trait = slothful
		trait = wroth
		trait = envious
		trait = proud
	}
}


##ATTRACTIVENESS##

has_attractive_trait_trigger = {
	OR = {
		trait = fair
		has_fashionable_groomed_trigger = yes
		trait = just
		trait = brave
		trait = gregarious
		trait = seducer
		trait = seductress
		trait = robust
		trait = strong
		trait = socializer
	}
}

is_attractive_trigger = {
	has_attractive_trait_trigger = yes
	has_unattractive_trait_trigger = no
}

has_unattractive_trait_trigger = {
	OR = {
		has_ugly_trait_trigger = yes
		trait = feeble
		trait = dwarf
		trait = clubfooted
		trait = harelip
		trait = hunchback
		trait = lisp
		trait = weak
		trait = lunatic
		trait = possessed
		trait = has_aztec_disease
		trait = syphilitic
		trait = leper
		trait = maimed
		trait = drunkard
		trait = is_fat
		trait = craven
		trait = arbitrary
		trait = cruel
		trait = stubborn
		trait = blinded
		trait = horse
		trait = one_eyed
		trait = one_handed
		trait = one_legged
		trait = disfigured_AGOT
		trait = disfigured
		trait = mangled
		trait = severely_injured
		trait = flu
		trait = dysentery
		trait = food_poisoning
		trait = rabies
		trait = infection
		trait = rash
		trait = vomiting
		trait = diarrhea
		trait = cough
		trait = greyscale_scarred
		trait = has_greyscale
		trait = burned
	}
}

is_unattractive_trigger = {
	has_unattractive_trait_trigger = yes
	has_attractive_trait_trigger = no
}


##HEALTH/CONGENTIAL##

is_smart_trigger = {
	OR = {
		#trait = genius
		trait = quick
		trait = shrewd
	}
}
is_smart_incl_genius_trigger = {
	OR = {
		trait = genius
		trait = quick
		trait = shrewd
	}
}

is_dumb_trigger = {
	OR = {
		trait = dull
		trait = slow
		#trait = imbecile 
	}
}
is_dumb_incl_imbecile_trigger = {
	OR = {
		trait = dull
		trait = slow
		trait = imbecile 
	}
}

is_strong_trigger = {
	OR = {
		trait = strong
		trait = robust
	}
}

is_weak_trigger = {
	OR = {
		trait = weak
		trait = feeble
	}
}

well_treated_for_disease_trigger = {
	OR = {
		has_character_modifier = mystic_treatment_decent
		has_character_modifier = symptom_treatment_1
		has_character_modifier = symptom_treatment_2
		has_character_modifier = symptom_treatment_3
		has_character_modifier = symptom_treatment_4	
		has_character_modifier = successful_treatment_1
		has_character_modifier = successful_treatment_2
		has_character_modifier = successful_treatment_3
	}	
}
poorly_treated_for_disease_trigger = {
	OR = {
		has_character_modifier = mystic_treatment_poor
		has_character_modifier = mystic_treatment_terrible
		has_character_modifier = failed_treatment_1
		has_character_modifier = failed_treatment_2
	}	
}

character_disease_trigger = {
	custom_tooltip = {
		text = TOOLTIPcharacter_disease_trigger
		hidden_tooltip = {
			OR = {
				trait = has_bloody_flux
				trait = has_typhoid_fever
				trait = has_grey_plague
				trait = has_bubonic_plague
				trait = has_measles
				trait = has_small_pox
				trait = has_aztec_disease
				trait = syphilitic
				trait = flu
				trait = dysentery
				trait = gout
				trait = food_poisoning
				trait = rabies
				trait = cancer
				trait = pneumonic
				trait = old_ones_scourge
				trait = has_red_death
				trait = has_butterfly_fever
			}
		}
	}	
}

has_disease_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_disease_trigger
		hidden_tooltip = {
			OR = {
				trait = has_bloody_flux
				trait = has_typhoid_fever
				trait = has_grey_plague
				trait = has_bubonic_plague
				trait = has_measles
				trait = has_small_pox
				trait = has_aztec_disease
				trait = syphilitic
				trait = flu
				trait = dysentery
				trait = gout
				trait = food_poisoning
				trait = rabies
				trait = cancer
				trait = pneumonic
				trait = dancing_plague
				trait = scurvy
				trait = ill
				trait = leper
				trait = lovers_pox
				trait = has_greyscale
				trait = old_ones_scourge
				trait = has_red_death
				trait = has_butterfly_fever
			}
		}
	}	
}


has_symptom_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_symptom_trigger
		hidden_tooltip = {
			OR = {
				trait = infection
				trait = malaise
				trait = fatigue
				trait = abdominal_pain
				trait = headache
				trait = rash
				trait = cramps
				trait = chest_pain
				trait = vomiting
				trait = diarrhea
				trait = fever
				trait = cough
			}
		}
	}	
}

has_minor_disease_trigger = {
	OR = {
		trait = malaise
		trait = fatigue
		trait = abdominal_pain
		trait = headache
		trait = rash
		trait = cramps
		trait = chest_pain
		trait = vomiting
		trait = diarrhea
		trait = fever
		trait = cough
		trait = ill
		trait = lovers_pox
		trait = flu
	}
}

has_injury_trigger = {
	OR = {
		trait = wounded
		trait = severely_injured
	}
}

is_maimed_trigger = {
	custom_tooltip = {
		text = TOOLTIPis_maimed_trigger
		hidden_tooltip = {
			OR = {
				trait = maimed
				trait = one_eyed
				trait = one_handed 
				trait = one_legged 
				trait = disfigured
				trait = mangled
			}
		}
	}	
}
is_crippled_trigger = {
	OR = {
		trait = crippled
		trait = mangled
	}
}
has_severe_disability_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_severe_disability_trigger
		hidden_tooltip = {
			OR = {
				trait = infirm
				trait = mangled
				trait = inbred
				trait = blinded
				trait = blinded_age
				trait = incapable
				trait = maimed
				trait = crippled
			}
		}	
	}	
}

has_medium_disability_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_medium_disability_trigger
		hidden_tooltip = {
			OR = {
				trait = one_legged
				trait = one_handed
				trait = one_eyed
				trait = clubfooted
				trait = hunchback
				trait = dwarf
			}
		}
	}	
}

has_minor_disability_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_minor_disability_trigger
		hidden_tooltip = {
			OR = {
				trait = disfigured_AGOT
				trait = disfigured
				trait = eunuch
				trait = harelip
				trait = stutter
				trait = lisp
			}
		}
	}	
}

has_disability_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_disability_trigger
		hidden_tooltip = {
			OR = {
				has_severe_disability_trigger = yes
				has_medium_disability_trigger = yes
				has_minor_disability_trigger = yes
			}
		}
	}	
}

has_mental_disorder_trigger = {
	OR = {
		trait = stressed
		trait = depressed
		trait = lunatic
		trait = possessed
		trait = drunkard
	}
}

has_fertile_trait_trigger = {
	OR = {
		trait = underhanded_rogue
		trait = charismatic_negotiator
		trait = grey_eminence
		trait = thrifty_clerk
		trait = fortune_builder
		trait = midas_touched
		trait = strong
		trait = hedonist
		trait = lustful
		trait = dancing_plague
	}
}

is_fertile_trigger = {
	fertility = 0.05
	has_fertile_trait_trigger = yes
	has_infertile_trait_trigger = no
}

has_infertile_trait_trigger = {
	OR = {
		trait = homosexual
		trait = eunuch
		trait = scholarly_theologian
		trait = mastermind_theologian
		trait = stressed
		trait = depressed
		trait = ill
		trait = pneumonic
		trait = leper
		trait = syphilitic
		trait = has_aztec_disease
		trait = infirm
		trait = incapable
		trait = inbred
		trait = weak
		trait = celibate
		trait = chaste
		trait = mangled
		trait = severely_injured
		trait = dysentery
		trait = food_poisoning
		trait = cancer
	}
}

is_infertile_trigger = {
	OR = {
		AND = {
			has_infertile_trait_trigger = yes
			has_fertile_trait_trigger = no
		}
		trait = eunuch
		trait = celibate
		NOT = { fertility = 0.05 }
	}
}


##DIPLOMACY##

has_education_diplomacy_trigger = {
	OR = {
		trait = naive_appeaser
		trait = underhanded_rogue
		trait = charismatic_negotiator
		trait = grey_eminence
	}
}

has_lifestyle_diplomacy_trigger = {
	OR = {
		trait = socializer
		trait = gamer
		trait = hedonist
	}
}

child_personality_diplomacy_trigger = {
	OR = {
		trait = affectionate
		trait = playful
	}
}


##MARTIAL##

has_education_martial_trigger = {
	custom_tooltip = {
		text = has_martial_education_tt
		OR = {
			trait = misguided_warrior
			trait = tough_soldier
			trait = skilled_tactician
			trait = brilliant_strategist
		}
	}
}

has_lifestyle_martial_trigger = {
	OR = {
		trait = duelist
		trait = hunter
		trait = strategist
	}
}

child_personality_martial_trigger = {
	OR = {
		trait = haughty
		trait = rowdy
	}
}


##STEWARDSHIP##

has_education_stewardship_trigger = {
	OR = {
		trait = indulgent_wastrel
		trait = thrifty_clerk
		trait = fortune_builder
		trait = midas_touched
	}
}

has_lifestyle_stewardship_trigger = {
	OR = {
		trait = administrator
		trait = architect
		trait = gardener
	}
}

child_personality_stewardship_trigger = {
	OR = {
		trait = conscientious
		trait = fussy
		trait = curious
	}
}


##INTRIGUE##

has_education_intrigue_trigger = {
	OR = {
		trait = amateurish_plotter
		trait = flamboyant_schemer
		trait = intricate_webweaver
		trait = elusive_shadow
	}
}

has_lifestyle_intrigue_trigger = {
	OR = {
		trait = schemer
		trait = impaler
		trait = seducer
		trait = seductress
	}
}

child_personality_intrigue_trigger = {
	OR = {
		trait = willful
		trait = brooding
		trait = indolent
	}
}


##LEARNING##

has_education_learning_trigger = {
	OR = {
		trait = detached_priest
		trait = martial_cleric
		trait = scholarly_theologian
		trait = mastermind_theologian
	}
}

has_lifestyle_learning_trigger = {
	OR = {
		trait = scholar
		trait = theologian
		trait = mystic
	}
}

child_personality_learning_trigger = {
	OR = {
		trait = timid
		trait = idolizer
	}
}

is_learned_trigger = {
	OR = {
		trait = erudite
		trait = scholar
		trait = scholarly_theologian
		trait = mastermind_theologian
		trait = physician
		trait = maester
		trait = archmaester
		trait = astronomer
		trait = time_keeper
		trait = cartographer
		trait = traveller
		trait = linguist
		trait = herbologist
	}
}

has_any_lifestyle_trait = {
	OR = {
		has_lifestyle_diplomacy_trigger = yes
		has_lifestyle_martial_trigger = yes
		has_lifestyle_stewardship_trigger = yes
		has_lifestyle_intrigue_trigger = yes
		has_lifestyle_learning_trigger = yes
	}
}

##RELIGION##

#has_crusade_trait_trigger = {
#}

has_secret_religion_trait_trigger = {
	custom_tooltip = {
		text = no_secret_religion
		has_secret_religion = yes
	}
}

####MERC LEADER/COUNCIL JOB####
maester_culture_trigger = { #these cultures use maesters NOTE: localisation for job_physician needs to be updated for any changes
	custom_tooltip = {
		text = TOOLTIPmaester_culture_trigger
		OR = {
			AND = {
				culture_group = andal
				NOT = { culture = old_andal }
			}	
			culture_group = iron_isles_culture
			AND = {
				culture_group = dornish
				NOT = { culture = rhoynar }
			}		
			AND = {
				culture_group = first_men
				NOT = { culture = moon_clansman }
			}
			AND = {
				capital_scope = { region = world_westeros }
				has_global_flag = e_iron_throne_created
				OR = {
					culture = high_valyrian
					culture = western_valyrian
				}
			}
		}
		OR = {
			NOR = {
				religion = pirate
				religion = corsair
			}
			capital_scope = { region = world_westeros }		
		}
	}	
}
can_be_castellan_trigger = {
	NOR = {
		trait = maester
		trait = archmaester
	}
	OR = {
		is_female = no
		liege = { 
			OR = {
				female_warrior_culture_trigger = yes
				primary_title = {
					OR = {
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
						has_law = true_cognatic_succession
					}
				}
			}
		}	
		has_character_flag = special_chancellor			
	}	
	NAND = { 
		is_female = no 
		liege = { has_religion_feature = religion_matriarchal }
	}
	NAND = { 
		is_female = yes
		liege = { has_religion_feature = religion_patriarchal }
	}
	is_adult = yes
	prisoner = no
	is_incapable = no
	NOT = { has_pilgrimage_trait_trigger = yes }
	NOT = { trait = salt_wife }
	NOT = { trait = slave }
	NOT = { trait = dragon }
	NOT = { trait = working_at_bank }
	NOT = { has_landed_title = d_nightswatch }
	liege = { NOT = { culture_group = unoccupied_group } }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			has_character_modifier = nw_steward
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
	NOT = { liege = { has_opinion_modifier = { who = ROOT modifier = opinion_resigned_from_council } } }
}
can_be_chancellor_trigger = {
	NOR = {
		trait = maester
		trait = archmaester
	}
	is_adult = yes
	prisoner = no
	OR = {
		is_female = no
		liege = { 
			OR = {				
				is_close_relative = PREV
				female_warrior_culture_trigger = yes
				primary_title = {
					OR = {
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
						has_law = true_cognatic_succession
					}
				}
			}
		}	
		has_character_flag = special_chancellor			
	}
	NAND = { 
		is_female = no 
		liege = { has_religion_feature = religion_matriarchal }
	}
	NAND = { 
		is_female = yes
		liege = { has_religion_feature = religion_patriarchal }
	}
	is_incapable = no
	NOT = { has_pilgrimage_trait_trigger = yes }
	NOT = { trait = salt_wife }
	NOT = { trait = dragon }
	NOT = { trait = working_at_bank }
	NOT = { has_landed_title = d_nightswatch }
	NOT = { has_landed_title = d_kingsguard }
	liege = { NOT = { culture_group = unoccupied_group } }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			trait = nightswatch
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
	NOT = { liege = { has_opinion_modifier = { who = ROOT modifier = opinion_resigned_from_council } } }
}
can_be_commander_trigger = {
	OR = {
		AND = {
			is_female = no
			NOT = {
				liege = { 
					female_warrior_culture_trigger = yes	
				}
			}	
		}
		AND = {	
			is_female = yes
			liege = { 
				OR = {
					female_warrior_culture_trigger = yes
					culture = sarnorian					
				}
			}
		}
		AND = {
			is_female = no
			liege = { female_warrior_culture_trigger = yes }
			martial = 10
			NOT = { trait = eunuch }
		}
		AND = {
			OR = {
				trait = wildling
				culture = moon_clansman				
			}
			liege = { culture = ROOT }
		}
		martial = 20
		AND = {
			martial = 15
			OR = {
				liege = { is_close_relative = ROOT }
				is_ruler = yes
			}				
		}
		AND = {
			martial = 12
			OR = {
				AND = {
					culture_group = dornish
					liege = { culture = ROOT }
				}				
				AND = {
					trait = proud
					is_ruler = yes
				}	
			}				
		}
		can_use_dragon_abilities_trigger = yes
		trait = horse
		has_character_flag = special_marshal	
	}
	OR = {
		is_adult = yes
		AND = {
			age = 13	
			OR = {
				can_use_dragon_abilities_trigger = yes
				AND = {
					martial = 15
					is_ruler = yes
				}	
			}
		}
	}
	prisoner = no
	NOT = { is_incapable = yes }
	NOT = { has_pilgrimage_trait_trigger = yes }
	NOT = { trait = salt_wife }
	NAND = {
		is_consort = yes
		consort = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_consort } } 
	}
	NOT = { trait = slave }
	NOT = { trait = dragon }
	NOT = { trait = working_at_bank }
	#NOT = { trait = maester }
	#NOT = { trait = archmaester }
	NOT = { has_character_flag = mega_war_remove_leader } #temp flag to remove leaders upon mega war start	
	NOT = { has_character_flag = guru }
	OR = { #NW commander must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = yes
			is_feudal = yes
		}	
		has_character_modifier = nw_ranger
	}
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
	NOT = { has_character_modifier = refusing_to_lead }
}

can_be_marshal_trigger = {
	can_be_commander_trigger = yes

	liege = { NOT = { culture_group = unoccupied_group } }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			has_character_modifier = nw_ranger
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { liege = { has_opinion_modifier = { who = ROOT modifier = opinion_resigned_from_council } } }
}

can_be_treasurer_trigger = {
	NOR = {
		trait = maester
		trait = archmaester
	}
	is_adult = yes
	prisoner = no
	OR = {
		is_female = no
		liege = { 
			OR = {
				is_close_relative = PREV
				female_warrior_culture_trigger = yes
				primary_title = {
					OR = {
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
						has_law = true_cognatic_succession
					}
				}
			}
		}	
		has_character_flag = special_chancellor			
	}
	NAND = { 
		is_female = no 
		liege = { has_religion_feature = religion_matriarchal }
	}
	NAND = { 
		is_female = yes
		liege = { has_religion_feature = religion_patriarchal }
	}
	is_incapable = no
	NOT = { has_pilgrimage_trait_trigger = yes }
	NOT = { trait = salt_wife }
	NOT = { trait = dragon }
	NOT = { trait = working_at_bank }
	NOT = { has_landed_title = d_nightswatch }
	NOT = { has_landed_title = d_kingsguard }
	liege = { NOT = { culture_group = unoccupied_group } }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			has_character_modifier = nw_builder
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
	NOT = { liege = { has_opinion_modifier = { who = ROOT modifier = opinion_resigned_from_council } } }
}

can_be_spymaster_trigger = {
	NOR = {
		trait = maester
		trait = archmaester
	}
	is_adult = yes
	prisoner = no
	is_incapable = no
	NOT = { has_pilgrimage_trait_trigger = yes }
	NOT = { trait = salt_wife }
	NOT = { trait = dragon }
	NOT = { trait = working_at_bank }
	NOT = { has_landed_title = d_nightswatch }
	NOT = { has_landed_title = d_kingsguard }
	liege = { NOT = { culture_group = unoccupied_group } }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			trait = nightswatch
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
	NOT = { liege = { has_opinion_modifier = { who = ROOT modifier = opinion_resigned_from_council } } }
}

can_be_physician_trigger = {
	#liege = { NOT = { religion = jogos_pagan } } #combined with moonsinger
		
	OR = {
		AND = {
			is_adult = yes
			is_ruler = no
		}
		liege = { trait = wildling }
		has_character_flag = special_chancellor	
	}
	prisoner = no
	is_incapable = no
	NOT = { has_pilgrimage_trait_trigger = yes }
	NOT = { trait = salt_wife }
	NOT = { trait = dragon }
	NOT = { trait = working_at_bank }
	NOT = { has_landed_title = c_the_citadel }
	NOT = { has_landed_title = d_nightswatch }
	trigger_if = { #Iron Throne employs Grand Maester
		limit = {
			liege = {
				has_landed_title = e_iron_throne 
				NOT = { has_global_flag = aegons_conquest }
			}
		}
		trait = archmaester
		has_character_flag = grandmaester
	}
	trigger_else_if = { #Maesters/physicians can always be physician
		limit = {
			OR = {
				trait = maester
				trait = archmaester
				trait = physician
				trait = herbologist
			}
		}
		always = yes
	}
	trigger_else = { #Other court physicians
		liege = { NOT = { maester_culture_trigger = yes } } #westerosi can only have maesters/physicians
		OR = {
			learning = 15
			AND = {
				learning = 10
				OR = {
					trait = physician
					trait = herbologist
					trait = mystic
					NOT = { has_dlc = "Reapers" }
				}
			}
			custom_tooltip = { 
				text = educated_court_physician
				hidden_tooltip = {
					has_character_flag = is_court_physician
				}
			}
		}
	}
	liege = { NOT = { culture_group = unoccupied_group } }
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
	NOT = { liege = { has_opinion_modifier = { who = ROOT modifier = opinion_resigned_from_council } } }
}
can_be_spiritual_trigger = {
	is_adult = yes
	prisoner = no
	liege = {
		religion = ROOT
	}
	is_incapable = no
	NOT = { has_pilgrimage_trait_trigger = yes }
	NOT = { trait = salt_wife }
	NOT = { trait = dragon }
	NOT = { trait = working_at_bank }
	NOR = {
		trait = maester
		trait = archmaester
	}
	NAND = {
		is_female = no
		religion_allows_male_temple_holders = no
	}
	NAND = {
		is_female = yes
		religion_allows_female_temple_holders = no
	}
	OR = {
		AND = {
			is_theocracy = yes
			is_ruler = yes
		}	
		OR = {
			has_priest_trait_trigger = yes
			AND = {
				NOR = {
					is_drowned_god_religion_trigger = yes
					religion = the_seven
					religion = rhllor
					religion = rahlooism
					religion = qarth_warlocks
					religion = harpy 
					religion = harpy_reformed
					religion = bearded_priests
					is_summer_rel_trigger = yes
					religion = shadowbinders 
					religion = shadowbinders_reformed
					religion = boash 
					religion = boash_reformed
				}
				NOT = { demesne_size = 1 }
				is_ruler = no
				OR = {
					trait = zealous
					piety = 100
				}	
			}
		}	
	}
	NOT = { has_landed_title = k_the_most_devout }
	liege = { NOT = { culture_group = unoccupied_group } }
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
	NOT = { liege = { has_opinion_modifier = { who = ROOT modifier = opinion_resigned_from_council } } }
}
can_be_advisor_trigger = {
	is_adult = yes
	OR = {
		is_female = no
		liege = { 
			OR = {
				is_close_relative = PREV
				female_warrior_culture_trigger = yes
				primary_title = {
					OR = {
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
						has_law = true_cognatic_succession
					}
				}
			}
		}		
	}
	NAND = { 
		is_female = no 
		liege = { has_religion_feature = religion_matriarchal }
	}
	NAND = { 
		is_female = yes
		liege = { has_religion_feature = religion_patriarchal }
	}
	prisoner = no
	is_incapable = no
	NOT = { has_pilgrimage_trait_trigger = yes }
	NOT = { trait = slave }
	NOT = { trait = dragon }	
	NOT = { trait = working_at_bank }
	NOR = {
		trait = maester
		trait = archmaester
	}
	NOT = { has_landed_title = d_nightswatch }
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
	NOT = { liege = { has_opinion_modifier = { who = ROOT modifier = opinion_resigned_from_council } } }
}
can_be_admiral_trigger = { #and master of ships
	is_adult = yes
	OR = {
		martial = 8
		has_landed_title = c_driftmark
		has_landed_title = c_dragonstone
		has_landed_title = c_whiteharbor
		has_landed_title = c_gulltown
		has_landed_title = c_the_arbor
		has_landed_title = c_oldtown
		has_landed_title = c_seagard
		has_landed_title = c_fair_isle
	}
	OR = {
		is_female = no
		liege = { 
			OR = {
				female_warrior_culture_trigger = yes
				primary_title = {
					OR = {
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
						has_law = true_cognatic_succession
					}
				}
			}
		}		
	}
	NAND = { 
		is_female = no 
		liege = { has_religion_feature = religion_matriarchal }
	}
	NAND = { 
		is_female = yes
		liege = { has_religion_feature = religion_patriarchal }
	}
	prisoner = no
	is_incapable = no
	NOT = { has_pilgrimage_trait_trigger = yes }
	NOT = { trait = slave }
	NOT = { trait = dragon }	
	NOT = { trait = working_at_bank }
	NOR = {
		trait = maester
		trait = archmaester
	}
	NOT = { has_landed_title = d_nightswatch }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			has_character_modifier = nw_builder
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
	NOT = { liege = { has_opinion_modifier = { who = ROOT modifier = opinion_resigned_from_council } } }
}
can_assign_admiral_trigger = {
	OR = {
		is_merchant_republic = yes
		government = pirate_government
		AND = {
			higher_tier_than = DUKE
			is_nomadic = no
			OR = {
				is_seafarer = yes
				capital_scope = { port = yes }
			}	
		}	
	}
}
###REAPER'S DUE####

can_be_maimed_trigger = {
	OR = {
		AND = {
			NOT = { has_dlc = "Reapers" }
			NOT = { trait = maimed }
		}
		AND = {
			has_dlc = "Reapers"
			NOR = {
				trait = one_eyed
				trait = one_handed 
				trait = one_legged 
				trait = disfigured
				trait = mangled
			}
		}
	}
}

physician_bad_trigger = { #todo mental, blinded
	OR = {
		has_severe_disability_trigger = yes
		has_mental_disorder_trigger = yes
	}
}

physician_good_trigger = { #todo is learned
	OR = {
		trait = physician
		trait = herbologist
		any_artifact = {	artifact_type = tin_link count = 2 } #herblore
		any_artifact = {	artifact_type = silver_link } #Medicine
	}
}

is_inaccessible_trigger = {
	custom_tooltip = {
		text = is_inaccessible_tooltip
		hidden_tooltip = {
			OR = {
				trait = in_hiding
				trait = wikid
				trait = on_reaving
				trait = has_missing
				trait = travelling
				trait = troubled_pregnancy
				trait = pregnancy_finishing
				has_character_modifier = mother_minor_rest
				has_character_modifier = in_seclusion
				has_character_modifier = in_meditation
				has_character_modifier = doing_penance
				has_character_modifier = out_traveling
			}
		}
	}
}

prefers_men_trigger = {
	OR = {
		AND = {
			is_female = yes
			NOT = { trait = homosexual }
		}
		AND = {
			is_female = no
			trait = homosexual
		}
	}
}

root_attraction_trigger = {
	#Returns yes when root is attracted the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			ROOT = { prefers_men_trigger = no }
		}
		AND = {
			is_female = no
			ROOT = { prefers_men_trigger = yes }
		}
		ROOT = { #Dornish need not be homosexual if lustful
			culture_group = dornish
			trait = lustful	
		}
	}
}
prev_attraction_trigger = {
	#Returns yes when PREV is attracted to the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			PREV = { prefers_men_trigger = no }
		}
		AND = {
			is_female = no
			PREV = { prefers_men_trigger = yes }
		}
		PREV = { #Dornish need not be homosexual if lustful
			culture_group = dornish
			trait = lustful	
		}
	}
}
attacted_to_root_trigger = {
	#Returns yes when scoped character is attracted to ROOT, based on sex
	OR = {
		AND = {
			ROOT = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			ROOT = { is_female = no }
			prefers_men_trigger = yes
		}	
		AND = { #Dornish need not be homosexual if lustful
			culture_group = dornish
			trait = lustful	
		}
	}
}

attacted_to_prev_trigger = {
	OR = {
		AND = {
			PREV = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			PREV = { is_female = no }
			prefers_men_trigger = yes
		}
		AND = { #Dornish need not be homosexual if lustful
			culture_group = dornish
			trait = lustful	
		}
	}
}

is_unimportant_trigger = {
	NOR = {
		is_married = yes
		is_landed = yes
		has_job_title = yes
		has_minor_title = yes
		is_voter = yes
		AND = {
			NOT = { dynasty = none }
			num_of_dynasty_members = 2
		}
		real_father_even_if_dead = { always = yes }
		mother_even_if_dead = { always = yes }
		any_lover = { ai = no }
		any_close_relative = { ai = no }
		any_friend = { ai = no }
		any_rival = { ai = no }
		any_consort = { ai = no }
		num_of_claims = 1
		has_character_flag = eternal_life_mystic
		trait = horse
		has_character_modifier = in_seclusion
		has_character_modifier = elder_long_life_modifier
		immortal = yes
		trait = dragon
		trait = white_walker
		trait = kingsguard
		can_use_dragon_abilities_trigger = yes
		trait = archmaester
		trait = favored_by_rhllor
		trait = chosen_by_rhllor
		trait = resurrected_by_rhllor
		trait = slave
	}
}

sad_example_trigger = {
	age = 30
	is_married = no
	NOT = { num_of_children = 1 }
}

has_epidemic_disease_trigger = {
	OR = {
		trait = has_bloody_flux
		trait = has_typhoid_fever
		trait = has_grey_plague
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
		trait = old_ones_scourge
		trait = has_red_death
	}
}

developing_epidemic_disease_trigger = {
	OR = {
		has_character_flag = got_tuberculosis
		has_character_flag = got_typhoid_fever
		has_character_flag = got_typhus
		has_character_flag = got_bubonic_plague
		has_character_flag = got_measles
		has_character_flag = got_small_pox
		has_character_flag = got_aztec_disease
		has_character_flag = got_red_death
	}
}

can_be_prophet_of_doom_trigger = {
	is_adult = yes
	is_married = no
	trait = zealous
	is_landed = no
	
	OR = {
		trait = ambitious
		trait = misguided_warrior
		trait = elusive_shadow
		trait = lunatic
		trait = possessed
		trait = paranoid
		trait = stubborn
	}
	NOR = {
		trait = content
		trait = cynical
		trait = temperate
		is_main_spouse = yes
		is_landed = yes
		is_close_relative = ROOT
		trait = dragon
	}
	ai = yes
}

death_murder_trigger = {
	OR = {
		death_murder_unknown_trigger = yes
		death_murder_known_trigger = yes
	}
	
}

death_murder_unknown_trigger = {
	OR = {
		death_reason = death_murder_unknown
		death_reason = death_murder_unknown_poison
		death_reason = death_murder_unknown_fall
		death_reason = death_murder_unknown_arrow
		death_reason = death_murder_unknown_beheading
		death_reason = death_murder_unknown_snakes
		death_reason = death_murder_unknown_strangle
		death_reason = death_murder_unknown_slayed
		death_reason = death_murder_unknown_shadow
		death_reason = death_murder_unknown_hashashin
		death_reason = death_murder_unknown_fear
		death_reason = death_murder_unknown_lightning
		death_reason = death_murder_unknown_combustion
		death_reason = death_murder_unknown_crows
		death_reason = death_murder_unknown_possessed_fall
	}
}

death_murder_known_trigger = {
	OR = {
		death_reason = death_murder
		death_reason = death_murder_poison
		death_reason = death_murder_fall
		death_reason = death_murder_drowning
		death_reason = death_murder_butchered
		death_reason = death_murder_arrow
		death_reason = death_murder_beheading
		death_reason = death_murder_snakes
		death_reason = death_murder_strangle
		death_reason = death_murder_slayed
		death_reason = death_murder_shadow
		death_reason = death_murder_hashashin
		death_reason = death_duel_poison
	}	
}

death_execution_trigger = {
	OR = {
		death_reason = death_execution
		death_reason = death_execution_crushing
		death_reason = death_execution_ash
		death_reason = death_execution_burning
		death_reason = death_execution_hdq
		death_reason = death_execution_bear
		death_reason = death_execution_lion
		death_reason = death_execution_snake_pit
		death_reason = death_execution_disembowelment
		death_reason = death_execution_boiling
		death_reason = death_execution_sawing
		death_reason = death_execution_hunt
		death_reason = death_execution_live_burial
		death_reason = death_execution_hanging
		death_reason = death_execution_immurement
		death_reason = death_execution_beheading
		death_reason = death_execution_wine
		death_reason = death_execution_poison
		death_reason = death_execution_flaying
		death_reason = death_execution_impaling
		death_reason = death_execution_tiger
		death_reason = death_execution_elephants
		death_reason = death_execution_bamboo
		death_reason = death_execution_stoning
		death_reason = death_execution_crucifixion
		death_reason = death_execution_blood_eagle
		death_reason = death_execution_scaphism
		death_reason = death_execution_drowning_pit
		death_reason = death_execution_garrotting
		death_reason = death_execution_horses
		death_reason = death_execution_back_breaking
		death_reason = death_execution_wheel
		death_reason = death_execution_boar
		death_reason = death_execution_eaten
		death_reason = death_execution_aztec_sacrifice
		death_reason = death_execution_dothraki_mutilation
		death_reason = death_execution_dragon
		death_reason = death_execution_torture
		death_reason = death_execution_moon_door
		death_reason = death_execution_snu_snu
		death_reason = death_execution_strangle
		death_reason = death_execution_wolf
		death_reason = death_execution_shadowcat
		death_reason = death_execution_snowbear
		death_reason = death_execution_direwolf
		death_reason = death_execution_brownbear
		death_reason = death_execution_boar_trait
		death_reason = death_execution_dog
		death_reason = death_execution_brazen_bull
		death_reason = death_execution_macabre_banquet
	}	
}
death_execution_torture_trigger = {
	OR = {
		#death_reason = death_execution
		death_reason = death_execution_crushing
		death_reason = death_execution_ash
		death_reason = death_execution_burning
		death_reason = death_execution_hdq
		death_reason = death_execution_bear
		death_reason = death_execution_lion
		death_reason = death_execution_snake_pit
		death_reason = death_execution_disembowelment
		death_reason = death_execution_boiling
		death_reason = death_execution_sawing
		death_reason = death_execution_hunt
		death_reason = death_execution_live_burial
		#death_reason = death_execution_hanging
		death_reason = death_execution_immurement
		#death_reason = death_execution_beheading
		death_reason = death_execution_wine
		death_reason = death_execution_poison
		death_reason = death_execution_flaying
		death_reason = death_execution_impaling
		death_reason = death_execution_tiger
		death_reason = death_execution_elephants
		death_reason = death_execution_bamboo
		death_reason = death_execution_stoning
		death_reason = death_execution_crucifixion
		death_reason = death_execution_blood_eagle
		death_reason = death_execution_scaphism
		death_reason = death_execution_drowning_pit
		death_reason = death_execution_garrotting
		death_reason = death_execution_horses
		death_reason = death_execution_back_breaking
		death_reason = death_execution_wheel
		death_reason = death_execution_boar
		death_reason = death_execution_eaten
		death_reason = death_execution_aztec_sacrifice
		death_reason = death_execution_dothraki_mutilation
		death_reason = death_execution_dragon
		death_reason = death_execution_torture
		death_reason = death_execution_moon_door
		death_reason = death_execution_snu_snu
		death_reason = death_execution_strangle
		death_reason = death_execution_wolf
		death_reason = death_execution_shadowcat
		death_reason = death_execution_snowbear
		death_reason = death_execution_direwolf
		death_reason = death_execution_brownbear
		death_reason = death_execution_boar_trait
		death_reason = death_execution_dog
		death_reason = death_execution_brazen_bull
		death_reason = death_execution_macabre_banquet
	}	
}

death_sacrificed_trigger = {
	OR = {
		death_reason = death_sacrificed
		death_reason = death_sacrificed_norse
		death_reason = death_sacrificed_ancestors
		death_reason = death_sacrificed_abandoned
		death_reason = death_sacrificed_rhllor
		death_reason = death_sacrificed_drowned
		death_reason = death_execution_aztec_sacrifice
	}	
}

death_accident_trigger = {
	OR = {
		death_reason = death_accident
		death_reason = death_accident_generic_beast
		death_reason = death_accident_bear
		death_reason = death_accident_boar
		death_reason = death_accident_drowning
		death_reason = death_accident_arrow
		death_reason = death_accident_tiger
		death_reason = death_accident_snakes
		death_reason = death_accident_fall
		death_reason = death_accident_faceless
		death_reason = death_accident_horse
		death_reason = death_accident_dragon_hatching
		death_reason = death_accident_hunting
		death_reason = death_accident_wildfire
		death_reason = death_accident_iron_throne
		death_reason = death_accident_wyvern
	}
}

death_suicide_trigger = {
	OR = {
		death_reason = death_suicide
		death_reason = death_suicide_fall
		death_reason = death_suicide_hanging
		death_reason = death_suicide_poison
		death_reason = death_suicide_drank_wildfire
	}
}

death_duel_trigger = {
	OR = {
		death_reason = death_duel
		death_reason = death_mission_duel
		death_reason = death_battle_duel
		death_reason = death_legendary_fail_duel
		death_reason = death_legendary_win_duel
		death_reason = death_claim_duel_attacker
		death_reason = death_claim_duel_defender
		death_reason = death_duel_trial_by_seven
		death_reason = death_duel_battle
		death_reason = death_duel_trial_by_combat
		death_reason = death_duel_melee
		death_reason = death_duel_regency
		death_reason = death_duel_rogue_kg
		death_reason = death_duel_vs_rogue_kg
		death_reason = death_duel_kingsmoot
		death_reason = death_duel_honour
		death_reason = death_duel_murder_attempt
		death_reason = death_mission_duel
		death_reason = death_battle_duel
		death_reason = death_duel_poison
	}
}

block_general_event_trigger = {
	OR = {	
		trait = incapable
		is_adult = no
		prisoner = yes
		is_inaccessible_trigger = yes
		hidden_trigger = { is_alive = no }
		NOT = { NOT_mythical_creature_trigger = yes }
	}
}
gender_equality_trigger = {
	OR = {
		AND = {
			culture_group = hyrkoon_group
			liege = { culture_group = PREV }
		}
		AND = {
			is_landed = yes
			primary_title = { 
				OR = {
					has_law = enatic_cognatic_succession
					has_law = enatic_succession
				}	
			}
		}
		AND = {
			is_landed = no
			liege = {
				primary_title = {
					OR = {
						has_law = enatic_cognatic_succession
						has_law = enatic_succession
					}
				} 
			}
		}
		has_religion_feature = religion_equal
		has_religion_feature = religion_feature_rhoynar_pagan
		has_religion_feature = religion_matriarchal
		# has_game_rule = {
			# name = gender
			# value = all
		# }
	}
}

male_can_hold_minor_title_trigger = {
	is_female = no
	OR = {
		liege = { NOT = { culture_group = hyrkoon_group } }
		martial = 15
		prestige = 100
	}
	custom_tooltip = {
		text = tooltip_not_matriarchal_liege_religion_feature
		NOR = {
			has_religion_feature = religion_matriarchal
			liege = {
				has_religion_feature = religion_matriarchal
			}
		}
	}
}

female_can_hold_minor_title_trigger = {
	is_female = yes
	OR = {
		AND = {
			culture_group = hyrkoon_group
			liege = { culture_group = PREV }
		}
		AND = {
			is_landed = yes
			primary_title = { 
				OR = {
					has_law = enatic_cognatic_succession
					has_law = enatic_succession
				}	
			}
		}
		AND = {
			is_landed = no
			liege = {
				primary_title = {
					OR = {
						has_law = enatic_cognatic_succession
						has_law = enatic_succession
					}
				} 
			}
		}
		custom_tooltip = {
			text = tooltip_feminist_liege_religion_feature
			AND = {
				OR = {
					has_religion_feature = religion_equal
					has_religion_feature = religion_feature_rhoynar_pagan
					has_religion_feature = religion_matriarchal
				}
				liege = {
					has_religion_feature = religion_equal
					has_religion_feature = religion_feature_rhoynar_pagan
					has_religion_feature = religion_matriarchal
				}
			}
		}
	}
}

female_can_hold_minor_commander_title_trigger = {
	is_female = yes
	OR = {
		has_character_flag = special_marshal
		# AND = {
			# trait = shieldmaiden
			# liege = { religion = ROOT }
		# }
		AND = {
			is_member_of_any_warrior_lodge_trigger = yes
			liege = { religion = ROOT }
		}
		liege = { 
			OR = {
				culture_group = hyrkoon_group
				culture = sarnorian				
			}
		}
		custom_tooltip = {
			text = tooltip_feminist_liege_religion_feature
			AND = {
				OR = {
					has_religion_feature = religion_equal
					has_religion_feature = religion_feature_rhoynar_pagan
					has_religion_feature = religion_matriarchal
				}
				liege = {
					has_religion_feature = religion_equal
					has_religion_feature = religion_feature_rhoynar_pagan
					has_religion_feature = religion_matriarchal
				}
			}
		}
	}
}

#Has same education as prev?
has_prev_education_trigger = {
	OR = {
		AND = {
			has_education_martial_trigger = yes
			PREV = { has_education_martial_trigger = yes }
		}
		AND = {
			has_education_diplomacy_trigger = yes
			PREV = { has_education_diplomacy_trigger = yes }
		}
		AND = {
			has_education_stewardship_trigger = yes
			PREV = { has_education_stewardship_trigger = yes }
		}
		AND = {
			has_education_intrigue_trigger = yes
			PREV = { has_education_intrigue_trigger = yes }
		}
		AND = {
			has_education_learning_trigger = yes
			PREV = { has_education_learning_trigger = yes }
		}
	}
}

useless_character_trigger = {
	OR = {
		NOT = { health = 2.5 }
		trait = lunatic
		trait = maimed
		trait = infirm
		trait = incapable
		trait = mangled
		trait = severely_injured
		trait = imbecile
		trait = inbred
		trait = crippled
	}
}

relationship_with_root_trigger = {
	OR = {
		is_lover = ROOT
		is_friend = ROOT
		is_rival = ROOT
	}
}

is_widow_or_widower_trigger = {
	is_married = no
	OR = {
		trait = widowed
		any_spouse_even_if_dead = {
			always = yes
		}
	}
}

FROMs_religion_is_playable_trigger = {
	ROOT_FROM = {
		NOR = {
			AND = { #Means you're not allowed to play (most) Pagans
				religion_group = pagan_group
				NOT = { has_dlc = "The Old Gods" }
			}
			religion_group = dragon_rel_group
			religion_group = unoccupied_rel_group
		}
	}	
}
ROOTs_religion_is_playable_trigger = { #For targeted decision where FROM is the player
	ROOT = {
		NOR = {
			AND = { #Means you're not allowed to play (most) Pagans
				religion_group = pagan_group
				NOT = { has_dlc = "The Old Gods" }
			}
			religion_group = dragon_rel_group
			religion_group = unoccupied_rel_group
		}
	}	
}
###Use the actual is_<family member>_of = scope triggers now
family_of_root_trigger = { #use is_blood_relative_of_root_trigger for all relatives
	OR = {
		is_close_relative = ROOT #spouse, parents, children, siblings, grandparents, grandchildren
		cousin_of_root_trigger = yes #cousins
		sibling_child_of_root_trigger = yes #nephews, nieces
		parent_sibling_of_root_trigger = yes #aunts, uncles
		sibling_in_law_of_root_trigger = yes #brothers and sisters in law
	}
}

cousin_of_root_trigger = {
	is_cousin_of = ROOT
}

sibling_of_root_trigger = {
	sibling = ROOT
}

full_sibling_of_root_trigger = {
	sibling = ROOT
	ROOT = { 
		mother_even_if_dead = { is_parent_of = PREVPREV } 
		father_even_if_dead = { is_parent_of = PREVPREV } 
	}
}

sibling_child_of_root_trigger = {
	is_nibling_of = ROOT
}

parent_sibling_of_root_trigger = {
	is_aunt_uncle_of = ROOT
}

grandchild_of_root_trigger = {
	is_grandchild_of = ROOT
}

sibling_in_law_of_root_trigger = {
	OR = {
		mother_even_if_dead = { any_child_even_if_dead = { is_married = ROOT } }
		father_even_if_dead = { any_child_even_if_dead = { is_married = ROOT } }
		any_spouse = { mother_even_if_dead = { is_parent_of = ROOT } }
		any_spouse = { father_even_if_dead = { is_parent_of = ROOT } }
	}
}

relative_in_law_of_root_trigger = {
	OR = {
		any_child = { any_spouse = { character = ROOT } }
		#any_spouse = { mother_even_if_dead = { any_child = { any_spouse = { character = ROOT } } } }
		#any_spouse = { father_even_if_dead = { any_child = { any_spouse = { character = ROOT } } } }
	}
}

is_murder_quest_target_of_prev_trigger = { #if readded to mod, this condition is added to all ordinary murder plot events
	PREVPREV = {
		has_quest = quest_the_assassins_assassination
		quest_target = { character = PREVPREV }
	}
}

# assassins_appropriate_target_trigger = {
	# is_within_diplo_range = ROOT
	# is_adult = yes
	# is_quest_target = no

	# OR = {
		# is_ruler = no
		# AND = {
			# ROOT = {
				# society_rank = {
					# rank == 3
					# society = the_assassins
				# }
			# }
			# primary_title = { higher_real_tier_than = COUNT }
		# }
		# AND = {
			# ROOT = {
				# society_rank = {
					# rank == 2
					# society = the_assassins
				# }
			# }
			# primary_title = { lower_real_tier_than = EMPEROR }
		# }
		# AND = {
			# ROOT = {
				# society_rank = {
					# rank == 1
					# society = the_assassins
				# }
			# }
			# primary_title = { lower_real_tier_than = DUKE }
		# }
	# }
# }

interesting_face_trigger = {
	OR = {
		trait = fair
		has_fashionable_groomed_trigger = yes
		trait = ugly
		trait = uncouth
		has_scarred_trait_trigger = yes
		is_ill = yes
		trait = disfigured
		trait = blinded
		trait = one_eyed
		trait = leper
		trait = harelip
		is_strong_trigger = yes
		is_weak_trigger = yes
		trait = lunatic
		trait = possessed
		trait = rabies
		trait = horse
		trait = greyscale_scarred
		trait = disfigured_AGOT
		trait = has_greyscale
		trait = burned
	}
}

# can_pay_assassins_debt = {
	# OR = {
		# AND = {
			# is_variable_equal = { which = assassins_debt value = 50 }
			# wealth = 50
		# }
		# AND = {
			# is_variable_equal = { which = assassins_debt value = 250 }
			# wealth = 250
		# }
		# AND = {
			# is_variable_equal = { which = assassins_debt value = 300 }
			# wealth = 300
		# }
		# AND = {
			# is_variable_equal = { which = assassins_debt value = 500 }
			# wealth = 500
		# }
	# }
# }

is_rich_holding = {
	OR = {
		yearly_income = 20
		base_value_4_trigger = yes
	}
}
is_richer_holding = {
	OR = {
		yearly_income = 24
		base_value_5_trigger = yes
	}
}

has_society_currency_trivial_trigger = {
	society_currency >= 15
}

has_society_currency_tiny_trigger = {
	society_currency >= 50
}

has_society_currency_minor_trigger = {
	society_currency >= 150
}

has_society_currency_medium_trigger = {
	society_currency >= 300
}

has_society_currency_major_trigger = {
	society_currency >= 500
}

is_ill_trigger = {
	OR = {
		has_disease_trigger = yes
	}
}

is_devil_worshiper_trigger = {
	custom_tooltip = {
		text = IS_DEVIL_WORSHIPPER_TRIGGER
		OR = {
			society_member_of = the_satanists #The Great Other
			society_member_of = the_cold_ones #The Others
			society_member_of = the_plaguebringers #The Stranger
			society_member_of = the_cult_of_kali #The Storm God
			society_member_of = the_trollcrafters #Cult of the Starry Wisdom
		}
	}
}

has_positive_congenital_trigger = {
	OR = {
		trait = strong
		trait = fair
		trait = quick
		trait = genius
		trait = tall
	}
}

has_negative_congenital_trigger = {
	OR = {
		trait = ugly
		trait = clubfooted
		trait = hunchback
		trait = dwarf
		trait = harelip
		trait = stutter
		trait = lisp
		trait = slow
		trait = inbred
		trait = weak
		trait = imbecile
	}
}

is_christian_monastic_member_trigger = {
	always = no
	# OR = {
		# society_member_of = monastic_order_orthodox
		# society_member_of = monastic_order_benedictine
		# society_member_of = monastic_order_dominican
		# society_member_of = monastic_order_nestorian
		# society_member_of = monastic_order_monophysite
	# }
}

is_monastic_member_trigger = {
	always = no
	# OR = {
		# is_dharmic_monastic_member_trigger = yes
		# is_christian_monastic_member_trigger = yes
	# }
}

is_ascetic_trigger = { #vow of celibacy
	custom_tooltip = {
		text = is_ascetic_tooltip
		OR = {
			trait = kingsguard
			trait = nightswatch
			trait = maester
			trait = archmaester
			trait = silent_sister
			trait = drowned
			trait = grace
			trait = bearded_priest
			trait = septa
			trait = septon
			trait = monk
			trait = nun
		}
	}	
}

is_virgin_trigger = {
	NOR = {
		any_lover = { always = yes }
		any_child_even_if_dead = { always = yes }
		any_spouse_even_if_dead = { always = yes }
		has_focus = focus_seduction
		is_pregnant = yes
		trait = pregnant
		trait = lustful
		trait = hedonist
		trait = seducer
		trait = seductress
		trait = lovers_pox
		trait = has_aztec_disease
		trait = syphilitic
	}
	OR = {
		NOT = { age = 25 }
		trait = celibate
		trait = chaste
		trait = shy
		is_ascetic_trigger = yes
	}
}
print_scope_trigger = {
	log = "------------------------------"
	log = "- Printing the current scope -"
	log = "- This: [This.GetName][This.GetBestName]"
	log = "- Root: [Root.GetName][Root.GetBestName]"
	log = "- Prev: [Prev.GetName][Prev.GetBestName]"
	log = "- PrevPrev: [PrevPrev.GetName][PrevPrev.GetBestName]"
	log = "- PrevPrevPrev: [PrevPrevPrev.GetName][PrevPrevPrev.GetBestName]"
	log = "- PrevPrevPrevPrev: [PrevPrevPrevPrev.GetName][PrevPrevPrevPrev.GetBestName]"
	log = "- From: [From.GetName][From.GetBestName]"
	log = "- FromFrom: [FromFrom.GetName][FromFrom.GetBestName]"
	log = "- FromFromFrom: [FromFromFrom.GetName][FromFromFrom.GetBestName]"
	log = "- FromFromFromFrom: [FromFromFromFrom.GetName][FromFromFromFrom.GetBestName]"
	log = "- Event_target:test_target1: [test_target1.GetName][test_target1.GetBestName]"
	log = "- Event_target:test_target2: [test_target2.GetName][test_target2.GetBestName]"
	log = "- Event_target:test_target3: [test_target3.GetName][test_target3.GetBestName]"
	log = "------------------------------"
}

is_secret_religious_society_member_trigger = {
	#society_member_of = secret_religious_cult
}

is_christian_secret_religious_society_member_trigger = {
	# society_member_of = secret_religious_cult
	# secret_religion_group = christian
}

is_openly_of_prevs_secret_religion_trigger = {
	religion = { target = PREV target_type = secret }
}	

is_openly_of_roots_secret_religion_trigger = {
	religion = { target = ROOT target_type = secret }
}

has_sympathy_for_true_religion_of_prev_trigger = { 
	OR = { 
		AND = {  
			trait = sympathy_westerosi
			PREV = { religion_group = westerosi_religion } 
		} 
		AND = {  
			trait = sympathy_drowned_god
			PREV = { religion_group = drowned_god_group } 
		} 
		AND = {  
			trait = sympathy_essos_group
			PREV = { religion_group = essos_group } 
		} 
		AND = {  
			trait = sympathy_ghiscar_rel
			PREV = { religion_group = ghiscar_rel } 
		} 
		AND = {  
			trait = sympathy_valyrian_rel_group
			PREV = { religion_group = valyrian_rel_group } 
		} 
		AND = {  
			trait = sympathy_wildling_religion
			PREV = { religion_group = wildling_religion } 
		} 
		AND = {  
			trait = sympathy_sarnor_rel
			PREV = { religion_group = sarnor_rel } 
		} 
		AND = {  
			trait = sympathy_qarth_rel
			PREV = { religion_group = qarth_rel } 
		} 
		AND = {  
			trait = sympathy_far_east_group
			PREV = { religion_group = far_east_group } 
		} 
		AND = {  
			trait = sympathy_ibben_rel
			PREV = { religion_group = ibben_rel } 
		} 
		AND = {  
			trait = sympathy_dothraki_rel_group
			PREV = { religion_group = dothraki_rel_group } 
		} 
		AND = {  
			trait = sympathy_jogos_rel_group
			PREV = { religion_group = jogos_rel_group } 
		} 
		AND = {  
			trait = sympathy_lhazar_rel_group
			PREV = { religion_group = lhazar_rel_group } 
		} 
		AND = {  
			trait = sympathy_summer_rel_group
			PREV = { religion_group = summer_rel_group } 
		} 
		AND = {  
			trait = sympathy_sothoryos_rel_group
			PREV = { religion_group = sothoryos_rel_group } 
		} 
		AND = {  
			trait = sympathy_pirate_group
			PREV = { religion_group = pirate_group } 
		} 
		AND = {  
			trait = sympathy_pagans
			PREV = { religion_group = pagan_group } 
		} 
	}	
}

has_sympathy_for_true_religion_of_root_trigger = { 
	OR = { 
		AND = {  
			trait = sympathy_westerosi
			ROOT = { religion_group = westerosi_religion } 
		} 
		AND = {  
			trait = sympathy_drowned_god
			ROOT = { religion_group = drowned_god_group } 
		} 
		AND = {  
			trait = sympathy_essos_group
			ROOT = { religion_group = essos_group } 
		} 
		AND = {  
			trait = sympathy_ghiscar_rel
			ROOT = { religion_group = ghiscar_rel } 
		} 
		AND = {  
			trait = sympathy_valyrian_rel_group
			ROOT = { religion_group = valyrian_rel_group } 
		} 
		AND = {  
			trait = sympathy_wildling_religion
			ROOT = { religion_group = wildling_religion } 
		} 
		AND = {  
			trait = sympathy_sarnor_rel
			ROOT = { religion_group = sarnor_rel } 
		} 
		AND = {  
			trait = sympathy_qarth_rel
			ROOT = { religion_group = qarth_rel } 
		} 
		AND = {  
			trait = sympathy_far_east_group
			ROOT = { religion_group = far_east_group } 
		} 
		AND = {  
			trait = sympathy_ibben_rel
			ROOT = { religion_group = ibben_rel } 
		} 
		AND = {  
			trait = sympathy_dothraki_rel_group
			ROOT = { religion_group = dothraki_rel_group } 
		} 
		AND = {  
			trait = sympathy_jogos_rel_group
			ROOT = { religion_group = jogos_rel_group } 
		} 
		AND = {  
			trait = sympathy_lhazar_rel_group
			ROOT = { religion_group = lhazar_rel_group } 
		} 
		AND = {  
			trait = sympathy_summer_rel_group
			ROOT = { religion_group = summer_rel_group } 
		} 
		AND = {  
			trait = sympathy_sothoryos_rel_group
			ROOT = { religion_group = sothoryos_rel_group } 
		} 
		AND = {  
			trait = sympathy_pirate_group
			ROOT = { religion_group = pirate_group } 
		} 
		AND = {  
			trait = sympathy_pagans
			ROOT = { religion_group = pagan_group } 
		} 
	}
}	

ok_sr_induction_mission_target_trigger = {
	is_adult = yes
	NOT = { secret_religion = ROOT }
	NOT = { religion = { target_type = secret target = ROOT } }
	prisoner = no
	is_incapable = no
	is_inaccessible_trigger = no
	NOT = { has_character_modifier = secret_religion_sympathy_timer }
	OR = {
		religion_group = { target_type = secret target = ROOT }
		has_sympathy_for_true_religion_of_root_trigger = yes
	}
}

ok_sr_sympathy_mission_target_trigger = {
	has_secret_religion_trait_trigger = no
	ROOT = {
		NOT = { secret_religion = { target_type = public target = PREV } }
		# NOR = {
			# AND = {
				# true_religion_group = christian
				# PREV = { trait = sympathy_christendom }
			# }

		# }
	}
	ROOT = { PREV = { is_openly_of_prevs_secret_religion_trigger = no } }
	ROOT = { PREV = { has_sympathy_for_true_religion_of_prev_trigger = no } }
	prisoner = no
	is_adult = yes
	is_incapable = no
	is_inaccessible_trigger = no
	NOT = { has_character_modifier = secret_religion_sympathy_timer }
}

has_prevs_secret_religion_truly_trigger = {
	secret_religion = { target = PREV target_type = true }
}

has_roots_secret_religion_truly_trigger = {
	secret_religion = { target = ROOT target_type = true }
}

has_my_liege_secret_religion_truly_trigger = {
	secret_religion = { target = event_target:my_liege target_type = true }
}


is_in_prevs_interesting_society_trigger = {
	# OR = {
		# AND = {
			# society_member_of = secret_religious_society_catholic
			# PREV = { interested_in_society = secret_religious_society_catholic }
		# }
		
	# }
}

shares_prevs_secret_religion_trigger = {
	secret_religion = PREV
}

character_knows_prev_trigger = {
	OR = {
		is_close_relative = PREV
		is_lover = PREV
		is_friend = PREV
		is_rival = PREV
		any_courtier_or_vassal = { character = PREVPREV }
		is_liege_or_above = PREV
		dynasty = PREV
		same_liege = PREV
		AND = {
			is_within_diplo_range = PREV
			PREV = { independent = yes } 
		}
	}
}

shares_true_religion_group_with_prev_trigger = {
	true_religion_group = PREV
}
is_openly_of_prevs_true_religion_group = {
	religion_group = { target = PREV target_type = true }
}
is_visible_to_self_trigger = { #For hidden modifiers
	custom_tooltip = {
		text =  is_visible_to_self_trigger_tooltip
		character = FROM
	}
}

has_any_char_old_religion = {
	# OR = {
		# AND = {
			# has_character_flag = character_was_catholic
	    	# any_character = {
	    		# religion = catholic
	    	# }
	    # }
	  
	# }
}

can_add_admin_bonus_trigger = {
	NAND = {
		has_province_modifier = harvest_festivals
		has_province_modifier = inspired_peasantry
		has_province_modifier = new_roads
	}
}

can_be_sabotaged_trigger = {
	NAND = {
		has_province_modifier = sabotaged_buildings
		has_province_modifier = sabotaged_defences
		has_province_modifier = sabotaged_unrest
	}
}

has_assassins_prerequisites = {
	# age = 16
	# true_religion_shiite_trigger = yes
	# OR = {
		# is_female = no
		# has_game_rule = {
			# name = gender
			# value = all
		# }
	# }
}
has_common_devilworship_prerequisites = {
	age = 16
	OR = {
		trait = cynical
		trait = hedonist
		trait = cannibal_trait
		trait = impaler
		trait = ruthless
		trait = cruel
		trait = possessed
		trait = lunatic
	}
	NAND = {
		piety = 0
		OR = {
			trait = kind
			trait = honorable
			trait = just
		}
	}
	# custom_tooltip = {
		# text = must_be_a_sinner_tooltip
		# hidden_tooltip = {
			
		# }
	# }
}

has_satanists_prerequisites = {
	has_common_devilworship_prerequisites = yes
	OR = {
		religion = rhllor
		religion = rahlooism
	}
	NOT = { trait = favored_by_rhllor }
	NOT = { trait = chosen_by_rhllor }
}

has_trollcrafters_prerequisites = {
	has_common_devilworship_prerequisites = yes
	hidden_trigger = {
		NOR = {
			religion = rhllor
			is_drowned_god_religion_trigger = yes
			is_old_gods_religion_trigger = yes
			religion = the_seven
			religion = rahlooism
		}
	}
}

has_cult_of_kali_prerequisites = {
	has_common_devilworship_prerequisites = yes
	is_drowned_god_religion_trigger = yes
}

has_cold_ones_prerequisites = {
	has_common_devilworship_prerequisites = yes
	is_old_gods_religion_trigger = yes
}

has_plaguebringers_prerequisites = {
	has_common_devilworship_prerequisites = yes
	religion = the_seven
}

same_society_rank_as_prev_trigger = {
	OR = {
		AND = {
			society_rank == 1
			PREV = { society_rank == 1 }
		}
		AND = {
			society_rank == 2
			PREV = { society_rank == 2 }
		}
		AND = {
			society_rank == 3
			PREV = { society_rank == 3 }
		}
		AND = {
			society_rank == 4
			PREV = { society_rank == 4 }
		}
	}
}

higher_society_rank_than_prev_trigger = {
	OR = {
		AND = {
			PREV = { society_rank == 1 }
			society_rank > 1
		}
		AND = {
			PREV = { society_rank == 2 }
			society_rank > 2
		}
		AND = {
			PREV = { society_rank == 3 }
			society_rank > 3
		}
	}
}

higher_society_rank_than_root_trigger = {
	OR = {
		AND = {
			ROOT = { society_rank == 1 }
			society_rank > 1
		}
		AND = {
			ROOT = { society_rank == 2 }
			society_rank > 2
		}
		AND = {
			ROOT = { society_rank == 3 }
			society_rank > 3
		}
	}
}

#returns true if scoped character already likes ROOT and could be physically attracted to them
possibly_romantically_interested_in_ROOT_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_former_lover = ROOT }
	attacted_to_root_trigger = yes
	NOT = { trait = celibate }
	NOT = { trait = eunuch }
	NOT = { trait = incapable }
	OR = {
		opinion = { who = ROOT value = -20 }
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
	OR = {
		NOT = { is_immediate_relative_ROOT_trigger = yes }
		practices_incest_trigger = yes
		trait = lustful
		trait = lunatic
		trait = ruthless
	}
}

#returns true if scoped character is already liked by ROOT and ROOT could be physically attracted to them
ROOT_possibly_romantically_interested_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_former_lover = ROOT }
	root_attraction_trigger = yes
	OR = { 
		reverse_opinion = { who = ROOT value = -20 }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
	ROOT = {
		NOT = { trait = celibate }
		NOT = { trait = eunuch }
		NOT = { trait = incapable }
		OR = {
			NOT = { is_immediate_relative_PREV_trigger = yes }
			practices_incest_trigger = yes
			trait = lustful
			trait = lunatic
			trait = ruthless
		}
	}
}

#returns true if scoped character and ROOT are somewhat likely to fancy each other
possibly_romantically_interested_in_each_other_trigger = {
	possibly_romantically_interested_in_ROOT_trigger = yes
	ROOT_possibly_romantically_interested_trigger = yes
	
}

looting_artifact_event_religious_artifacts_trigger = {
	FROM = {
		any_artifact = {
			has_artifact_flag = looted_artifact_tooltip_1
			has_artifact_flag = religious
		}
		# NAND = {
			# any_artifact = {
				# has_artifact_flag = looted_artifact_tooltip_1
				# has_artifact_flag = catholic
				# ROOT = { religion = catholic }
			# }
		# }
		# NAND = {
			# any_artifact = {
				# has_artifact_flag = looted_artifact_tooltip_1
				# has_artifact_flag = christian
				# ROOT = { religion_group = christian }
			# }
		# }
		
	}
}
can_be_asked_to_leave_court_trigger = {
	NOR = {
		custom_tooltip = { #To avoid double negation
			text = is_a_child_tt
			is_adult = no
		}
		prisoner = yes
		trait = incapable
		is_ruler = yes
		has_job_title = yes

		#custom tooltip for minor titles
		custom_tooltip = {
			text = is_regent_commander_or_physician_tt
			OR = {
				has_minor_title = title_regent
				has_minor_title = title_appointed_regent
				has_minor_title = title_commander
				#has_minor_title = title_court_physician
				is_voter = yes
			}
		}

		custom_tooltip = {
			text = is_spouse_consort_or_of_your_dynasty
			OR = {
				is_married = FROM
				is_consort = FROM
				is_close_relative = FROM
			}
		}

		is_primary_heir = yes

		#trigger_if has Reaper's Due
		trigger_if = {
			limit = { has_dlc = "Reapers"}
			in_seclusion = yes
		}
		custom_tooltip = {
			text = is_inaccessible_tt
			is_inaccessible_trigger = yes
		}

		#Special circumstances
		custom_tooltip = {
			text = is_character_in_important_chain_of_events_tt
			has_character_flag = eternal_life_mystic
			has_character_flag = immortal_rival
			has_character_flag = flag_special_event_character
			has_character_flag = is_death
			#is_immune_to_pruning = yes
			#historical = yes
		}

		trigger_if = {
			limit = {
				trait = horse
			}
			trait = horse
		}	
		trait = slave
		trait = kingsguard
		trait = nightswatch
		trait = archmaester		
	}
}

has_a_seer_modifier_trigger = {
	OR = {
		has_character_modifier = fulfilled_vision_great
		has_character_modifier = fulfilled_vision_ok
		has_character_modifier = fulfilled_vision_bad
		has_character_modifier = fulfilled_vision_worst
	}
}

has_an_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = good_relationship_omen
		has_character_modifier = good_power_omen
		has_character_modifier = bad_battle_omen
		has_character_modifier = bad_relationship_omen
		has_character_modifier = bad_power_omen
	}
}
has_positive_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = good_relationship_omen
		has_character_modifier = good_power_omen
	}
}

has_negative_omen_modifier_trigger = {
	OR = {
		has_character_modifier = bad_battle_omen
		has_character_modifier = bad_relationship_omen
		has_character_modifier = bad_power_omen
	}
}

has_battle_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = bad_battle_omen
	}
}

has_relationship_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_relationship_omen
		has_character_modifier = bad_relationship_omen
	}
}

has_power_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_power_omen
		has_character_modifier = bad_power_omen
	}
}

has_bottom_tier_education_trait_trigger = {
	OR = {
		trait = naive_appeaser
		trait = misguided_warrior
		trait = indulgent_wastrel
		trait = amateurish_plotter
		trait = detached_priest
	}
}

has_2nd_tier_education_trait_trigger = {
	OR = {
		trait = underhanded_rogue
		trait = tough_soldier
		trait = thrifty_clerk
		trait = flamboyant_schemer
		trait = martial_cleric
	}
}

has_3rd_tier_education_trait_trigger = {
	custom_tooltip = {
		text = tribute_interaction_level4_education_tt
		hidden_trigger = {	
			OR = {
				trait = charismatic_negotiator
				trait = skilled_tactician
				trait = fortune_builder
				trait = intricate_webweaver
				trait = scholarly_theologian
			}
		}
	}
}

has_top_tier_education_trait_trigger = {
	custom_tooltip = {
		text = tribute_interaction_level4_education_tt
		hidden_trigger = {
			OR = {
				trait = elusive_shadow
				trait = grey_eminence
				trait = midas_touched
				trait = brilliant_strategist
				trait = mastermind_theologian
			}
		}
	}
}

has_medium_education_trait_trigger = {
	OR = {
		has_2nd_tier_education_trait_trigger = yes
		has_3rd_tier_education_trait_trigger = yes
	}
}

has_childhood_horoscope_modifier_trigger = {
	OR = {
		has_character_modifier = guided_by_horoscope_diplomacy
		has_character_modifier = guided_by_horoscope_martial
		has_character_modifier = guided_by_horoscope_stewardship
		has_character_modifier = guided_by_horoscope_intrigue
		has_character_modifier = guided_by_horoscope_learning
	}
}

is_born_in_january_trigger = {
	month_of_birth = 1
	NOT = { month_of_birth = 2 }
}
is_born_in_february_trigger = {
	month_of_birth = 2
	NOT = { month_of_birth = 3 }
}
is_born_in_march_trigger = {
	month_of_birth = 3
	NOT = { month_of_birth = 4 }
}
is_born_in_april_trigger = {
	month_of_birth = 4
	NOT = { month_of_birth = 5 }
}
is_born_in_may_trigger = {
	month_of_birth = 5
	NOT = { month_of_birth = 6 }
}
is_born_in_june_trigger = {
	month_of_birth = 6
	NOT = { month_of_birth = 7 }
}
is_born_in_july_trigger = {
	month_of_birth = 7
	NOT = { month_of_birth = 8 }
}
is_born_in_august_trigger = {
	month_of_birth = 8
	NOT = { month_of_birth = 9 }	
}
is_born_in_september_trigger = {
	month_of_birth = 9
	NOT = { month_of_birth = 10 }	
}
is_born_in_october_trigger = {
	month_of_birth = 10
	NOT = { month_of_birth = 11 }	
}
is_born_in_november_trigger = {
	month_of_birth = 11
	NOT = { month_of_birth = 12 }	
}
is_born_in_december_trigger = {
	month_of_birth = 12
}

is_born_under_Aries_trigger = {
	OR = {
		AND = {
			is_born_in_march_trigger = yes
			day_of_birth = 20 #including this
		}
		AND = {
			is_born_in_april_trigger = yes
			NOT = { day_of_birth = 19 } #not 19th, so 18th at the latest
		}
	}
}
is_born_under_Taurus_trigger = {
	OR = {
		AND = {
			is_born_in_april_trigger = yes
			day_of_birth = 19
		}
		AND = {
			is_born_in_may_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}
is_born_under_Gemini_trigger = {
	OR = {
		AND = {
			is_born_in_may_trigger = yes
			day_of_birth = 20
		}
		AND = {
			is_born_in_june_trigger = yes
			NOT = { day_of_birth = 21 }
		}
	}
}
is_born_under_Cancer_trigger = {
	OR = {
		AND = {
			is_born_in_june_trigger = yes
			day_of_birth = 21
		}
		AND = {
			is_born_in_july_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Leo_trigger = {
	OR = {
		AND = {
			is_born_in_july_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_august_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Virgo_trigger = {
	OR = {
		AND = {
			is_born_in_august_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_september_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Libra_trigger = {
	OR = {
		AND = {
			is_born_in_september_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_october_trigger = yes
			NOT = { day_of_birth = 23 }
		}
	}
}
is_born_under_Scorpius_trigger = {
	OR = {
		AND = {
			is_born_in_october_trigger = yes
			day_of_birth = 23
		}
		AND = {
			is_born_in_november_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Sagittarius_trigger = {
	OR = {
		AND = {
			is_born_in_november_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_december_trigger = yes
			NOT = { day_of_birth = 21 }
		}
	}
}
is_born_under_Capricorn_trigger = {
	OR = {
		AND = {
			is_born_in_december_trigger = yes
			day_of_birth = 21
		}
		AND = {
			is_born_in_january_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}
is_born_under_Aquarius_trigger = {
	OR = {
		AND = {
			is_born_in_january_trigger = yes
			day_of_birth = 19
		}
		AND = {
			is_born_in_february_trigger = yes
			NOT = { day_of_birth = 18 }
		}
	}
}
is_born_under_Pisces_trigger = {
	OR = {
		AND = {
			is_born_in_february_trigger = yes
			day_of_birth = 18
		}
		AND = {
			is_born_in_march_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}

is_romantic_zodiac_match_with_root_trigger = {
	OR = {
		AND = {
			is_born_under_Aries_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Sagittarius_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Taurus_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Capricorn_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Gemini_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Cancer_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Leo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Gemini_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Virgo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Cancer_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Libra_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Sagittarius_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Scorpius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Capricorn_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Sagittarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Capricorn_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Aquarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Gemini_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Pisces_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Cancer_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
	}
}

is_romantic_zodiac_mismatch_with_root = {
	OR = {
		AND = {
			is_born_under_Aries_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Taurus_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Leo_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Gemini_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Virgo_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Cancer_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Libra_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Leo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Scorpius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Virgo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Libra_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Scorpius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Leo_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Sagittarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Virgo_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Capricorn_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Libra_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Aquarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Scorpius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Pisces_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
	}
}
has_unsafe_secret_religion = {
	always = no
	#NOT = { is_nomadic = yes }
}

#to check type of ingredient... (if more are added, they need to go in here to work with the current system)
is_ingredient_herb_trigger = {
	OR = {
		artifact_type = ingredient_herb1
		artifact_type = ingredient_herb2
		artifact_type = ingredient_herb3
		artifact_type = ingredient_herb4
		artifact_type = ingredient_herb5
		artifact_type = ingredient_herb6
		artifact_type = ingredient_herb7
		artifact_type = ingredient_herb8
		artifact_type = ingredient_herb9
	}
}

is_ingredient_animal_part_trigger = {
	OR = {
		artifact_type = ingredient_animal1
		artifact_type = ingredient_animal2
		artifact_type = ingredient_animal3
		artifact_type = ingredient_animal4
		artifact_type = ingredient_animal5
		artifact_type = ingredient_animal6
		artifact_type = ingredient_animal7
		artifact_type = ingredient_animal8
		artifact_type = ingredient_animal9
	}
}

is_ingredient_powder_trigger = {
	OR = {
		artifact_type = ingredient_metal_exotic1
		artifact_type = ingredient_metal_exotic5
		artifact_type = ingredient_metal_exotic6
		artifact_type = ingredient_metal_exotic7
		artifact_type = ingredient_metal_exotic8
		artifact_type = ingredient_metal_exotic9
	}
}

is_ingredient_liquid_trigger = {
	OR = {
		artifact_type = ingredient_metal_exotic2
		artifact_type = ingredient_metal_exotic3
		artifact_type = ingredient_metal_exotic4
	}
}

#to check which ingredient TO BE selected (via scripted effects)...
has_a_herb_ingredient_trigger = {
	any_artifact = {
		is_ingredient_herb_trigger = yes
	}
}

has_an_animal_part_ingredient_trigger = {
	any_artifact = {
		is_ingredient_animal_part_trigger = yes
	}
}

has_a_powder_ingredient_trigger = {
	any_artifact = {
		is_ingredient_powder_trigger = yes
	}
}

has_a_liquid_ingredient_trigger = {
	any_artifact = {
		is_ingredient_liquid_trigger = yes
	}
}

#to check if HAS selected (via scripted effects) an ingredient...
has_selected_herb_ingredient_1_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
		is_ingredient_herb_trigger = yes
	}
}

has_selected_animal_part_ingredient_1_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
		is_ingredient_animal_part_trigger = yes
	}
}

has_selected_powder_ingredient_1_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
		is_ingredient_powder_trigger = yes
	}
}

has_selected_liquid_ingredient_1_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
		is_ingredient_liquid_trigger = yes
	}
}

has_selected_herb_ingredient_2_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_2
		is_ingredient_herb_trigger = yes
	}
}

has_selected_animal_part_ingredient_2_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_2
		is_ingredient_animal_part_trigger = yes
	}
}

has_selected_powder_ingredient_2_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_2
		is_ingredient_powder_trigger = yes
	}
}

has_selected_liquid_ingredient_2_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_2
		is_ingredient_liquid_trigger = yes
	}
}

has_selected_ingredient_1_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
	}
}

has_selected_ingredient_2_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_2
	}
}

selected_ingredient_is_sleep_inducing_trigger = {
	any_artifact = {
		OR = {
			has_artifact_flag = selected_ingredient_1
			has_artifact_flag = selected_ingredient_2
		}
		OR = {
			artifact_type = ingredient_herb7
			artifact_type = ingredient_herb3
			artifact_type = ingredient_herb9			
		}
	}
}

selected_ingredient_is_antipyretic_trigger = {
	any_artifact = {
		OR = {
			has_artifact_flag = selected_ingredient_1
			has_artifact_flag = selected_ingredient_2
		}
		OR = {
			artifact_type = ingredient_herb1
			artifact_type = ingredient_herb2
			artifact_type = ingredient_herb4
			artifact_type = ingredient_herb5
			artifact_type = ingredient_herb8
			artifact_type = ingredient_metal_exotic6
		}
	}
}

selected_ingredient_is_perceived_healthy_trigger = {
	any_artifact = {
		OR = {
			has_artifact_flag = selected_ingredient_1
			has_artifact_flag = selected_ingredient_2
		}
		OR = {
			AND = {
				is_ingredient_herb_trigger = yes
				NOT = { artifact_type = ingredient_herb3 } #Mandrake
			}
			artifact_type = ingredient_metal_exotic8 #Mercury
			artifact_type = ingredient_metal_exotic8 #Iron
			artifact_type = ingredient_metal_exotic6 #Gold

			artifact_type = ingredient_animal2 #Kidney
			artifact_type = ingredient_animal7 #Heart
			artifact_type = ingredient_animal8 #Liver
			artifact_type = ingredient_animal9 #Intestines
		}
	}
}

selected_ingredient_is_unhealthy_trigger = {
	any_artifact = {
		OR = {
			has_artifact_flag = selected_ingredient_1
			has_artifact_flag = selected_ingredient_2
		}
		OR = {
			artifact_type = ingredient_herb3 #Mandrake
			artifact_type = ingredient_metal_exotic8 #Mercury
			artifact_type = ingredient_metal_exotic8 #Iron
			is_ingredient_animal_part_trigger = yes
		}
	}
}

selected_ingredient_1_and_2_are_same = {
	#Checks whether the ingredients selected are same type, such as two Hibiscus (if so, returns true)...
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
		ROOT = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				is_artifact_same_type_as = PREVPREV
			}
		}
	}
}

ingredient_is_sleep_inducing_trigger = {
	OR = {
		artifact_type = ingredient_herb7
		artifact_type = ingredient_herb3
		artifact_type = ingredient_herb9
	}
}

ingredient_is_antipyretic_trigger = {
	OR = {
		artifact_type = ingredient_herb1
		artifact_type = ingredient_herb2
		artifact_type = ingredient_herb4
		artifact_type = ingredient_herb5
		artifact_type = ingredient_herb8
		artifact_type = ingredient_metal_exotic6
	}
}

ingredient_is_perceived_healthy_trigger = {
	OR = {
		AND = {
			is_ingredient_herb_trigger = yes
			NOT = { artifact_type = ingredient_herb3 } #Mandrake
		}
		artifact_type = ingredient_metal_exotic8 #Mercury
		artifact_type = ingredient_metal_exotic8 #Iron
		artifact_type = ingredient_metal_exotic6 #Gold

		artifact_type = ingredient_animal2 #Kidney
		artifact_type = ingredient_animal7 #Heart
		artifact_type = ingredient_animal8 #Liver
		artifact_type = ingredient_animal9 #Intestines
	}
}

ingredient_is_unhealthy_trigger = {
	OR = {
		artifact_type = ingredient_herb3 #Mandrake
		artifact_type = ingredient_metal_exotic8 #Mercury
		artifact_type = ingredient_metal_exotic8 #Iron
		AND = {
			is_ingredient_animal_part_trigger = yes
			NOR = {
				artifact_type = ingredient_animal2 #Kidney
				artifact_type = ingredient_animal7 #Heart
				artifact_type = ingredient_animal8 #Liver
				artifact_type = ingredient_animal9 #Intestines
			}
		}
	}
}



same_true_religion_as_from_trigger = {
	true_religion = FROM
}
same_true_religion_as_root_trigger = {
	true_religion = ROOT
}

religion_openly_norse_or_reformed_trigger = {
	# custom_tooltip = {
		# text = religion_openly_norse_or_reformed_tooltip
		# hidden_trigger = {
			# OR = {
				# religion = norse_pagan
				# religion = norse_pagan_reformed
			# }
		# }
	# }
}
religion_openly_aztec_or_reformed_trigger = {
	custom_tooltip = {
		text = religion_openly_aztec_or_reformed_tooltip
		hidden_trigger = {
			OR = {
				religion = aztec
				religion = aztec_reformed
			}
		}
	}
}
is_blood_relative_of_root_trigger = {
	OR = {
		is_ancestor_of = ROOT
		is_descendant_of = ROOT
		sibling = ROOT
		is_cousin_of = ROOT
		is_aunt_uncle_of = ROOT
		is_nibling_of = ROOT
		AND = {
			NOT = { dynasty = 0 }
			dynasty = ROOT
		}	
	}
}

is_any_kinslayer_trigger = {
	OR = {
		trait = kinslayer
		trait = familial_kinslayer
		trait = dynastic_kinslayer
		trait = tribal_kinslayer
	}
}

has_unsafe_religion = {
	always = no
}

using_unimportant_cb = {
	OR = {
		using_cb = peasant_revolt
		using_cb = heretic_revolt
		using_cb = religious_revolt
		using_cb = liberation_revolt
	}
}

death_no_trace_trigger = {
	OR = {
		death_reason = death_missing
		death_reason = death_vanished
	}
}

proselytize_convert_independent_trigger = {
	always = no
	# owner = {
		# FROM = { NOT = { religion_group = pagan_group } }
		# independent = yes
		# NOT = { religion = FROM }
		# religion_group = pagan_group
		# OR = {
			# NOT = { religion = aztec }
			# year = 1350
		# }
		# is_reformed_religion = no
		# capital_scope = {
			# province = ROOT
		# }
		# controls_religion = no
		# FROM = {
			# higher_tier_than = COUNT
			# OR = {
				# independent = yes
				# higher_tier_than = DUKE
			# }
		# }
		# NOT = {
			# has_opinion_modifier = { who = FROM modifier = opinion_sent_preacher }
		# }
		# is_within_diplo_range = FROM
	# }
}

is_toddler_age_trigger = {
	age = 0
 	NOT = { age = 4 }
}

is_young_child_age_trigger = {
	age = 4
 	NOT = { age = 9 }
}

is_child_age_trigger = {
	age = 9
 	NOT = { age = 12 }
}

is_adolescent_age_trigger = {
	age = 12
 	NOT = { age = 17 }
}

is_teenager_age_trigger = {
	age = 13
 	NOT = { age = 20 }
}

is_grown_up_age_trigger = {
	age = 20
}

is_middle_aged_trigger = {
	age = 40
	NOT = { age = 65 }
}

is_senior_age_trigger = {
	age = 50
}

is_elder_age_trigger = {
	age = 70
}

# Hardcoded trigger for the Execute Imprisoned interaction. Used for the description warning you of kinslaying
# Root - The executioner
# event_target:kinslayer_target - The person being executed
will_add_kinslayer = {
	NOT = { religion = dothraki_pagan }
	OR = {
		AND = {
			NOT = { trait = kinslayer }
			OR = {
				is_ancestor_of = event_target:kinslayer_target
				is_descendant_of = event_target:kinslayer_target
				sibling = event_target:kinslayer_target
			}
		}
		AND = {
			NOR = { 
				trait = kinslayer
				trait = familial_kinslayer
			}
			OR = {
				is_cousin_of = event_target:kinslayer_target
				is_aunt_uncle_of = event_target:kinslayer_target
				is_nibling_of = event_target:kinslayer_target
			}
		}
		AND = {
			NOR = { 
				trait = kinslayer
				trait = familial_kinslayer
				trait = dynastic_kinslayer
			}
			is_lowborn = no
			dynasty = event_target:kinslayer_target
		}
	}
}

# Hardcoded trigger for the Assassinate interaction. Used for triggering whether it can be used at all
# Root - The person being assassinated
# From - The person doing the assassination
assassination_interaction_trigger = {
	NOT_mythical_creature_trigger = yes
	conditional_tooltip = {
		trigger = {
			multiplayer = yes
		}
		custom_tooltip = {
			text = MP_GAME_RULE_ALLOWED
			OR = {
				ai = yes
				NOT = {
					has_game_rule = {
						name = multiplayer_assassinations
						value = no_players
					}
				}
			}
			OR = {
				NOT = {
					has_game_rule = {
						name = multiplayer_assassinations
						value = no_players_or_relatives
					}
				}
				AND = {
					ai = yes
					NOT = {
						any_close_relative = {
							ai = no
							NOT = { character = FROM }
						}
					}
					NOT = {
						any_spouse = {
							ai = no
							NOT = { character = FROM }
						}
					}
					NOT = {
						liege = {
							ai = no
							dynasty = ROOT
							NOT = { character = FROM }
						}
						is_heir = yes
					}
				}
			}
		}
	}
}

#checks whether ROOT has one of the following opinion modifiers with the currently scoped character
root_has_terrible_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_enslaved_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = kidnapped_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_vengeance }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_forced_upon_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_oubilette_me }
	}
}

#checks whether the current scope has one of the following opinion modifiers against ROOT
this_has_terrible_opinion_modifier_of_root_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_enslaved_me }
		has_opinion_modifier = { who = ROOT modifier = kidnapped_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_vengeance }
		has_opinion_modifier = { who = ROOT modifier = opinion_forced_upon_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_oubilette_me }
	}
}

#for MNM.9000 chain
the_hunt_for_an_artifact_has_made_enough_progress_trigger = {
	OR = {
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 8 } } #15 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_minor } 
		}
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 14 } } #25 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } 
		}
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 20 } } #40 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_major } 
		}
	}
}
has_tribal_government_trigger = {
	custom_tooltip = {
		text = has_tribal_government_trigger
		hidden_trigger = {
			OR = {
				is_tribal = yes
				government = wildling_feudal_government
			}
		}
	}
}
has_tribal_or_nomadic_government_trigger = {
	custom_tooltip = {
		text = tribal_or_nomadic_government_tt
		hidden_trigger = {
			OR = {
				has_tribal_government_trigger = yes
				is_nomadic = yes
			}
		}
	}
}


has_minor_title_relating_to_martial_trigger = { #WIP - feel free to add to this
	OR = {
		has_minor_title = title_master_of_the_horse
		has_minor_title = title_master_of_the_hunt
		has_minor_title = title_paramount_knight
		has_minor_title = title_commander
		has_minor_title = title_high_admiral
		has_minor_title = title_high_admiral_B
		has_minor_title = title_champion
		has_minor_title = title_master_of_the_blade
		has_minor_title = title_master_of_the_bow
		has_minor_title = title_bodyguard
		has_minor_title = title_bloodrider
		has_minor_title = title_knight_of_the_greenhand
		has_minor_title = title_sentinel
		has_minor_title = title_captain_of_guard
		has_minor_title = title_military_command_successor
		has_minor_title = warden_north
		has_minor_title = warden_east
		has_minor_title = warden_west
		has_minor_title = warden_south
		has_minor_title = title_first_ranger
		has_minor_title = title_bravo
		has_minor_title = title_commander_gold_cloaks
	}
}

#returns true if scoped character already dislikes ROOT (while not being caught up in a friendship or love, and such)
potentially_interested_in_rivaling_root_trigger = { #must be a character
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_friend = ROOT }
	NOT = { opinion = { who = ROOT value = 5 } }
	OR = {
		ROOT = { is_foe = PREV } #checks if the current scope has committed a crime against ROOT (I hope)
		is_foe = ROOT  #checks if root has committed a crime against the current scope
		NOT = { opinion = { who = ROOT value = -25 } }
		this_has_terrible_opinion_modifier_of_root_trigger = yes
		#Fill up with fun opinion modifiers, whenever you think of them...! Ideas: opinion_spurned, opinion_revoked_my_title, etc
	}
}
#returns true if scoped character is already disliked by ROOT (while not being caught up in a friendship or love, and such)
root_potentially_interested_in_rivaling_this_trigger = { #must be a character
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_friend = ROOT }
	NOT = { reverse_opinion = { who = ROOT value = 5 } }
	OR = {
		ROOT = { is_foe = PREV } #checks if the current scope has committed a crime against ROOT (I hope)
		is_foe = ROOT  #checks if root has committed a crime against the current scope
		NOT = { reverse_opinion = { who = ROOT value = -25 } }
		root_has_terrible_opinion_modifier_of_this_trigger = yes
		#Fill up with fun opinion modifiers, whenever you think of them...! Ideas: opinion_spurned, opinion_revoked_my_title, etc
	}
}

#returns true if scoped character and ROOT are both sort of interested in a rivalry
#(they both dislike one another and are not friends, lovers, or rivals already)
current_scope_and_root_make_sense_as_rivals_trigger = {
	potentially_interested_in_rivaling_root_trigger = yes
	root_potentially_interested_in_rivaling_this_trigger = yes
}

#checks whether the current scope has one of the following opinion modifiers against PREV
this_has_friendly_opinion_modifier_of_prev_trigger = {
	OR = {
		has_opinion_modifier = { who = PREV modifier = opinion_budding_friendship }
		has_opinion_modifier = { who = PREV modifier = opinion_was_praised }
		has_opinion_modifier = { who = PREV modifier = opinion_charmed }
		has_opinion_modifier = { who = PREV modifier = opinion_honorable }
		has_opinion_modifier = { who = PREV modifier = opinion_was_rewarded }
		has_opinion_modifier = { who = PREV modifier = nice_adventure }
		has_opinion_modifier = { who = PREV modifier = great_adventure }
		has_opinion_modifier = { who = PREV modifier = epic_adventure }
		has_opinion_modifier = { who = PREV modifier = opinion_accomplice }
		has_opinion_modifier = { who = PREV modifier = opinion_mediator }
		has_opinion_modifier = { who = PREV modifier = opinion_poet_pen_pal }
		has_opinion_modifier = { who = PREV modifier = opinion_calmed }
		has_opinion_modifier = { who = PREV modifier = opinion_cheered_up }
		has_opinion_modifier = { who = PREV modifier = opinion_teach_virtue }
		has_opinion_modifier = { who = PREV modifier = opinion_no_cat }
		has_opinion_modifier = { who = PREV modifier = opinion_feels_appreciated }
		has_opinion_modifier = { who = PREV modifier = opinion_amused }
		has_opinion_modifier = { who = PREV modifier = opinion_swayed_3 }
	}
}

#checks whether PREV has one of the following opinion modifiers against the currently scoped character
prev_has_friendly_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_budding_friendship }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_was_praised }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_charmed }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_honorable }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_was_rewarded }
		reverse_has_opinion_modifier = { who = PREV modifier = nice_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = great_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = epic_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_accomplice }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mediator }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_poet_pen_pal }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_calmed }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_cheered_up }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_teach_virtue }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_no_cat }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_feels_appreciated }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_amused }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_swayed_3 }
	}
}


#checks whether the current scope has one of the following opinion modifiers against ROOT
this_has_friendly_opinion_modifier_of_root_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship }
		has_opinion_modifier = { who = ROOT modifier = opinion_was_praised }
		has_opinion_modifier = { who = ROOT modifier = opinion_charmed }
		has_opinion_modifier = { who = ROOT modifier = opinion_honorable }
		has_opinion_modifier = { who = ROOT modifier = opinion_was_rewarded }
		has_opinion_modifier = { who = ROOT modifier = nice_adventure }
		has_opinion_modifier = { who = ROOT modifier = great_adventure }
		has_opinion_modifier = { who = ROOT modifier = epic_adventure }
		has_opinion_modifier = { who = ROOT modifier = opinion_accomplice }
		has_opinion_modifier = { who = ROOT modifier = opinion_mediator }
		has_opinion_modifier = { who = ROOT modifier = opinion_poet_pen_pal }
		has_opinion_modifier = { who = ROOT modifier = opinion_calmed }
		has_opinion_modifier = { who = ROOT modifier = opinion_cheered_up }
		has_opinion_modifier = { who = ROOT modifier = opinion_teach_virtue }
		has_opinion_modifier = { who = ROOT modifier = opinion_no_cat }
		has_opinion_modifier = { who = ROOT modifier = opinion_feels_appreciated }
		has_opinion_modifier = { who = ROOT modifier = opinion_amused }
		has_opinion_modifier = { who = ROOT modifier = opinion_swayed_3 }
	}
}

#checks whether ROOT has one of the following opinion modifiers against the currently scoped character
root_has_friendly_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_was_praised }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_charmed }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_honorable }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_was_rewarded }
		reverse_has_opinion_modifier = { who = ROOT modifier = nice_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = great_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = epic_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_accomplice }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mediator }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_poet_pen_pal }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_calmed }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_cheered_up }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_teach_virtue }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_no_cat }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_feels_appreciated }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_amused }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_swayed_3 }
	}
}
#returns true if scoped character already likes ROOT
potentially_platonically_interested_in_root_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_friend = ROOT }
	opinion = { who = ROOT value = 10 }
	this_has_terrible_opinion_modifier_of_root_trigger = no

	OR = {
		opinion = { who = ROOT value = 45 }
		this_has_friendly_opinion_modifier_of_root_trigger = yes
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship } #Or if ROOT has this opinion of current scope
	}
}

#returns true if scoped character is already liked by ROOT
root_potentially_platonically_interested_in_this_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_friend = ROOT }
	root_has_terrible_opinion_modifier_of_this_trigger = no

	OR = { 
		reverse_opinion = { who = ROOT value = 45 }
		root_has_friendly_opinion_modifier_of_this_trigger = yes
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship } #Or if current scope has this opinion of current ROOT
	}
}

#returns true if scoped character and ROOT are both sort of interested in a rivalry
#(they both dislike one another and are not friends, lovers, or rivals already)
current_scope_and_root_make_sense_as_friendlies_trigger = {
	potentially_platonically_interested_in_root_trigger = yes
	root_potentially_platonically_interested_in_this_trigger = yes
}

# Hardcoded trigger for Pagan baptism. Only used (except where referenced in script) for the Pagan baptism tooltip in the religion window
pagan_baptism_trigger = {
	NOT = { trait = incapable }
	has_regent = no
	war = no
	prisoner = no
	prestige = 500
	conditional_tooltip = {
		trigger = { has_character_flag = ai_flag_refuse_conversion }
		custom_tooltip = {
			text = NOT_TRUE_BELIEVER
			hidden_tooltip = {
				NOT = { has_character_flag = ai_flag_refuse_conversion }
			}
		}
	}
	conditional_tooltip = {
		trigger = { has_character_modifier = baptism_request_cooldown }
		custom_tooltip = {
			text = NOT_ASKED_BAPTISM_RECENTLY
			hidden_tooltip = {  
				NOT = { has_character_modifier = baptism_request_cooldown } 
			} 
		} 
	} 
	custom_tooltip = {
		text = TT_UNREFORMED_PAGAN
		hidden_tooltip = {
			religion_group = pagan_group
			NOT = { is_reformed_religion = yes }
			#NOT = { religion = bon }
		}
	}
	primary_title = { has_law = tribal_organization_4 }
}

has_fat_for_flag_trigger = { 
	OR = {
		has_character_flag = flag_fat_for_gluttony 
		has_character_flag = flag_fat_for_stress
		has_character_flag = flag_fat_for_depression
		has_character_flag = flag_fat_for_sloth
		has_character_flag = flag_fat_for_hedonism
		has_character_flag = flag_fat_for_carousing
		has_character_flag = flag_fat_for_family 
		has_character_flag = flag_fat_for_content 
		has_character_flag = flag_fat_for_lust
		has_character_flag = flag_fat_for_wroth
		has_character_flag = flag_fat_for_drunkard
		has_character_flag = flag_fat_for_boredom #fallback reason
	}
}

has_malnourished_for_flag_trigger = { 
	OR = {
		has_character_flag = flag_malnourished_for_temperance 
		has_character_flag = flag_malnourished_for_stress
		has_character_flag = flag_malnourished_for_depression
		has_character_flag = flag_malnourished_for_sloth
		has_character_flag = flag_malnourished_for_study
		has_character_flag = flag_malnourished_for_faith
		has_character_flag = flag_malnourished_for_paranoia 
		has_character_flag = flag_malnourished_for_diligence
		has_character_flag = flag_malnourished_for_cannibal
		has_character_flag = flag_malnourished_for_craven
		has_character_flag = flag_malnourished_for_boredom #fallback reason
	}
}

is_child_or_sibling_of_from_trigger = {
	custom_tooltip = {
		text = is_child_or_sibling_of_yours_tt
		OR = {
			is_child_of = FROM
			sibling = FROM
		}
	}
}

should_evolve_cultures_trigger = {
	hidden_tooltip = {
		OR = {
			is_alternate_start = no
			has_alternate_start_parameter = {
				key = culture_names
				value = historical
			}
		}
	}
}

non_historical_culture_names_in_alt_start_trigger = {
	hidden_tooltip = {
		AND = {
			is_alternate_start = yes
			NOT = {
				has_alternate_start_parameter = {
					key = culture_names
					value = historical
				}
			}
		}
	}
}

religions_are_standard_trigger = {
	hidden_tooltip = {
		OR = {
			is_alternate_start = no
			has_alternate_start_parameter = {
				key = religion_names
				value = historical
			}
		}
	}
}

root_has_terrible_opinion_modifier_of_this_extended_trigger = {
	OR = {
		#Personal grievances.

		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder }

		#Family grievances
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}

this_has_terrible_opinion_modifier_of_prev_extended_trigger = {
	OR = {
		#Personal grievances.

		has_opinion_modifier = { who = PREV modifier = opinion_hate }
		has_opinion_modifier = { who = PREV modifier = opinion_tortured_me }
		has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = PREV modifier = opinion_imprisoned }
		has_opinion_modifier = { who = PREV modifier = attempted_murder }

		#Family grievances
		has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
		has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = PREV modifier = opinion_executed_child }

		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_sibling }
	}
}
prev_has_terrible_opinion_modifier_of_this_extended_trigger = {
	OR = {
		#Personal grievances.

		reverse_has_opinion_modifier = { who = PREV modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_imprisoned }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder }

		#Family grievances
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_executed_child }

		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_spouse }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_child }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_parent }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_sibling }
	}
}

ruler_has_dedicated_temple_trigger = {
	OR = {
		has_character_modifier = dedicated_to_zeus
		has_character_modifier = dedicated_to_poseidon
		has_character_modifier = dedicated_to_hades
		has_character_modifier = dedicated_to_hermes
		has_character_modifier = dedicated_to_demeter
		has_character_modifier = dedicated_to_athena
		has_character_modifier = dedicated_to_apollo
		has_character_modifier = dedicated_to_arthemis
		has_character_modifier = dedicated_to_ares
		has_character_modifier = dedicated_to_aphrodite
		has_character_modifier = dedicated_to_ephaestus
		has_character_modifier = dedicated_to_hestia
	}
}

martyrs_death_trigger = {
	OR = {
		death_reason = death_sacrificed
  		death_reason = death_sacrificed_norse
  		death_reason = death_sacrificed_ancestors
  		death_reason = death_execution_aztec_sacrifice
  		
	}
}
can_build_hillfort_trigger = {
	OR = { 
		AND = { 
					NOR = { 
						is_building = tb_hillfort_1 
						has_building = tb_hillfort_1 
					}
					location = { TECH_CASTLE_CONSTRUCTION = 0 }
		}
		AND = { 
					has_building = tb_hillfort_1
					NOR = { 
						is_building = tb_hillfort_2 
						has_building = tb_hillfort_2 
					}
					location = { TECH_CASTLE_CONSTRUCTION = 0 }
		}
		AND = { 
					has_building = tb_hillfort_2
					NOR = { 
						is_building = tb_hillfort_3 
						has_building = tb_hillfort_3 
					}
					location = { TECH_CASTLE_CONSTRUCTION = 1 }
		}
		AND = { 
					has_building = tb_hillfort_3
					NOR = { 
							is_building = tb_hillfort_4 
							has_building = tb_hillfort_4 
						}
					location = { TECH_CASTLE_CONSTRUCTION = 1 }
		}
	}
}
can_build_defensive_fortifications_trigger = {
	holding_type = tribal
	hidden_tooltip = { 
		NOR = { 
			is_building = tb_defensive_fortifications_4
			has_building = tb_defensive_fortifications_4
		}
	}
	OR = { 
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_tb_defensive_fortifications_1
				hidden_tooltip = { 
					NOR = { 
						is_building = tb_defensive_fortifications_1 
						has_building = tb_defensive_fortifications_1
					}
					location = { TECH_CASTLE_CONSTRUCTION = 0 }
				}
			}
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_tb_defensive_fortifications_2 
				hidden_tooltip = { 
					has_building = tb_defensive_fortifications_1
					NOR = { 
						is_building = tb_defensive_fortifications_2 
						has_building = tb_defensive_fortifications_2 
					}
					location = { TECH_CASTLE_CONSTRUCTION = 0 }
				}
			}
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_tb_defensive_fortifications_3
				hidden_tooltip = { 
					has_building = tb_defensive_fortifications_2
					NOR = { 
						is_building = tb_defensive_fortifications_3 
						has_building = tb_defensive_fortifications_3 
					}
					location = { TECH_CASTLE_CONSTRUCTION = 1 }
				}
			}
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_tb_defensive_fortifications_4
				hidden_tooltip = { 
					has_building = tb_defensive_fortifications_3
					NOR = { 
						is_building = tb_defensive_fortifications_4 
						has_building = tb_defensive_fortifications_4 
					}
					location = { TECH_CASTLE_CONSTRUCTION = 1 }
				}
			}
		}
	}
}
can_build_walls_trigger = {
	holding_type = castle
	hidden_tooltip = { NOT = { has_building = ca_wall_5 } }
	OR = { 
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_ca_wall_1
				hidden_tooltip = { 
					NOR = { 
						is_building = ca_wall_1 
						has_building = ca_wall_1
					}
					location = { TECH_FORTIFICATIONS_CONSTRUCTION = 0 }
				}
			}
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_ca_wall_2
				hidden_tooltip = { 
					has_building = ca_wall_1
					NOR = { 
						is_building = ca_wall_2 
						has_building = ca_wall_2
					}
					location = { TECH_FORTIFICATIONS_CONSTRUCTION = 2 }
				}
			}
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_ca_wall_3
				hidden_tooltip = { 
					has_building = ca_wall_2
					NOR = { 
						is_building = ca_wall_3 
						has_building = ca_wall_3
					}
					location = { TECH_FORTIFICATIONS_CONSTRUCTION = 4 }
				}
			}
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_ca_wall_4
				hidden_tooltip = { 
					has_building = ca_wall_3
					NOR = { 
						is_building = ca_wall_4 
						has_building = ca_wall_4
					}
					location = { TECH_FORTIFICATIONS_CONSTRUCTION = 6 }
				}
			}
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_ca_wall_5
				hidden_tooltip = { 
					has_building = ca_wall_4
					NOR = { 
						is_building = ca_wall_5 
						has_building = ca_wall_5
					}
					location = { TECH_FORTIFICATIONS_CONSTRUCTION = 8 }
				}
			}
		}
	}
}
can_build_castle_fortifications_trigger = {
	holding_type = castle
	hidden_tooltip = { 
		NOR = { 
			is_building = ca_wall_q_5
			has_building = ca_wall_q_5
		}
	}
	OR = { 
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_ca_wall_q_1
				hidden_tooltip = { 
					NOR = { 
						is_building = ca_wall_q_1
						has_building = ca_wall_q_1
					}
					location = { TECH_FORTIFICATIONS_CONSTRUCTION = 0 }
				}
			}
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_ca_wall_q_2
				hidden_tooltip = { 
					has_building = ca_wall_q_1
					NOR = { 
						is_building = ca_wall_q_2 
						has_building = ca_wall_q_2
					}
					location = { TECH_FORTIFICATIONS_CONSTRUCTION = 1 }
				}
			}
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_ca_wall_q_3
				hidden_tooltip = { 
					has_building = ca_wall_q_2
					NOR = { 
						is_building = ca_wall_q_3 
						has_building = ca_wall_q_3
					}
					location = { TECH_FORTIFICATIONS_CONSTRUCTION = 3 }
				}
			}
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_ca_wall_q_4
				hidden_tooltip = { 
					has_building = ca_wall_q_3
					NOR = { 
						is_building = ca_wall_q_4 
						has_building = ca_wall_q_4 
					}
				}
			}
			location = { TECH_FORTIFICATIONS_CONSTRUCTION = 5 }
		}
		AND = { 
			custom_tooltip = { 
				text = tooltip_can_build_ca_wall_q_5
				hidden_tooltip = { 
					has_building = ca_wall_q_4
					NOR = { 
						is_building = ca_wall_q_5 
						has_building = ca_wall_q_5
					}
					location = { TECH_FORTIFICATIONS_CONSTRUCTION = 7 }
				}
			}
		}
	}
}

personal_grievance_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
	}
}

family_grievance_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}

no_grievance_trigger = {
	NOR = {
		personal_grievance_trigger = yes
		family_grievance_trigger = yes
	}
}

is_inaccessible_or_incapable_trigger = {
	OR = {  
		is_inaccessible_trigger = yes
		trait = incapable
		prisoner = yes
	}
}

lower_educational_trait_trigger = {
	OR = {
		AND = {
			trait = naive_appeaser
			ROOT = {
				OR = {
					trait = underhanded_rogue
					trait = charismatic_negotiator
					trait = grey_eminence
				}
			}
		}
		AND = {
			trait = underhanded_rogue 
			ROOT = {
				OR = {
					trait = charismatic_negotiator
					trait = grey_eminence
				}
			}
		}
		AND = {
			trait = charismatic_negotiator
			ROOT = {
				trait = grey_eminence
			}
		}
		AND = {
			trait = misguided_warrior
			ROOT = {
				OR = {
					trait = tough_soldier
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
		}
		AND = {
			trait = tough_soldier
			ROOT = {
				OR = {
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
		}
		AND = {
			trait = skilled_tactician
			ROOT = {
				trait = brilliant_strategist
			}
		}
		AND = {
			trait = indulgent_wastrel
			ROOT = {
				OR = {
					trait = thrifty_clerk
					trait = fortune_builder
					trait = midas_touched
				}
			}
		}
		AND = {
			trait = thrifty_clerk
			ROOT = {
				OR = {
					trait = fortune_builder
					trait = midas_touched
				}
			}
		}
		AND = {
			trait = fortune_builder
			ROOT = {
				trait = midas_touched
			}
		}
		AND = {
			trait = amateurish_plotter
			ROOT = {
				OR = {
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
		}
		AND = {
			trait = flamboyant_schemer
			ROOT = {
				OR = {
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
		}
		AND = {
			trait = intricate_webweaver
			ROOT = {
				trait = elusive_shadow
			}
		}
		AND = {
			trait = detached_priest
			ROOT = {
				OR = {
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
		}
		AND = {
			trait = martial_cleric
			ROOT = {
				OR = {
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
		}
		AND = {
			trait = scholarly_theologian
			ROOT = {
				trait = mastermind_theologian
			}
		}
	}
}

has_scarred_trait_trigger = {
	OR = {  
		trait = scarred
		trait = scarred_mid
		trait = scarred_high
	}
}

this_is_warrior_culture_trigger = { #Not really about culture - Used in AI voting logic.
	NOT = { pacifist = yes }
	OR = { 
		culture_group = hyrkoon_group
		culture = dothraki
		culture_group = iron_isles_culture
		culture = moon_clansman
		culture = skagosi
		culture = brindlemen
		religion_group = drowned_god_group
		trait = pirate
		trait = wildling	
		trait = tiger
		has_religion_feature = religion_warlike
		is_tribal = yes
		is_nomadic = yes
	}
}

this_is_diplomatic_culture_trigger = { #Not really about culture - Used in AI voting logic.
	OR = {
		is_feudal = yes
		is_patrician = yes
		is_merchant_republic = yes
	} 
	this_is_warrior_culture_trigger = no
	this_is_spiritual_culture_trigger = no
}
this_is_spiritual_culture_trigger = { #Not really about culture - Used in AI voting logic.
	OR = { 
		pacifist = yes
		has_religion_feature = religion_peaceful
		has_religion_feature = religion_feature_nath_pagan
	}
}
this_is_sea_raider_trigger = {
	OR = { 
		trait = pirate
		trait = viking
		trait = ravager
		trait = seaking
		trait = sea_queen
	}
}

can_apply_lame_nickname_trigger = {
	has_nickname = no
}

can_apply_average_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
	}	
}

can_apply_cool_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
		this_has_average_nickname_trigger = yes
	}
}

can_apply_super_cool_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
		this_has_average_nickname_trigger = yes
		this_has_cool_nickname_trigger = yes
	}
}

this_has_lame_nickname_trigger = {
	OR = { 
		has_nickname = nick_the_holy
		has_nickname = nick_the_avenger
		has_nickname = nick_the_brave
		has_nickname = nick_the_fearless
		has_nickname = nick_the_unlucky
		has_nickname = nick_the_lucky
		has_nickname = nick_the_restorer
		has_nickname = nick_the_effeminate
		has_nickname = nick_the_clueless
		has_nickname = nick_the_ill_tempered
		has_nickname = nick_the_affable
		has_nickname = nick_the_liberator
		has_nickname = nick_the_glorious
		has_nickname = nick_the_german
		has_nickname = nick_the_younger
		has_nickname = nick_the_youthful
		has_nickname = nick_the_unfaithful
		has_nickname = nick_the_beguiling
		has_nickname = nick_the_temptress
		has_nickname = nick_the_seducer
		has_nickname = nick_the_lewd
		has_nickname = nick_the_lecher
		has_nickname = nick_the_unchaste
		has_nickname = nick_the_culture			
		has_nickname = nick_the_rel_group		
		has_nickname = nick_the_pilgrim
		has_nickname = nick_the_viking
		has_nickname = nick_the_decadent
		has_nickname = nick_the_shrewd
		has_nickname = nick_the_wily
		has_nickname = nick_the_jovial
		has_nickname = nick_the_jolly
		has_nickname = nick_the_gracious
		has_nickname = nick_the_rash
		has_nickname = nick_the_ruthless
		has_nickname = nick_the_strange
		has_nickname = nick_the_shieldmaiden
		has_nickname = nick_the_clumsy
		has_nickname = nick_the_evil
		has_nickname = nick_the_culture_marauder
		has_nickname = nick_the_kingslayer
		has_nickname = nick_iron_hand
		has_nickname = nick_peg_leg
		has_nickname = nick_the_goldsmith
		has_nickname = nick_the_weaponsmith
		has_nickname = nick_the_armorsmith
		has_nickname = nick_the_trader
		has_nickname = nick_the_lisp_and_lame
		has_nickname = nick_the_able
		has_nickname = nick_the_kind
		has_nickname = nick_the_good
		has_nickname = nick_the_troubadour
		has_nickname = nick_the_strong
		has_nickname = nick_the_magnanimous
		has_nickname = nick_the_simple
		has_nickname = nick_the_merry
		has_nickname = nick_the_noble
		has_nickname = nick_the_blind
		has_nickname = nick_the_leper
		has_nickname = nick_the_gentle
		has_nickname = nick_the_proud
		has_nickname = nick_the_silent
		has_nickname = nick_the_bastard
		has_nickname = nick_the_gouty
		has_nickname = nick_half_hand
		has_nickname = nick_the_chaste
		has_nickname = nick_the_hunter
		has_nickname = nick_the_fowler
		has_nickname = nick_the_just
		has_nickname = nick_the_lame
		has_nickname = nick_the_handsome
		has_nickname = nick_the_fair
		has_nickname = nick_the_hideous
		has_nickname = nick_the_frog
		has_nickname = nick_the_tenacious
		has_nickname = nick_the_repulsive
		has_nickname = nick_the_mad
		has_nickname = nick_the_fat
		has_nickname = nick_the_hollow
		has_nickname = nick_the_drunkard
		has_nickname = nick_the_cruel
		has_nickname = nick_the_wise
		has_nickname = nick_the_resilient
		has_nickname = nick_one_eye
		has_nickname = nick_one_hand
		has_nickname = nick_one_leg
		has_nickname = nick_the_wicked 
		has_nickname = nick_the_bewitched 
		has_nickname = nick_priest_hater 
		has_nickname = nick_the_pious 
		has_nickname = nick_the_blessed 
		has_nickname = nick_the_monk 
		has_nickname = nick_the_nun 
		has_nickname = nick_the_ill_ruler 
		has_nickname = nick_the_terrible 
		has_nickname = nick_the_oppressor 
		has_nickname = nick_the_witch 
		has_nickname = nick_the_magnificent 
		has_nickname = nick_the_careless 
		has_nickname = nick_the_young 
		has_nickname = nick_the_old 
		has_nickname = nick_the_hunchback 
		has_nickname = nick_the_scholar 
		has_nickname = nick_the_black 
		has_nickname = nick_the_healer 
		has_nickname = nick_the_unmercenary_healer 
		has_nickname = nick_the_understanding 
		has_nickname = nick_the_merciful 
		has_nickname = nick_the_flat_chested 
		has_nickname = nick_the_oakskin
		has_nickname = nick_the_green_faced 
		has_nickname = nick_the_word_thief 
		has_nickname = nick_the_pups_gut 
		has_nickname = nick_the_jittery
		has_nickname = nick_the_broken_lute
		has_nickname = nick_the_dust_biter
		has_nickname = nick_the_sleepy
		has_nickname = nick_the_squealer
		has_nickname = nick_the_toothless
		has_nickname = nick_butter_teeth
		has_nickname = nick_the_cowardly
		has_nickname = nick_the_squirmy
		has_nickname = nick_the_frantic 
		has_nickname = nick_the_spare 
		has_nickname = nick_the_dry_throat 
		has_nickname = nick_the_floor_kisser 
		has_nickname = nick_the_toothless_wolf 
		has_nickname = nick_the_rough_hair
		has_nickname = nick_the_singing_crow
		has_nickname = nick_the_broken_nail
		has_nickname = nick_the_forgetful
		has_nickname = nick_the_thin_minded
		has_nickname = nick_the_messy 
		has_nickname = nick_the_feeble
		has_nickname = nick_the_milkdrinker
		has_nickname = nick_the_girls_arm
		has_nickname = nick_the_flower
		has_nickname = nick_the_hermit
		has_nickname = nick_the_recluse
		has_nickname = nick_the_absolved
		has_nickname = nick_the_short_tempered
		has_nickname = nick_the_red_cheeks
		has_nickname = nick_the_blushing
		has_nickname = nick_the_shrinking_violet
		has_nickname = nick_the_whiner
		has_nickname = nick_the_moaner
		has_nickname = nick_the_liar
		has_nickname = nick_the_cheater
		has_nickname = nick_the_vain
		has_nickname = nick_the_twitchy
		has_nickname = nick_the_one_eyed
		has_nickname = nick_one_eye
		has_nickname = nick_the_rude
		has_nickname = nick_the_uncaring
		has_nickname = nick_stoneface
		has_nickname = nick_the_whore
		has_nickname = nick_the_faithless
		has_nickname = nick_the_queer
		has_nickname = nick_little_dynasty
		has_nickname = nick_wee_dynasty
		has_nickname = nick_mad_dynasty
		has_nickname = nick_lame_dynasty
		has_nickname = nick_fat_dynasty
		has_nickname = nick_bad_dynasty
		has_nickname = nick_rude_dynasty
		has_nickname = nick_grim_dynasty
		has_nickname = nick_evil_dynasty
		has_nickname = nick_blind_dynasty
		has_nickname = nick_drunk_dynasty
		has_nickname = nick_lazy_dynasty
		has_nickname = nick_the_beggar_king
		has_nickname = nick_the_unworthy
		has_nickname = nick_the_monstrous
		has_nickname = nick_the_gross
		has_nickname = nick_the_lazy
		has_nickname = nick_the_broken
		has_nickname = nick_the_rapist
		has_nickname = nick_the_oathbreaker
		has_nickname = nick_the_knight_of_kisses
		has_nickname = nick_the_late_lord
		has_nickname = nick_the_blind_king
		has_nickname = nick_the_blind_queen
		has_nickname = nick_the_late
		has_nickname = nick_the_cautious
		has_nickname = nick_the_indecisive
		has_nickname = nick_the_ditherer
		has_nickname = nick_the_waverer
		has_nickname = nick_the_hesitant
		has_nickname = nick_the_enchantress
		has_nickname = nick_the_seductress
		has_nickname = nick_the_wanton
		has_nickname = nick_the_loose
		has_nickname = nick_the_promiscuous
		has_nickname = nick_the_unchaste
		has_nickname = nick_the_easy
		has_nickname = nick_the_charming
		has_nickname = nick_the_captivating
		has_nickname = nick_the_luring
		has_nickname = nick_the_adulterer
		has_nickname = nick_the_rake
		has_nickname = nick_the_sensual
		has_nickname = nick_the_sordid
	}
}
this_has_average_nickname_trigger = {
	OR = { 
		has_nickname = nick_the_usurper
		has_nickname = nick_the_conqueror
		has_nickname = nick_the_victorious
		has_nickname = nick_the_crusader
		has_nickname = nick_the_martyr
		has_nickname = nick_the_heathen
		has_nickname = nick_the_jackal
		has_nickname = nick_the_saint
		has_nickname = nick_the_maid
		has_nickname = nick_darc
		has_nickname = nick_ring
		has_nickname = nick_of_the_wilds
		has_nickname = nick_the_impaler
		has_nickname = nick_bloodaxe
		has_nickname = nick_the_fox
		has_nickname = nick_the_headless
		has_nickname = nick_the_beheader
		has_nickname = nick_the_red
		has_nickname = nick_the_defender
		has_nickname = nick_the_legendary
		has_nickname = nick_the_slayer_of_culture
		has_nickname = nick_the_butcher
		has_nickname = nick_the_vengeful
		has_nickname = nick_the_betrayer
		has_nickname = nick_the_flayer
		has_nickname = nick_the_tormentor
		has_nickname = nick_the_mutilator
		has_nickname = nick_the_depraved
		has_nickname = nick_the_monster
		has_nickname = nick_the_abomination
		has_nickname = nick_the_inquisitor
		has_nickname = nick_the_purifier
		has_nickname = nick_the_tiger
		has_nickname = nick_the_explorer
		has_nickname = nick_the_astrologer	
		has_nickname = nick_the_terrain_commander
		has_nickname = nick_the_ground_warrior
		has_nickname = nick_lord_lady_of_the_terrain
		has_nickname = nick_lord_lady_ground
		has_nickname = nick_warrior_lodge_spirit
		has_nickname = nick_the_cannibal
		has_nickname = nick_the_frail
		has_nickname = nick_the_weak
		has_nickname = nick_the_brute
		has_nickname = nick_the_mule
		has_nickname = nick_the_wealthy
		has_nickname = nick_the_loyal
		has_nickname = nick_the_lord_of_realm
		has_nickname = nick_the_beanstalk 
		has_nickname = nick_the_accursed 
		has_nickname = nick_the_apostle 
		has_nickname = nick_the_confessor 
		has_nickname = nick_the_ironside 
		has_nickname = nick_the_lion 
		has_nickname = nick_the_bold 
		has_nickname = nick_the_unready 
		has_nickname = nick_the_tyrant 
		has_nickname = nick_the_quarreller 
		has_nickname = nick_the_devil 
		has_nickname = nick_the_great 
		has_nickname = nick_the_giant 
		has_nickname = nick_tiny 
		has_nickname = nick_the_shield_of_capital 
		has_nickname = nick_the_myrrh_streaming 
		has_nickname = nick_the_god_bearing 
		has_nickname = nick_the_righteous 
		has_nickname = nick_the_venerable 
		has_nickname = nick_the_spark_of_god 
		has_nickname = nick_the_right_believing 
		has_nickname = nick_the_miracle_worker 
		has_nickname = nick_the_pest
		has_nickname = nick_the_little_crow
		has_nickname = nick_the_piglet
		has_nickname = nick_the_splinter
		has_nickname = nick_the_word_master
		has_nickname = nick_the_mead_master
		has_nickname = nick_the_horse_gelder
		has_nickname = nick_the_undefeated
		has_nickname = nick_the_thigh_biter
		has_nickname = nick_the_hundred_flagons
		has_nickname = nick_the_bottomless
		has_nickname = nick_the_silver_tongue
		has_nickname = nick_the_bard
		has_nickname = nick_the_fairest_of_location
		has_nickname = nick_the_tamer
		has_nickname = nick_the_strongest_of_location
		has_nickname = nick_the_beef_thrasher
		has_nickname = nick_the_dove
		has_nickname = nick_the_stallion
		has_nickname = nick_the_harth_of_location
		has_nickname = nick_the_star_weaver
		has_nickname = nick_the_quick_fingers
		has_nickname = nick_the_strongarm
		has_nickname = nick_the_iron_grip
		has_nickname = nick_the_knuckle_slammer
		has_nickname = nick_the_gods_arm
		has_nickname = nick_the_bone_squeezer
		has_nickname = nick_the_bull
		has_nickname = nick_the_butch
		has_nickname = nick_the_protector
		has_nickname = nick_the_guardian
		has_nickname = nick_the_sharp_tongue
		has_nickname = nick_the_trickster
		has_nickname = nick_the_merciless
		has_nickname = nick_the_word_slayer
		has_nickname = nick_the_grinner
		has_nickname = nick_the_poison_tooth
		has_nickname = nick_the_vixen
		has_nickname = nick_the_hyena
		has_nickname = nick_the_guide
		has_nickname = nick_the_elder
		has_nickname = nick_the_knight_of_turnips
		has_nickname = nick_the_festive
		has_nickname = nick_the_burden
		has_nickname = nick_the_snake
		has_nickname = nick_the_firegazer
		has_nickname = nick_the_merciless
		has_nickname = nick_the_red_robed
		has_nickname = nick_the_tolerant
		has_nickname = nick_the_culture_group	
		has_nickname = nick_the_dynasty	
		has_nickname = nick_middle_dynasty	
		has_nickname = nick_young_dynasty
		has_nickname = nick_old_dynasty
		has_nickname = nick_grey_dynasty		
		has_nickname = nick_black_dynasty	
		has_nickname = nick_silver_dynasty
		has_nickname = nick_good_dynasty	
		has_nickname = nick_red_dynasty	
		has_nickname = nick_sweet_dynasty	
		has_nickname = nick_loyal_dynasty		
		has_nickname = nick_wild_dynasty	
		has_nickname = nick_white_dynasty
		has_nickname = nick_dark_dynasty
		has_nickname = nick_the_imp
		has_nickname = nick_old_hawk
		has_nickname = nick_the_knight
		has_nickname = nick_the_old_bear
		has_nickname = nick_drunken_giant
		has_nickname = nick_the_tall
		has_nickname = nick_the_openhanded
		has_nickname = nick_the_grey_lion
		has_nickname = the_king_who_knelt
	}
}
this_has_cool_nickname_trigger = {
	OR = { 
		has_nickname = nick_the_lawgiver
		has_nickname = nick_the_hammer
		has_nickname = nick_the_stranger
		has_nickname = nick_the_bald
		has_nickname = nick_the_stammerer
		has_nickname = nick_the_master_of_hungary
		has_nickname = nick_hildetand
		has_nickname = nick_the_shadow
		has_nickname = nick_the_whisperer
		has_nickname = nick_the_spider
		has_nickname = nick_the_sword_of_god
		has_nickname = nick_the_sea_devil
		has_nickname = nick_the_lioness
		has_nickname = nick_the_flail_of
		has_nickname = nick_the_scourge_of
		has_nickname = nick_the_alchemist
		has_nickname = nick_the_survivor
		has_nickname = nick_the_valkyrie
		has_nickname = nick_the_destroyer
		has_nickname = nick_the_scourge_of_god
		has_nickname = nick_the_terror_of_provincename
		has_nickname = nick_son_of_evilgod
		has_nickname = nick_the_cleansing_flame
		has_nickname = nick_the_witch_hunter
		has_nickname = nick_the_eastern_wind
		has_nickname = nick_the_despoiler
		has_nickname = nick_the_bane_of_realmname
		has_nickname = nick_the_heavenly
		has_nickname = nick_the_great_beast
		has_nickname = nick_the_great_eagle
		has_nickname = nick_the_artist_ruler
		has_nickname = nick_the_ambitious
		has_nickname = nick_the_bloody
		has_nickname = nick_the_diplomat
		has_nickname = nick_the_kind_hearted
		has_nickname = nick_the_generous
		has_nickname = nick_the_executioner
		has_nickname = nick_iron_fist
		has_nickname = nick_stone_fist
		has_nickname = nick_the_bulwark
		has_nickname = nick_the_tower
		has_nickname = nick_the_wall_of_title
		has_nickname = nick_the_underdog
		has_nickname = nick_of_a_thousand_faces
		has_nickname = nick_the_plaguebearer
		has_nickname = nick_the_persevering
		has_nickname = nick_twistedbeard 
		has_nickname = nick_the_bear 
		has_nickname = nick_the_boar 
		has_nickname = nick_the_faceless 
		has_nickname = nick_the_cyclops 
		has_nickname = nick_the_lionheart 
		has_nickname = nick_the_dragon 
		has_nickname = nick_the_undying 
		has_nickname = nick_the_wolf 
		has_nickname = the_timely_rain 
		has_nickname = the_jade_unicorn 
		has_nickname = the_wizard 
		has_nickname = the_big_halberd 
		has_nickname = beautiful_beard 
		has_nickname = the_tattooed_monk 
		has_nickname = the_unrestrained 
		has_nickname = nick_the_roaring_flame 
		has_nickname = nick_the_goliath 
		has_nickname = nick_the_mythological_creature 
		has_nickname = nick_the_fool_for_christ 
		has_nickname = nick_the_skull_crusher
		has_nickname = nick_the_quick_foot
		has_nickname = nick_the_bleeder
		has_nickname = nick_the_sharp_teeth
		has_nickname = nick_the_crimson_flurry
		has_nickname = nick_the_champion_of_province
		has_nickname = nick_the_bone_gnasher
		has_nickname = nick_the_gods_champion
		has_nickname = nick_the_red_gladiator
		has_nickname = nick_the_red_gladiatrix
		has_nickname = nick_the_crimson_gorgon
		has_nickname = nick_the_scarlet_eagle
		has_nickname = nick_the_exalted_chosen_of_province
		has_nickname = nick_the_scarlet_painter
		has_nickname = nick_the_ladder_legs
		has_nickname = nick_the_peacock
		has_nickname = nick_the_bellower
		has_nickname = nick_the_reaver
		has_nickname = nick_the_elegant
		has_nickname = nick_the_drowned_king
		has_nickname = nick_the_septon_king
		has_nickname = nick_of_the_scourge_of_location
		has_nickname = nick_of_the_bane_of_location
		has_nickname = nick_of_the_hero_of_location
		has_nickname = nick_of_the_lion_of_location
		has_nickname = nick_of_the_sword_of_location
		has_nickname = nick_of_the_star_of_location
		has_nickname = nick_of_the_butcher_of_location
		has_nickname = nick_of_the_fist_of_location
		has_nickname = nick_of_the_dragon_of_location
		has_nickname = nick_of_the_wolf_of_location
		has_nickname = nick_of_the_demon_of_location
		has_nickname = nick_of_the_burner_of_location
		has_nickname = nick_of_the_breaker_of_location
		has_nickname = nick_of_the_shield_of_location
		has_nickname = nick_of_the_spear_of_location
		has_nickname = nick_of_the_axe_of_location
		has_nickname = nick_of_the_hammer_of_location
		has_nickname = nick_the_lionslayer
		has_nickname = nick_wolfsbane
		has_nickname = nick_the_viper
		has_nickname = nick_the_gallant
		has_nickname = nick_strong_dynasty
		has_nickname = nick_big_dynasty
		has_nickname = nick_wise_dynasty
		has_nickname = nick_bold_dynasty
		has_nickname = nick_great_dynasty
		has_nickname = nick_dragon_dynasty	
		has_nickname = nick_giant_dynasty
		has_nickname = nick_silverhair
		has_nickname = nick_the_leech_lord
		has_nickname = nick_the_skinchanger
		has_nickname = nick_the_young_dragon
		has_nickname = nick_the_beautiful
		has_nickname = nick_evenstar
		has_nickname = nick_the_munificent
		has_nickname = nick_the_amazing
		has_nickname = nick_the_dreamer
		has_nickname = nick_the_silver
		has_nickname = nick_the_kingslayer
		has_nickname = nick_stormborn
		has_nickname = nick_the_kingmaker
		has_nickname = nick_the_young_wolf
		has_nickname = nick_ironreaver
		has_nickname = nick_the_black_reaver
		has_nickname = nick_the_red_reaver
		has_nickname = nick_ironfist
		has_nickname = nick_ironsword
		has_nickname = nick_ironshield
		has_nickname = nick_the_raider
		has_nickname = nick_ironraider
		has_nickname = nick_ironheart
		has_nickname = nick_the_dragontamer
		has_nickname = nick_the_virile
		has_nickname = nick_the_saviour
		has_nickname = nick_the_champion_of_kingdom
		has_nickname = nick_the_triumphant
		has_nickname = nick_the_emancipator
		has_nickname = nick_the_breaker_of_chains
		has_nickname = nick_the_deliverer
		has_nickname = nick_the_sword_of_the_gods
	}
}
this_has_super_cool_nickname_trigger = {
	OR = { 
		has_nickname = nick_haardraade
		has_nickname = nick_lodbrok
		has_nickname = nick_the_boneless
		has_nickname = nick_bluetooth
		has_nickname = nick_snake_in_the_eye
		has_nickname = nick_fairhair
		has_nickname = nick_whiteshirt
		has_nickname = nick_the_saoshyant
		has_nickname = nick_hardeknud
		has_nickname = nick_the_world_burner
		has_nickname = nick_the_vatican_prince
		has_nickname = nick_the_vatican_princess
		has_nickname = nick_the_pale_prince
		has_nickname = nick_the_leechlord
		has_nickname = nick_the_black_boar
		has_nickname = nick_the_apostate
		has_nickname = nick_the_hawk_of_quarysh
		has_nickname = nick_the_submissive 			
		has_nickname = nick_the_deliverer			
		has_nickname = nick_the_purified			
		has_nickname = nick_the_illuminated		
		has_nickname = nick_the_exalted			
		has_nickname = nick_the_awoken 			
		has_nickname = nick_the_bleeding_eyes		
		has_nickname = nick_the_sky_rider			
		has_nickname = nick_the_civilized 
		has_nickname = nick_the_missionary 		
		has_nickname = nick_the_proselytizer 		
		has_nickname = nick_the_adjudicator	 	
		has_nickname = nick_the_enlightened				
		has_nickname = nick_the_waking_teacher 	
		has_nickname = nick_the_whirling_spell	
		has_nickname = nick_the_horse_shepherd	
		has_nickname = nick_the_educator 	
		has_nickname = nick_the_white_raven
		has_nickname = nick_the_salt_snake
		has_nickname = nick_the_salt_viper
		has_nickname = nick_the_siren
		has_nickname = nick_the_wyrm
		has_nickname = nick_the_fury
		has_nickname = nick_the_stormforged
		has_nickname = nick_the_tempest_of_capital
		has_nickname = the_panther_head 
		has_nickname = the_thunderbolt 
		has_nickname = the_whirlwind 
		has_nickname = the_black_whirlwind 
		has_nickname = the_winged_tiger 
		has_nickname = the_turbulent_river_dragon 
		has_nickname = the_ferocious_giant 
		has_nickname = the_prodigy 
		has_nickname = nick_of_the_nine_hostages 
		has_nickname = nick_gods_torturer 
		has_nickname = nick_gods_hedonist 
		has_nickname = nick_gods_cannibal 
		has_nickname = nick_gods_drunkard
		has_nickname = nick_papal_lover  
		has_nickname = nick_gods_seducer 
		has_nickname = nick_the_red_storm
		has_nickname = nick_the_scarlet_hands
		has_nickname = nick_the_blood_monger
		has_nickname = nick_the_black_skull
		has_nickname = nick_the_heart_eater
		has_nickname = nick_the_slaughterer
		has_nickname = nick_the_spirit_stalker
		has_nickname = nick_the_soul_flayer
		has_nickname = nick_the_crimson_reaper
		has_nickname = nick_the_dreaded
		has_nickname = nick_the_chest_buster
		has_nickname = nick_the_dragonlord
		has_nickname = nick_the_imperious
		has_nickname = nick_the_mountain_that_rides
		has_nickname = nick_the_stallion_that_mounts_the_world
		has_nickname = nick_the_golden
		has_nickname = nick_longthorn
		has_nickname = nick_the_red_lion
		has_nickname = nick_the_lion_king
		has_nickname = nick_the_sword_of_the_morning
		has_nickname = nick_the_dragonknight
		has_nickname = nick_the_krakenslayer
		has_nickname = nick_the_iron_storm
		has_nickname = nick_the_dragonslayer
		has_nickname = nick_thunderbolt
		has_nickname = nick_the_hand_of_chaos
	}
}

#Sex restrictions on Great Tribal Festival activities.
can_enter_festival_physical_competitions_trigger = { 
	is_adult = yes
	OR = {
		AND = {
			is_female = no
			OR = { 
				NOT = { has_religion_feature = religion_matriarchal }
				is_member_of_any_warrior_lodge_trigger = yes
				has_character_flag = special_marshal
			}
		}
		AND = {
			is_female = yes
			female_get_masculine_event_trigger = yes
		}	
	}
}

has_at_least_3_traits_in_common_with_prev_trigger = {
	calc_true_if = { 
		amount = 3
		#Virtues...
		AND = {
			trait = chaste
			PREV = { trait = chaste }
		}
		AND = {
			trait = temperate
			PREV = { trait = temperate }
		}
		AND = {
			trait = charitable
			PREV = { trait = charitable }
		}
		AND = {
			trait = diligent
			PREV = { trait = diligent }
		}
		AND = {
			trait = patient
			PREV = { trait = patient }
		}
		AND = {
			trait = kind
			PREV = { trait = kind }
		}
		AND = {
			trait = humble
			PREV = { trait = humble }
		}

		#sins...
		AND = {
			trait = lustful
			PREV = { trait = lustful }
		}
		AND = {
			trait = gluttonous
			PREV = { trait = gluttonous }
		}
		AND = {
			trait = greedy
			PREV = { trait = greedy }
		}
		AND = {
			trait = slothful
			PREV = { trait = slothful }
		}
		AND = {
			trait = envious
			PREV = { trait = envious }
		}
		AND = {
			trait = wroth
			PREV = { trait = wroth }
		}
		AND = {
			trait = proud
			PREV = { trait = proud }
		}

		#Others traits!
		AND = {
			trait = ambitious
			PREV = { trait = ambitious }
		}
		AND = {
			trait = arbitrary
			PREV = { trait = arbitrary }
		}
		AND = {
			trait = brave
			PREV = { trait = brave }
		}
		AND = {
			trait = content
			PREV = { trait = content }
		}
		AND = {
			trait = craven
			PREV = { trait = craven }
		}
		AND = {
			trait = cruel
			PREV = { trait = cruel }
		}
		AND = {
			trait = cynical
			PREV = { trait = cynical }
		}
		AND = {
			trait = deceitful
			PREV = { trait = deceitful }
		}
		AND = {
			trait = erudite
			PREV = { trait = erudite }
		}
		AND = {
			trait = gregarious
			PREV = { trait = gregarious }
		}
		AND = {
			trait = honest
			PREV = { trait = honest }
		}
		AND = {
			trait = just
			PREV = { trait = just }
		}
		AND = {
			trait = paranoid
			PREV = { trait = paranoid }
		}
		AND = {
			trait = shy
			PREV = { trait = shy }
		}
		AND = {
			trait = stubborn
			PREV = { trait = stubborn }
		}
		AND = {
			trait = trusting
			PREV = { trait = trusting }
		}
		AND = {
			trait = zealous
			PREV = { trait = zealous }
		}
		
		AND = {
			trait = ruthless
			PREV = { trait = ruthless }
		}
		AND = {
			trait = honorable
			PREV = { trait = honorable }
		}
		AND = {
			trait = selfish
			PREV = { trait = selfish }
		}
		AND = {
			trait = authoritative
			PREV = { trait = authoritative }
		}
		AND = {
			has_fashionable_groomed_trigger = yes
			PREV = { has_fashionable_groomed_trigger = yes }
		}
	}
}

has_at_least_3_traits_opposite_prev_trigger = {
	calc_true_if = { 
		amount = 3
		#Virtues...
		AND = {
			trait = chaste
			PREV = { trait = lustful }
		}
		AND = {
			trait = temperate
			PREV = { trait = gluttonous }
		}
		AND = {
			trait = charitable
			PREV = { trait = greedy }
		}
		AND = {
			trait = diligent
			PREV = { trait = slothful }
		}
		AND = {
			trait = patient
			PREV = { trait = wroth }
		}
		AND = {
			trait = kind
			PREV = {
				OR = {
					trait = envious
					trait = cruel
				}
			}
		}
		AND = {
			trait = humble
			PREV = { trait = proud }
		}

		#sins...
		AND = {
			trait = lustful
			PREV = { trait = chaste }
		}
		AND = {
			trait = gluttonous
			PREV = { trait = temperate }
		}
		AND = {
			trait = greedy
			PREV = { trait = charitable }
		}
		AND = {
			trait = slothful
			PREV = { trait = diligent }
		}
		AND = {
			OR = {
				trait = envious
				trait = cruel
			}
			PREV = { trait = kind }
		}
		AND = {
			trait = wroth
			PREV = { trait = patient }
		}
		AND = {
			trait = proud
			PREV = { trait = humble }
		}

		#Others traits!
		AND = {
			trait = ambitious
			PREV = { trait = content }
		}
		AND = {
			trait = arbitrary
			PREV = { trait = just }
		}
		AND = {
			trait = brave
			PREV = { trait = craven }
		}
		AND = {
			trait = content
			PREV = { trait = ambitious }
		}
		AND = {
			trait = craven
			PREV = { trait = brave }
		}
		AND = {
			trait = cynical
			PREV = { trait = zealous }
		}
		AND = {
			trait = deceitful
			PREV = { trait = honest }
		}
		AND = {
			trait = gregarious
			PREV = { trait = shy }
		}
		AND = {
			trait = honest
			PREV = { trait = deceitful }
		}
		AND = {
			trait = just
			PREV = { trait = arbitrary }
		}
		AND = {
			trait = paranoid
			PREV = { trait = trusting }
		}
		AND = {
			trait = shy
			PREV = { trait = gregarious }
		}
		AND = {
			trait = trusting
			PREV = { trait = paranoid }
		}
		AND = {
			trait = zealous
			PREV = { trait = cynical }
		}
	}
}

has_any_sympathy_trait_trigger = { 
	OR = {
		trait = sympathy_westerosi
		trait = sympathy_drowned_god
		trait = sympathy_essos_group
		trait = sympathy_ghiscar_rel
		trait = sympathy_valyrian_rel_group
		trait = sympathy_wildling_religion
		trait = sympathy_sarnor_rel
		trait = sympathy_qarth_rel
		trait = sympathy_far_east_group
		trait = sympathy_ibben_rel
		trait = sympathy_dothraki_rel_group
		trait = sympathy_jogos_rel_group
		trait = sympathy_lhazar_rel_group
		trait = sympathy_summer_rel_group
		trait = sympathy_sothoryos_rel_group
		trait = sympathy_pirate_group
		trait = sympathy_pagans
	}
}

preferred_gender_based_on_laws_trigger = {
	OR = {
		AND = {
			is_female = no
			PREV = {
				OR = {
					has_law = cognatic_succession
					has_law = agnatic_succession
				}
			}
		}
		PREV = { has_law = true_cognatic_succession }
		AND = {
			is_female = yes
			PREV = {
				OR = {
					has_law = enatic_succession
					has_law = enatic_cognatic_succession
				}
			}
		}
	}
}

has_bad_priest_trait_trigger = {
	OR = {
		trait = bad_priest_christian
		trait = bad_priest_muslim
		trait = bad_priest_norse
		trait = bad_priest_tengri
		trait = bad_priest_zoroastrian
		trait = bad_priest_aztec
	}
}

# Referenced by the "button_rename" button in the character view 
can_rename_character_trigger = {
	is_liege_or_above = FROM
	dynasty = FROM
	age < 10
}

is_sick_or_injured_trigger = {
	OR = {
		trait = pneumonic
		trait = syphilitic
		trait = leper
		trait = maimed
		trait = infirm
		trait = incapable
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = mangled
		trait = severely_injured
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = scurvy
		trait = has_bloody_flux
		trait = has_greyscale
		trait = old_ones_scourge
		trait = has_red_death
		trait = has_butterfly_fever
		trait = crippled
		trait = disfigured_AGOT
	}
}

has_fair_trait_trigger = {
	OR = {
		trait = fair
		has_fashionable_groomed_trigger = yes
	}
}

has_ugly_trait_trigger = {
	OR = {
		trait = ugly
		trait = uncouth
	}
}
parent_for_elective_succession_trigger = {
	NOT = { character = ROOT } #Not the current ruler.
	can_inherit_titles_trigger = yes
	OR = {
		any_claim = { title = ROOT_FROMFROM }
		AND = { 
			is_close_relative = ROOT
			OR = { 
				dynasty = ROOT
				AND = { is_landed = yes higher_real_tier_than = BARON }
			}
		}
		AND = { 
			OR = { 
				higher_real_tier_than = BARON #All count tier and above
				AND = { #Barons in duke tier realms
					tier = BARON
					ROOT_FROMFROM = { lower_real_tier_than = KING } 
				}
			}
			OR = { #Either defacto direct vassal, or independent ruler who is dejure vassal.
				is_liege_or_above = ROOT 
				AND = { 
					any_dejure_liege = { title = ROOT_FROMFROM } 
					independent = yes
				}
			}
		}
	}
	NAND = { #Candidate should not be a landless Courtier that is about to inherit a Theocracy or Republic
		is_ruler = no
		any_heir_title = {
			NOT = { is_feudal = yes }
		}
	}
	OR = { #If the title controls the religion, candidates must be of the same religion.
		ROOT = { 
			NOT = { 
				controls_religion = yes
			}
		}
		religion = ROOT
	}
	NOR = {
		mother = {
			is_alive = yes
			NOT = { is_married = ROOT }
			parent_for_elective_succession_trigger = yes
		}
		father = {
			is_alive = yes
			NOT = { is_married = ROOT }
			parent_for_elective_succession_trigger = yes
		}
		is_theocracy = yes
		is_republic = yes
		is_merchant_republic = yes
	}
}
this_has_terrible_opinion_modifier_of_root_extended_trigger = {
	OR = {	
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }
		has_opinion_modifier = { modifier = attempted_murder who = ROOT }
		has_opinion_modifier = { modifier = opinion_spouse_slayer who = ROOT }
		has_opinion_modifier = { modifier = opinion_castrated_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_blinded_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_castrated_family who = ROOT }
		has_opinion_modifier = { modifier = opinion_castrated_close_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_blinded_family who = ROOT }
		has_opinion_modifier = { modifier = opinion_blinded_close_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_attempted_abduction who = ROOT }
		has_opinion_modifier = { modifier = opinion_unfaithful_wife who = ROOT }
		has_opinion_modifier = { modifier = opinion_cuckolded who = ROOT }
		has_opinion_modifier = { modifier = opinion_killed_lover who = ROOT }
		has_opinion_modifier = { modifier = opinion_tortured_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_tortured_family who = ROOT }
		has_opinion_modifier = { modifier = opinion_tortured_close_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_mutilated_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_mutilated_family who = ROOT }
		has_opinion_modifier = { modifier = opinion_blackmailed who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_consort who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_wife_consort who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_relative_consort who = ROOT }
		has_opinion_modifier = { modifier = opinion_slandered who = ROOT }
		has_opinion_modifier = { modifier = opinion_humiliated_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_humiliated_family who = ROOT }
		has_opinion_modifier = { modifier = opinion_humiliated_close_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_flayed_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_flayed_lover who = ROOT }
		has_opinion_modifier = { modifier = opinion_flayed_friend who = ROOT }
		has_opinion_modifier = { modifier = opinion_flayed_child who = ROOT }
		has_opinion_modifier = { modifier = opinion_disinherited_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_bastard_spawn who = ROOT }
		has_opinion_modifier = { modifier = opinion_disinherited_my_child who = ROOT }
		has_opinion_modifier = { modifier = opinion_conspired_against_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_conspired_against_child who = ROOT }
		has_opinion_modifier = { modifier = opinion_unfaithful_deceiver who = ROOT }
		has_opinion_modifier = { modifier = opinion_cuckolded_AGOT who = ROOT }
		has_opinion_modifier = { modifier = opinion_vengeance who = ROOT }
		has_opinion_modifier = { modifier = opinion_castrated_son who = ROOT }
		has_opinion_modifier = { modifier = opinion_castrated_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_castrated_spouse who = ROOT }
		has_opinion_modifier = { modifier = opinion_blinded_child who = ROOT }
		has_opinion_modifier = { modifier = opinion_blinded_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_blinded_spouse who = ROOT }
		has_opinion_modifier = { modifier = opinion_tortured_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_tortured_lover who = ROOT }
		has_opinion_modifier = { modifier = opinion_tortured_friend who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_upon_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_upon_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_upon_spouse who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_upon_lover who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_upon_friend who = ROOT }
		has_opinion_modifier = { modifier = opinion_scandalised_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_scandalised_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_aborted_my_child who = ROOT }
		has_opinion_modifier = { modifier = declared_me_insane who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_marriage who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_marriage_child who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_marriage_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_marriage_lover who = ROOT }
		has_opinion_modifier = { modifier = opinion_forced_marriage_friend who = ROOT }
		has_opinion_modifier = { modifier = opinion_exiled_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_assaulted_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_unfaithful_consort who = ROOT }
		has_opinion_modifier = { modifier = opinion_slept_with_my_consort who = ROOT }
		has_opinion_modifier = { modifier = opinion_oubilette_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_oubilette_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_oubilette_friend who = ROOT }
		has_opinion_modifier = { modifier = opinion_oubilette_lover who = ROOT }
		has_opinion_modifier = { modifier = attempted_kidnapping who = ROOT }
		has_opinion_modifier = { modifier = attempted_kidnapping_of_kin  who = ROOT }
		has_opinion_modifier = { modifier = attempted_murder_of_close_kin who = ROOT }
		has_opinion_modifier = { modifier = kidnapped_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_kidnapped_kin who = ROOT }
		has_opinion_modifier = { modifier = opinion_enslaved_me who = ROOT }
		has_opinion_modifier = { modifier = opinion_enslaved_close_relative who = ROOT }
	}
}

# Hardcoded trigger for Coronation alert. Only used (except where referenced in script) for that alert, on top of the "potential" for the coronation decision. If it does not exist, only the decision potential is used
needs_coronation_trigger = {
	is_adult = yes
}

has_any_leadership_trait_trigger = {
	OR = {
		trait = aggressive_leader
		trait = narrow_flank_leader
		trait = cavalry_leader
		trait = defensive_leader
		trait = desert_terrain_leader
		trait = experimenter
		trait = flanker
		trait = flat_terrain_leader
		trait = heavy_infantry_leader
		trait = holy_warrior
		trait = inspiring_leader
		trait = jungle_terrain_leader
		trait = light_foot_leader
		trait = mountain_terrain_leader
		trait = organizer
		trait = rough_terrain_leader
		trait = siege_leader
		trait = trickster
		trait = unyielding_leader
		trait = logistics_expert
		trait = master_of_flame
		trait = sapper
		trait = levy_coordinator
		trait = war_elephant_leader
		trait = winter_soldier
	}
}

dlc_religion_check_trigger = {
	NAND = {
		religion_group = pagan_group
		NOR = {
			has_dlc = "The Old Gods"
			has_dlc = "Holy Fury"
		}
	}
}

this_has_execution_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = THIS modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = THIS modifier = opinion_traitor }
		#has_opinion_modifier = { who = THIS modifier = opinion_regicide_traitor }
		# has_opinion_modifier = { who = THIS modifier = attempted_murder_of_spouse }
		# has_opinion_modifier = { who = THIS modifier = attempted_murder_of_child }
		# has_opinion_modifier = { who = THIS modifier = attempted_murder_of_parent }
		# has_opinion_modifier = { who = THIS modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = THIS modifier = attempted_murder }
		#has_opinion_modifier = { who = THIS modifier = opinion_killed_close_kin }
		#has_opinion_modifier = { who = THIS modifier = opinion_killed_father }
		#has_opinion_modifier = { who = THIS modifier = opinion_takfir }
		has_opinion_modifier = { who = THIS modifier = opinion_attempted_abduction }
		#has_opinion_modifier = { who = THIS modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = THIS modifier = opinion_cuckolded }
		has_opinion_modifier = { who = THIS modifier = opinion_charge_dw }
		has_opinion_modifier = { who = THIS modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = THIS modifier = opinion_accused_apostate }
		#AGOT
		has_opinion_modifier = { who = THIS modifier = opinion_murdered_first_ranger }
		has_opinion_modifier = { who = THIS modifier = opinion_found_guilty }
		has_opinion_modifier = { who = THIS modifier = opinion_vengeance }
		has_opinion_modifier = { who = THIS modifier = opinion_confessed }
		has_opinion_modifier = { who = THIS modifier = opinion_piracy }
		has_opinion_modifier = { who = THIS modifier = opinion_murdered_my_liege }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_liege }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_close_kin }
		has_opinion_modifier = { who = THIS modifier = killed_vassal }
		has_opinion_modifier = { who = THIS modifier = kidnapped_me }
		has_opinion_modifier = { who = THIS modifier = opinion_kidnapped_kin }
		has_opinion_modifier = { who = THIS modifier = opinion_defeated_khal }
		has_opinion_modifier = { who = THIS modifier = opinion_joined_rebellion }
		has_opinion_modifier = { who = THIS modifier = opinion_traitor_AGOT }
	}
}

root_has_execution_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = ROOT modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_traitor }
		#has_opinion_modifier = { who = ROOT modifier = opinion_regicide_traitor }
		# has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		# has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		# has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		# has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		#has_opinion_modifier = { who = ROOT modifier = opinion_killed_close_kin }
		#has_opinion_modifier = { who = ROOT modifier = opinion_killed_father }
		#has_opinion_modifier = { who = ROOT modifier = opinion_takfir }
		has_opinion_modifier = { who = ROOT modifier = opinion_attempted_abduction }
		#has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_dw }
		has_opinion_modifier = { who = ROOT modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = ROOT modifier = opinion_accused_apostate }
		#AGOT
		has_opinion_modifier = { who = ROOT modifier = opinion_murdered_first_ranger }
		has_opinion_modifier = { who = ROOT modifier = opinion_found_guilty }
		has_opinion_modifier = { who = ROOT modifier = opinion_vengeance }
		has_opinion_modifier = { who = ROOT modifier = opinion_confessed }
		has_opinion_modifier = { who = ROOT modifier = opinion_piracy }
		has_opinion_modifier = { who = ROOT modifier = opinion_murdered_my_liege }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_liege }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_close_kin }
		has_opinion_modifier = { who = ROOT modifier = killed_vassal }
		has_opinion_modifier = { who = ROOT modifier = kidnapped_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_kidnapped_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_defeated_khal }
		has_opinion_modifier = { who = ROOT modifier = opinion_joined_rebellion }
		has_opinion_modifier = { who = ROOT modifier = opinion_traitor_AGOT }
	}
}

root_has_imprisonment_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = ROOT modifier = opinion_looted }
		has_opinion_modifier = { who = ROOT modifier = declared_war }
		has_opinion_modifier = { who = ROOT modifier = opinion_dishonorable }
		has_opinion_modifier = { who = ROOT modifier = opinion_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_rebel_traitor }
		#has_opinion_modifier = { who = ROOT modifier = opinion_regicide_traitor }
		# has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		# has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		# has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		# has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		has_opinion_modifier = { who = ROOT modifier = scheming_bastard }
		#has_opinion_modifier = { who = ROOT modifier = opinion_murder_attempt }
		#has_opinion_modifier = { who = ROOT modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_corrupt }
		has_opinion_modifier = { who = ROOT modifier = suspect_of_murder }
		has_opinion_modifier = { who = ROOT modifier = accused_of_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_blackmailed }
		#has_opinion_modifier = { who = ROOT modifier = opinion_killed_father }
		#has_opinion_modifier = { who = ROOT modifier = opinion_fatwa_target }
		has_opinion_modifier = { who = ROOT modifier = opinion_refused_order }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_forced_consort }
		has_opinion_modifier = { who = ROOT modifier = opinion_forced_wife_consort }
		has_opinion_modifier = { who = ROOT modifier = opinion_forced_relative_consort }
		has_opinion_modifier = { who = ROOT modifier = opinion_witch }
		#has_opinion_modifier = { who = ROOT modifier = opinion_takfir }
		has_opinion_modifier = { who = ROOT modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband }
		#has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_heresiarch }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_infidel }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_deviant }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_illegitimate }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_cultist }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_dw }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_slanderer }
		has_opinion_modifier = { who = ROOT modifier = opinion_slandered }
		has_opinion_modifier = { who = ROOT modifier = abuse_of_office }
		#has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_humiliated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_humiliated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_humiliated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_unjust_execution }
		has_opinion_modifier = { who = ROOT modifier = opinion_thief }
		has_opinion_modifier = { who = ROOT modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = ROOT modifier = opinion_accused_apostate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tried_to_get_me_killed }
		has_opinion_modifier = { who = ROOT modifier = opinion_left_me_to_die }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfit_ruler }
		has_opinion_modifier = { who = ROOT modifier = elder_murderer }
		has_opinion_modifier = { who = ROOT modifier = opinion_murdered_first_ranger }
		has_opinion_modifier = { who = ROOT modifier = opinion_flayed_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_flayed_lover }
		has_opinion_modifier = { who = ROOT modifier = opinion_flayed_friend }
		has_opinion_modifier = { who = ROOT modifier = opinion_flayed_child }
		has_opinion_modifier = { who = ROOT modifier = opinion_disinherited_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_bastard_spawn }
		has_opinion_modifier = { who = ROOT modifier = opinion_disinherited_my_child }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
		# has_opinion_modifier = { who = ROOT modifier =  }
	}
}
region_africa_west_central_or_east_trigger = {
	always = no
}

has_rain_or_drought_modifier_trigger = {
	OR = {
		has_province_modifier = africa_light_rain
		has_province_modifier = africa_heavy_rain
		has_province_modifier = africa_drought_risk
		has_province_modifier = africa_drought
	}
}

any_neighbor_province_has_dry_weather_trigger = {
	any_neighbor_province = {
    	is_land = yes
		region_africa_west_central_or_east_trigger = yes
		OR = {
			has_province_modifier = africa_drought_risk
			has_province_modifier = africa_drought
		}
	}
}
any_neighbor_province_has_heavy_rain_trigger = {
	any_neighbor_province = {
    	is_land = yes
		region_africa_west_central_or_east_trigger = yes
		has_province_modifier = africa_heavy_rain
	}
}
any_neighbor_province_has_light_rain_trigger = {
	any_neighbor_province = {
    	is_land = yes
		region_africa_west_central_or_east_trigger = yes
		has_province_modifier = africa_light_rain
	}
}



##########
###AGOT###
##########

has_valyrian_steel_sword_trigger = {
	custom_tooltip = {
		text = has_valyrian_steel_sword_trigger
		hidden_tooltip = {
			OR = {
				any_artifact = { has_artifact_flag = valyrian_steel }
				trait = valyrian_steel
				trait = longclaw
				trait = longclaw_snow
				trait = blackfyre
				trait = darksister
				trait = dawn
				trait = brightroar
				trait = heartsbane
				trait = ice
				trait = nightfall
				trait = darksister
				trait = ladyforlorn
				trait = redrain
				trait = widowswail
				trait = oathkeeper
				trait = crabspincer
				trait = strangers_mercy
				trait = vigilance
				trait = orphan_maker
				trait = truth
				trait = lamentation
				trait = poison
				trait = seafoam
				trait = anger
				trait = black_death
				trait = compassion
				trait = concession
				trait = del_pino
				trait = el_swordo
				trait = gold_sword
				trait = happyness
				trait = hubris
				trait = justice
				trait = kingmaker
				trait = passion
				trait = rage
				trait = sightblinder
				trait = the_monarchist
				trait = the_usurper
				trait = worldeater
				trait = worlds_envy
				trait = basilisk
				trait = behemoth
				trait = chimera
				trait = dragonsphinx
				trait = duty
				trait = longthorn
				trait = manbane
				trait = scimitar_gc
				trait = sphinx
				trait = statler
				trait = trish
				trait = garths_fist
				trait = kraken_blade
				trait = stormbolt
				trait = just_maid
			}
		}	
	}	
}
##Slavery
#if these change, adjust localisation
has_slavery_religion_trigger = {
	custom_tooltip = {
		text = has_slavery_religion_trigger
		hidden_tooltip = {
			OR = {			
				religion = pirate
				religion = corsair
				is_lady_of_the_waves_pirate_religion_trigger = yes	
				has_religion_feature = religion_feature_pro_slavery
			}
		}
	}	
}
has_slavery_culture_trigger = {
	custom_tooltip = {
		text = has_slavery_culture_trigger
		hidden_tooltip = {
			OR = {
				culture_group = ghiscari_group
				AND = {
					culture_group = valyrian
					NOT = { culture = western_valyrian }
				}	
				AND = {
					culture_group = free_cities
					NOT = { culture = braavosi }
					NOT = { culture = lorathi }
				}
				culture = dothraki
				culture_group = yi_ti_group
				culture = lengi
				culture = qartheen
				culture = qartheen_lowborn
				culture_group = moraqi_group
				culture_group = asshai_group
				culture_group = nghai_group
			}
		}
	}	
}
has_antislavery_religion_trigger = {
	custom_tooltip = {
		text = has_antislavery_religion_trigger
		hidden_tooltip = {
			OR = {
				religion_group = westerosi_religion
				religion_group = summer_rel_group
				religion = moonsingers
				religion = moonsingers_reformed
				religion = father_of_waters
				religion = father_of_waters_reformed
				religion = rhoynar_pagan
				religion = rhoynar_pagan_reformed
				religion = great_shepherd
				religion = great_shepherd_reformed
				has_religion_feature = religion_feature_anti_slavery
				has_religion_feature = religion_feature_moonsingers
				has_religion_feature = religion_feature_rhoynar_pagan
			}
			NOT = { has_religion_feature = religion_feature_pro_slavery }
		}
	}	
}
has_antislavery_culture_trigger = {
	custom_tooltip = {
		text = has_antislavery_culture_trigger
		hidden_tooltip = {
			OR = {
				culture_group = andal
				culture_group = first_men
				culture_group = dornish
				culture_group = free_folk
				culture = braavosi
				#culture = naathi
				#culture = lhazareen
			}
		}
	}	
}
has_full_slavery_trigger = {
	hidden_tooltip = { NOT = { has_game_rule = { name = slavery value = off } } }
	OR = {
		crownlaw_title = { has_law = slavery_2 }
		custom_tooltip = { # No current crown law title
			text = TOOLTIPSELLSLAVENOCROWNLAW
			hidden_tooltip = {
				independent = yes
				NOT = { crownlaw_title = { always = yes } }
				NOT = { trait = nightswatch }
				OR = {
					has_slavery_culture_trigger = yes
					has_slavery_religion_trigger = yes
				}	
			}					
		}
	}
}
can_buy_courtier_slaves_trigger = {
	hidden_tooltip = { NOT = { has_game_rule = { name = slavery value = off } } }
	OR = {
		has_full_slavery_trigger = yes
		crownlaw_title = { has_law = slavery_1 }
	}
}

can_host_citadel_trigger = {
	NOT = { trait = nightswatch }
	NOT = { has_character_flag =  rejected_citadel }
	demesne_size = 1
	higher_tier_than = COUNT
	OR = {
		culture_group = andal
		culture_group = dornish
		culture = western_valyrian
		culture_group = first_men
		AND = {
			is_alternate_start = no
			capital_scope = { region = world_westeros }
		}	
	}
	NOT = { culture = rhoynar }
	NOT = { culture = old_andal }
	NOT = { culture_group = winter_group }
	NOT = { trait = wildling }
	any_vassal = {
		primary_title = { 
			NOT = { holding_type = temple } 
			NOT = { base_value_5_trigger = yes }
			NOT = { base_value_6_trigger = yes }
		}
		tier = BARON
		is_patrician = no
	}
}
can_inherit_titles_trigger = {
	custom_tooltip = {
		text = can_inherit_titles_trigger
		hidden_tooltip = {
			NOR = {
				trait = bastard
				trait = eunuch
				trait = kingsguard
				trait = disinherited
				trait = nightswatch
				trait = salt_wife
				trait = dosh_khaleen
				#trait = dragon
				trait = maester
				trait = archmaester
				trait = silent_sister
				trait = red_priest
				trait = drowned
				trait = grace
				trait = warlock
				trait = shadowbinder
				trait = bearded_priest
				trait = slave
				trait = septa
				trait = septon
				trait = ruin
				trait = cotf
				trait = courtesan
				trait = prostitute
				trait = winter_wasteland
				trait = love_priest
				trait = horse
				trait = incapable_dragon
				trait = monk
				trait = nun
			}
		}
	}	
}
can_press_claims_trigger = {
	custom_tooltip = {
		text = can_press_claims_trigger
		hidden_tooltip = {
			NOR = {
				#trait = bastard
				#trait = eunuch
				trait = kingsguard
				#trait = disinherited
				trait = nightswatch
				trait = salt_wife
				trait = dosh_khaleen
				#trait = dragon
				trait = maester
				trait = archmaester
				trait = silent_sister
				trait = red_priest
				trait = drowned
				trait = grace
				trait = warlock
				trait = shadowbinder
				trait = bearded_priest
				trait = slave
				trait = septa
				trait = septon
				trait = love_priest
				trait = horse
				trait = incapable_dragon
				trait = monk
				trait = nun
			}
		}
	}	
}
can_marry_trigger = {
	custom_tooltip = {
		text = can_marry_trigger
		hidden_tooltip = {
			NOR = {
				is_married = yes
				is_consort = yes
				is_betrothed = yes
				
				trait = eunuch
				trait = kingsguard
				trait = disinherited
				trait = nightswatch
				trait = salt_wife
				trait = dosh_khaleen
				trait = dragon
				trait = maester
				trait = archmaester
				trait = silent_sister
				trait = red_priest
				trait = drowned
				trait = grace
				trait = warlock
				trait = shadowbinder
				trait = bearded_priest
				trait = slave
				trait = septa
				trait = septon
				trait = has_missing
				
				trait = giant
				trait = widowed
				trait = forbid_marriage
				trait = ruin
				trait = cotf
				trait = prostitute
				trait = courtesan
				trait = white_walker
				trait = winter_wasteland
				trait = love_priest
				trait = horse
				trait = refusing_marriage
				trait = monk
				trait = nun
			}
		}
	}	
}
is_summer_trigger = {
	custom_tooltip = {
		text = is_summer_trigger
		hidden_tooltip = {
			OR = {
				has_global_flag = short_summer
				has_global_flag = normal_summer
				has_global_flag = long_summer
			}
		}
	}	
}
is_winter_trigger = {
	custom_tooltip = {
		text = is_winter_trigger
		hidden_tooltip = {
			OR = {
				has_global_flag = asoiaf_mild_winter
				has_global_flag = asoiaf_normal_winter
				has_global_flag = asoiaf_harsh_winter
			}
		}
	}	
}
eligible_trial_by_combat_champion_for_ROOT_trigger = {
	age = 16
	OR = {
		opinion = { who = ROOT value = 0 }
		trait = honorable
		trait = just
		trait = familyperson
		trait = kingsguard
	}
	NOT = { is_rival = ROOT }
	OR = {
		is_female = no
		ROOT = {
			female_warrior_culture_trigger = yes
		}	
	}
	OR = {
		liege = { character = ROOT }
		is_close_relative = ROOT
		is_friend = ROOT
	}	
	combat_rating = 30
	NOT = { has_severe_disability_trigger = yes }	
	NOT_mythical_creature_trigger = yes
	NOT = { ROOT = { host = { character = PREVPREV } } }
	custom_tooltip = {
		text = TOOLTIPtrial_by_combat_KG
		hidden_tooltip = {
			OR = {
				ROOT = { has_landed_title = e_iron_throne }
				liege = { character = ROOT }
				NOT = { trait = kingsguard }
			}	
		}
	}	
	custom_tooltip = {
		text = TOOLTIPtrial_by_combat_SLAVE
		hidden_tooltip = {
			OR = {
				liege = { character = ROOT }
				NOT = { trait = slave }
			}
		}
	}	
	NAND = {
		trait = nightswatch
		ROOT = { NOT = { trait = nightswatch } }
	}
	is_ill = no
	prisoner = no	
	NOR = {
		war_with = ROOT
		any_liege = { war_with = ROOT }
	}
	NOT = { 
		reverse_has_opinion_modifier = {
			who = ROOT
			modifier = refused_championing
		}
	}
}
eligible_trial_by_combat_champion_for_FROM_trigger = {
	age = 16
	OR = {
		opinion = { who = ROOT_FROM value = 0 }
		trait = honorable
		trait = just
		trait = familyperson
		trait = kingsguard
	}	
	NOT = { is_rival = ROOT_FROM }
	OR = {
		is_female = no
		ROOT_FROM = {
			female_warrior_culture_trigger = yes
		}	
	}
	OR = {
		liege = { character = ROOT_FROM }
		is_close_relative = ROOT_FROM
		is_friend = ROOT_FROM
	}	
	combat_rating = 30	
	NOT = { has_severe_disability_trigger = yes }	
	NOT_mythical_creature_trigger = yes
	NOT = { ROOT_FROM = { host = { character = PREVPREV } } }
	custom_tooltip = {
		text = TOOLTIPtrial_by_combat_KG
		hidden_tooltip = {
			OR = {
				ROOT_FROM = { has_landed_title = e_iron_throne }
				liege = { character = ROOT_FROM }
				NOT = { trait = kingsguard }
			}	
		}
	}	
	custom_tooltip = {
		text = TOOLTIPtrial_by_combat_SLAVE
		hidden_tooltip = {
			OR = {
				liege = { character = ROOT_FROM }
				NOT = { trait = slave }
			}
		}
	}	
	NAND = {
		trait = nightswatch
		ROOT_FROM = { NOT = { trait = nightswatch } }
	}
	is_ill = no
	prisoner = no
	NOR = {
		war_with = ROOT_FROM
		any_liege = { war_with = ROOT_FROM }
	}	
	NOT = { 
		reverse_has_opinion_modifier = {
			who = ROOT_FROM
			modifier = refused_championing
		}
	}
}
below_consort_limit_trigger = {
	custom_tooltip = {
		text = TOOLTIPbelow_consort_limit_trigger
		hidden_tooltip = {
			OR = {
				NOT = { num_of_consorts = 7 } #Most religions/governments with concubinage have 7 as the limit...
				AND = { #...except these, which have 20
					NOT = { num_of_consorts = 20 }
					OR = {
						is_drowned_god_religion_trigger = yes
						religion = gods_bone_mountains
						religion = gods_bone_mountains_reformed
						religion = dothraki_pagan
						religion = jogos_pagan
						religion = jogos_pagan_reformed
						religion = yiti_gods
						religion = yiti_gods_reformed
						government = pirate_government
						government = nomadic_government
					}
				}
			}
		}
	}
}
allow_temple_buildings_trigger = {
	trigger_if = {
		limit = { religion = the_seven }
		crownlaw_title = { has_law = investiture_law_3 }
	}
	trigger_else = {
		NOT = { is_unorganised_religion_trigger = yes }
	}
}
just_execution_reason_PREV_trigger = { #PREV has a valid reason to execute/exile THIS
	custom_tooltip = {
		text = TOOLTIPjust_execution_reason_PREV
		hidden_tooltip = {
			OR = { 
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_rebel_traitor }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_traitor }
				#reverse_has_opinion_modifier = { who = PREV modifier = opinion_regicide_traitor }
				# reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_spouse }
				# reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_child }
				# reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_parent }
				# reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_sibling }
				reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_vassal }
				reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder }
				#reverse_has_opinion_modifier = { who = PREV modifier = opinion_killed_close_kin }
				#reverse_has_opinion_modifier = { who = PREV modifier = opinion_killed_father }
				#reverse_has_opinion_modifier = { who = PREV modifier = opinion_takfir }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_attempted_abduction }
				#reverse_has_opinion_modifier = { who = PREV modifier = opinion_unfaithful_husband_crime }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_cuckolded }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_charge_dw }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_outlawed_society }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_accused_apostate }
				#AGOT
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_murdered_first_ranger }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_found_guilty }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_vengeance }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_confessed }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_piracy }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_murdered_my_liege }
				reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_liege }
				reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_close_kin }
				reverse_has_opinion_modifier = { who = PREV modifier = killed_vassal }
				reverse_has_opinion_modifier = { who = PREV modifier = kidnapped_me }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_kidnapped_kin }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_defeated_khal }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_joined_rebellion }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_traitor_AGOT }
			}
		}
	}
}
is_in_interregnum_trigger = {
	custom_tooltip = {
		text = TOOLTIPis_in_interregnum_trigger
		hidden_tooltip = {
			is_feudal = yes
			controls_religion = no
			is_patrician = no
			NOT = { trait = nightswatch }
			higher_tier_than = DUKE
			primary_title = {		
				is_variable_equal = { which = "lord_paramount_status" value = 2 } #1 = lord paramount, 2 = interregnum
			}	
		}
	}
}
demanded_trial_by_combat_trigger = {
	custom_tooltip = {
		text = TOOLTIPdemanded_trial_by_combat
		hidden_tooltip = {
			has_character_flag = demmanded_trial_by_combat
			NOT = { had_character_flag = { flag = demmanded_trial_by_combat days = 365 } }
		}
	}
}
eligible_triarch_trigger = {
	age = 15
	prisoner = no
	NOT = { is_incapable = yes }
	can_press_claims_trigger = yes
	NOT = { trait = former_slave }
	OR = { #Must belong to a party
		trait = elephant
		trait = tiger
	}	
	OR = { #Must be of Valyrian blood, or not be in a valyrian republic
		true_valyrian_culture_trigger = yes
		is_merchant_republic = yes
		any_liege = { is_merchant_republic = yes culture = volantene }
	}	
	NOT = { dynasty = 0 }
	NOT = { has_character_modifier = deposed_AGOT }
}
can_use_dragon_conquest_trigger = {
	independent = yes
	can_use_dragon_abilities_trigger = yes	
	trigger_if = {
		limit = { trait = dragon_rider }
		any_friend = {
			trait = dragon
			martial = 10
			NOT = { trait = maimed_dragon }
		}
	}	
	is_valyrian_freehold_trigger = no
	NOT = { any_liege = { is_valyrian_freehold_trigger = yes } }
	OR = {
		ai = yes
		multiplayer = no
		NOT = {
			has_game_rule = {
				name = multiplayer_invasions
				value = off
			}
		}
	}
}
is_divine_blood_dynasty_trigger = {
	custom_tooltip = {
		text = is_divine_blood_dynasty_trigger
		hidden_tooltip = {
			OR = {
				dynasty = 496 #Targaryen
				dynasty = 57 #Blackfyre
				dynasty = 497 #Aegons "of Essos"
				#Targ Cadets
				dynasty = 450204
				dynasty = 450205
				dynasty = 450206
				dynasty = 450207
				
				dynasty = 1507 #Codd
				
				has_dynasty_flag = coin_flip_dynasty
			}
		}
	}	
}
high_valyrian_dynasty_trigger = {
	custom_tooltip = {
		text = high_valyrian_dynasty_trigger
		hidden_tooltip = {
			OR = {
				dynasty = 496 #Targaryen
				dynasty = 57 #Blackfyre
				dynasty = 52 #Velaryon
				dynasty = 497 #Aegons "of Essos"
				#Targ Cadets
				dynasty = 450204
				dynasty = 450205
				dynasty = 450206
				dynasty = 450207
				has_dynasty_flag = high_valyrian
			}
		}
	}	
}
is_coin_flip_dynasty_trigger = {
	custom_tooltip = {
		text = is_coin_flip_dynasty_trigger
		hidden_tooltip = {
			OR = {
				dynasty = 496 #Targaryen
				dynasty = 57 #Blackfyre
				dynasty = 7000 #Bittersteel
				dynasty = 7001 #Bloodraven - not currently used
				dynasty = 7002 #Seastar - not currently used
				dynasty = 497 #Aegons "of Essos"
				#Targ Cadets
				dynasty = 450204
				dynasty = 450205
				dynasty = 450206
				dynasty = 450207
				has_dynasty_flag = coin_flip_dynasty
			}
		}
	}
}
is_weak_khal_trigger = {
	custom_tooltip = {
		text = is_weak_khal_trigger
		hidden_tooltip = {
			OR = {
				NOT = { prestige = 0 }
				NOR = {
					martial = 10
					trait = skilled_warrior
					trait = master_warrior
				}
				prisoner = yes
				has_severe_disability_trigger = yes
				is_weak_trigger = yes
				trait = imbecile
				trait = dwarf
				trait = clubfooted
				trait = eunuch
				trait = in_hiding
				trait = craven
			}
		}
	}
}

base_value_1_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_1
		has_building = ca_asoiaf_river_basevalue_1
		has_building = ca_asoiaf_dorne_basevalue_1
		has_building = ca_asoiaf_ironislands_basevalue_1
		has_building = ca_asoiaf_crown_basevalue_1
		has_building = ca_asoiaf_storm_basevalue_1
		has_building = ca_asoiaf_vale_basevalue_1
		has_building = ca_asoiaf_westerland_basevalue_1
		has_building = ca_asoiaf_reach_basevalue_1
		has_building = ca_asoiaf_essos_basevalue_1
		has_building = ca_asoiaf_summerisland_basevalue_1
		has_building = ca_asoiaf_qarth_basevalue_1
		has_building = ca_asoiaf_ghiscari_basevalue_1
		has_building = ca_asoiaf_lhazareen_basevalue_1
		has_building = ca_asoiaf_nighswatch_basevalue_1
		has_building = ca_asoiaf_eastern_basevalue_1
		has_building = ca_asoiaf_yiti_basevalue_1
		has_building = ca_asoiaf_ibben_basevalue_1
		has_building = ca_asoiaf_sarnor_basevalue_1
		has_building = ca_asoiaf_asshai_basevalue_1
		has_building = ca_asoiaf_valyria_basevalue_1
		has_building = ct_asoiaf_north_basevalue_1
		has_building = ct_asoiaf_river_basevalue_1
		has_building = ct_asoiaf_dorne_basevalue_1
		has_building = ct_asoiaf_ironislands_basevalue_1
		has_building = ct_asoiaf_crown_basevalue_1
		has_building = ct_asoiaf_storm_basevalue_1
		has_building = ct_asoiaf_vale_basevalue_1
		has_building = ct_asoiaf_westerland_basevalue_1
		has_building = ct_asoiaf_reach_basevalue_1
		has_building = ct_asoiaf_essos_basevalue_1
		has_building = ct_asoiaf_summerisland_basevalue_1
		has_building = ct_asoiaf_qarth_basevalue_1
		has_building = ct_asoiaf_ghiscari_basevalue_1
		has_building = ct_asoiaf_lhazareen_basevalue_1
		has_building = ct_asoiaf_eastern_basevalue_1
		has_building = ct_asoiaf_yiti_basevalue_1
		has_building = ct_asoiaf_ibben_basevalue_1
		has_building = ct_asoiaf_sarnor_basevalue_1
		has_building = ct_asoiaf_asshai_basevalue_1
		has_building = ct_asoiaf_valyria_basevalue_1
	}
}
base_value_2_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_2
		has_building = ca_asoiaf_river_basevalue_2
		has_building = ca_asoiaf_dorne_basevalue_2
		has_building = ca_asoiaf_ironislands_basevalue_2
		has_building = ca_asoiaf_crown_basevalue_2
		has_building = ca_asoiaf_storm_basevalue_2
		has_building = ca_asoiaf_vale_basevalue_2
		has_building = ca_asoiaf_westerland_basevalue_2
		has_building = ca_asoiaf_reach_basevalue_2
		has_building = ca_asoiaf_essos_basevalue_2
		has_building = ca_asoiaf_summerisland_basevalue_2
		has_building = ca_asoiaf_qarth_basevalue_2
		has_building = ca_asoiaf_ghiscari_basevalue_2
		has_building = ca_asoiaf_lhazareen_basevalue_2
		has_building = ca_asoiaf_nighswatch_basevalue_2
		has_building = ca_asoiaf_eastern_basevalue_2
		has_building = ca_asoiaf_yiti_basevalue_2
		has_building = ca_asoiaf_ibben_basevalue_2
		has_building = ca_asoiaf_sarnor_basevalue_2
		has_building = ca_asoiaf_asshai_basevalue_2
		has_building = ca_asoiaf_valyria_basevalue_2
		has_building = ct_asoiaf_north_basevalue_2
		has_building = ct_asoiaf_river_basevalue_2
		has_building = ct_asoiaf_dorne_basevalue_2
		has_building = ct_asoiaf_ironislands_basevalue_2
		has_building = ct_asoiaf_crown_basevalue_2
		has_building = ct_asoiaf_storm_basevalue_2
		has_building = ct_asoiaf_vale_basevalue_2
		has_building = ct_asoiaf_westerland_basevalue_2
		has_building = ct_asoiaf_reach_basevalue_2
		has_building = ct_asoiaf_essos_basevalue_2
		has_building = ct_asoiaf_summerisland_basevalue_2
		has_building = ct_asoiaf_qarth_basevalue_2
		has_building = ct_asoiaf_ghiscari_basevalue_2
		has_building = ct_asoiaf_lhazareen_basevalue_2
		has_building = ct_asoiaf_eastern_basevalue_2
		has_building = ct_asoiaf_yiti_basevalue_2
		has_building = ct_asoiaf_ibben_basevalue_2
		has_building = ct_asoiaf_sarnor_basevalue_2
		has_building = ct_asoiaf_asshai_basevalue_2
		has_building = ct_asoiaf_valyria_basevalue_2
	}
}
base_value_3_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_3
		has_building = ca_asoiaf_river_basevalue_3
		has_building = ca_asoiaf_dorne_basevalue_3
		has_building = ca_asoiaf_ironislands_basevalue_3
		has_building = ca_asoiaf_crown_basevalue_3
		has_building = ca_asoiaf_storm_basevalue_3
		has_building = ca_asoiaf_vale_basevalue_3
		has_building = ca_asoiaf_westerland_basevalue_3
		has_building = ca_asoiaf_reach_basevalue_3
		has_building = ca_asoiaf_essos_basevalue_3
		has_building = ca_asoiaf_summerisland_basevalue_3
		has_building = ca_asoiaf_qarth_basevalue_3
		has_building = ca_asoiaf_ghiscari_basevalue_3
		has_building = ca_asoiaf_lhazareen_basevalue_3
		has_building = ca_asoiaf_nighswatch_basevalue_3
		has_building = ca_asoiaf_eastern_basevalue_3
		has_building = ca_asoiaf_yiti_basevalue_3
		has_building = ca_asoiaf_ibben_basevalue_3
		has_building = ca_asoiaf_sarnor_basevalue_3
		has_building = ca_asoiaf_asshai_basevalue_3
		has_building = ca_asoiaf_valyria_basevalue_3
		has_building = ct_asoiaf_north_basevalue_3
		has_building = ct_asoiaf_river_basevalue_3
		has_building = ct_asoiaf_dorne_basevalue_3
		has_building = ct_asoiaf_ironislands_basevalue_3
		has_building = ct_asoiaf_crown_basevalue_3
		has_building = ct_asoiaf_storm_basevalue_3
		has_building = ct_asoiaf_vale_basevalue_3
		has_building = ct_asoiaf_westerland_basevalue_3
		has_building = ct_asoiaf_reach_basevalue_3
		has_building = ct_asoiaf_essos_basevalue_3
		has_building = ct_asoiaf_summerisland_basevalue_3
		has_building = ct_asoiaf_qarth_basevalue_3
		has_building = ct_asoiaf_ghiscari_basevalue_3
		has_building = ct_asoiaf_lhazareen_basevalue_3
		has_building = ct_asoiaf_eastern_basevalue_3
		has_building = ct_asoiaf_yiti_basevalue_3
		has_building = ct_asoiaf_ibben_basevalue_3
		has_building = ct_asoiaf_sarnor_basevalue_3
		has_building = ct_asoiaf_asshai_basevalue_3
		has_building = ct_asoiaf_valyria_basevalue_3
	}
}
base_value_4_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_4
		has_building = ca_asoiaf_river_basevalue_4
		has_building = ca_asoiaf_dorne_basevalue_4
		has_building = ca_asoiaf_ironislands_basevalue_4
		has_building = ca_asoiaf_crown_basevalue_4
		has_building = ca_asoiaf_storm_basevalue_4
		has_building = ca_asoiaf_vale_basevalue_4
		has_building = ca_asoiaf_westerland_basevalue_4
		has_building = ca_asoiaf_reach_basevalue_4
		has_building = ca_asoiaf_essos_basevalue_4
		has_building = ca_asoiaf_summerisland_basevalue_4
		has_building = ca_asoiaf_qarth_basevalue_4
		has_building = ca_asoiaf_ghiscari_basevalue_4
		has_building = ca_asoiaf_lhazareen_basevalue_4
		#has_building = ca_asoiaf_nighswatch_basevalue_4
		has_building = ca_asoiaf_eastern_basevalue_4
		has_building = ca_asoiaf_yiti_basevalue_4
		has_building = ca_asoiaf_ibben_basevalue_4
		has_building = ca_asoiaf_sarnor_basevalue_4
		has_building = ca_asoiaf_asshai_basevalue_4
		has_building = ca_asoiaf_valyria_basevalue_4
		has_building = ct_asoiaf_north_basevalue_4
		has_building = ct_asoiaf_river_basevalue_4
		has_building = ct_asoiaf_dorne_basevalue_4
		has_building = ct_asoiaf_ironislands_basevalue_4
		has_building = ct_asoiaf_crown_basevalue_4
		has_building = ct_asoiaf_storm_basevalue_4
		has_building = ct_asoiaf_vale_basevalue_4
		has_building = ct_asoiaf_westerland_basevalue_4
		has_building = ct_asoiaf_reach_basevalue_4
		has_building = ct_asoiaf_essos_basevalue_4
		has_building = ct_asoiaf_summerisland_basevalue_4
		has_building = ct_asoiaf_qarth_basevalue_4
		has_building = ct_asoiaf_ghiscari_basevalue_4
		has_building = ct_asoiaf_lhazareen_basevalue_4
		has_building = ct_asoiaf_eastern_basevalue_4
		has_building = ct_asoiaf_yiti_basevalue_4
		has_building = ct_asoiaf_ibben_basevalue_4
		has_building = ct_asoiaf_sarnor_basevalue_4
		has_building = ct_asoiaf_asshai_basevalue_4
		has_building = ct_asoiaf_valyria_basevalue_4
	}
}
base_value_5_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_5
		has_building = ca_asoiaf_river_basevalue_5
		has_building = ca_asoiaf_dorne_basevalue_5
		has_building = ca_asoiaf_ironislands_basevalue_5
		has_building = ca_asoiaf_crown_basevalue_5
		has_building = ca_asoiaf_storm_basevalue_5
		has_building = ca_asoiaf_vale_basevalue_5
		has_building = ca_asoiaf_westerland_basevalue_5
		has_building = ca_asoiaf_reach_basevalue_5
		has_building = ca_asoiaf_essos_basevalue_5
		has_building = ca_asoiaf_summerisland_basevalue_5
		has_building = ca_asoiaf_qarth_basevalue_5
		has_building = ca_asoiaf_ghiscari_basevalue_5
		has_building = ca_asoiaf_lhazareen_basevalue_5
		#has_building = ca_asoiaf_nighswatch_basevalue_5
		has_building = ca_asoiaf_eastern_basevalue_5
		has_building = ca_asoiaf_yiti_basevalue_5
		has_building = ca_asoiaf_ibben_basevalue_5
		has_building = ca_asoiaf_sarnor_basevalue_5
		has_building = ca_asoiaf_asshai_basevalue_5
		has_building = ca_asoiaf_valyria_basevalue_5
		has_building = ct_asoiaf_north_basevalue_5
		has_building = ct_asoiaf_river_basevalue_5
		has_building = ct_asoiaf_dorne_basevalue_5
		has_building = ct_asoiaf_ironislands_basevalue_5
		has_building = ct_asoiaf_crown_basevalue_5
		has_building = ct_asoiaf_storm_basevalue_5
		has_building = ct_asoiaf_vale_basevalue_5
		has_building = ct_asoiaf_westerland_basevalue_5
		has_building = ct_asoiaf_reach_basevalue_5
		has_building = ct_asoiaf_essos_basevalue_5
		has_building = ct_asoiaf_summerisland_basevalue_5
		has_building = ct_asoiaf_qarth_basevalue_5
		has_building = ct_asoiaf_ghiscari_basevalue_5
		has_building = ct_asoiaf_lhazareen_basevalue_5
		has_building = ct_asoiaf_eastern_basevalue_5
		has_building = ct_asoiaf_yiti_basevalue_5
		has_building = ct_asoiaf_ibben_basevalue_5
		has_building = ct_asoiaf_sarnor_basevalue_5
		has_building = ct_asoiaf_asshai_basevalue_5
		has_building = ct_asoiaf_valyria_basevalue_5
	}
}
base_value_6_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_6
		has_building = ca_asoiaf_river_basevalue_6
		has_building = ca_asoiaf_dorne_basevalue_6
		has_building = ca_asoiaf_ironislands_basevalue_6
		has_building = ca_asoiaf_crown_basevalue_6
		has_building = ca_asoiaf_storm_basevalue_6
		has_building = ca_asoiaf_vale_basevalue_6
		has_building = ca_asoiaf_westerland_basevalue_6
		has_building = ca_asoiaf_reach_basevalue_6
		has_building = ca_asoiaf_essos_basevalue_6
		has_building = ca_asoiaf_summerisland_basevalue_6
		has_building = ca_asoiaf_qarth_basevalue_6
		has_building = ca_asoiaf_ghiscari_basevalue_6
		has_building = ca_asoiaf_lhazareen_basevalue_6
		#has_building = ca_asoiaf_nighswatch_basevalue_6
		has_building = ca_asoiaf_eastern_basevalue_6
		has_building = ca_asoiaf_yiti_basevalue_6
		has_building = ca_asoiaf_ibben_basevalue_6
		has_building = ca_asoiaf_sarnor_basevalue_6
		has_building = ca_asoiaf_asshai_basevalue_6
		has_building = ca_asoiaf_valyria_basevalue_6
		has_building = ct_asoiaf_north_basevalue_6
		has_building = ct_asoiaf_river_basevalue_6
		has_building = ct_asoiaf_dorne_basevalue_6
		has_building = ct_asoiaf_ironislands_basevalue_6
		has_building = ct_asoiaf_crown_basevalue_6
		has_building = ct_asoiaf_storm_basevalue_6
		has_building = ct_asoiaf_vale_basevalue_6
		has_building = ct_asoiaf_westerland_basevalue_6
		has_building = ct_asoiaf_reach_basevalue_6
		has_building = ct_asoiaf_essos_basevalue_6
		has_building = ct_asoiaf_summerisland_basevalue_6
		has_building = ct_asoiaf_qarth_basevalue_6
		has_building = ct_asoiaf_ghiscari_basevalue_6
		has_building = ct_asoiaf_lhazareen_basevalue_6
		has_building = ct_asoiaf_eastern_basevalue_6
		has_building = ct_asoiaf_yiti_basevalue_6
		has_building = ct_asoiaf_ibben_basevalue_6
		has_building = ct_asoiaf_sarnor_basevalue_6
		has_building = ct_asoiaf_asshai_basevalue_6
		has_building = ct_asoiaf_valyria_basevalue_6
	}
}
can_be_kingsguard_candidate_trigger = {
	is_female = no
	is_married = no
	prisoner = no
	OR = {
		AND = {
			religion = ROOT
			NOT = { religion = the_seven }
		}	
		trait = knight
	}	
	age = 14		
	OR = {
		trait = master_warrior
		trait = skilled_warrior
		trait = trained_warrior
	}
	OR = { #Lowborns must be well known
		AND = {
			NOT = { dynasty = 0 }
			father_even_if_dead = { always = yes }
		}	
		prestige = 300
		liege = { has_landed_title = e_iron_throne }
	}
	is_ruler = no
	can_press_claims_trigger = yes #no other disinheriting traits
	NOT_mythical_creature_trigger = yes
	NOT = { has_severe_disability_trigger = yes }
	NOT = { is_rival = ROOT }
	NOT = { reverse_has_opinion_modifier = { modifier = opinion_refused_kingsguard who = ROOT } }
	NOT = { character = ROOT }	
	NOT = { has_character_flag = wikid_companion }
}
highborn_kingsguard_candidate_trigger = {	
	OR = {
		any_close_relative = {
			OR = {
				higher_tier_than = COUNT
				AND = { 
					tier = COUNT
					prestige = 500
				}
			}
		}
		any_claim = { higher_tier_than = COUNT }
		dynastic_prestige = 250
	}	
	NOT = { dynasty = 0 }
	combat_rating = 55
}
nightswatch_culture_trigger = {
	trigger_if = {
		limit = { is_alternate_start = yes }
		culture_scope = { check_variable = { which = alt_start_NW_culture value = 1 } }
	}	
	trigger_else = {
		OR = {
			AND = {
				culture_group = andal
				NOT = { culture = old_andal }
			}	
			culture_group = iron_isles_culture
			AND = {
				culture_group = dornish
				NOT = { culture = rhoynar }
			}	
			culture = western_valyrian
			culture_group = first_men
			capital_scope = { region = world_westeros }
		}	
		NOT = { culture_group = winter_group }
	}	
	NOT = { trait = wildling }	
	NOT = { culture_group = unoccupied_group }
}
magic_returned_trigger = {
	custom_tooltip = {
		text = magic_returned_trigger
		hidden_tooltip = { has_global_flag = age_of_dragons }
	}
}
seniority_culture_trigger = {
	OR = {
		culture = summer_islander
		culture_group = hyrkoon_group
		culture = lhazareen
		culture = dothraki
		culture = jogos_nhai
	}
}
agnatic_culture_trigger = {
	OR = {		
		culture_group = iron_isles_culture 
		culture = eastern_valyrian
		culture = mantaryan
		culture = tolosi
		culture = elyrian	
		religion = pirate
		religion = corsair
		culture = dothraki
		culture_group = hyrkoon_group
		custom_tooltip = {
			text = TOOLTIPHOUSELIKESLAW
			has_dynasty_flag = prefers_agnatic
		}
		has_religion_feature = religion_patriarchal
	}
	NOT = { has_religion_feature = religion_equal } #supercedes culture
	NOT = { has_religion_feature = religion_feature_rhoynar_pagan }
	NOT = { has_religion_feature = religion_matriarchal }
}
true_cognatic_culture_trigger = {
	OR = {
		culture_group = dornish 		
		culture = jogos_nhai
		culture = naathi
		culture = summer_islander
		custom_tooltip = {
			text = TOOLTIPHOUSELIKESLAW
			has_dynasty_flag = prefers_cognatic
		}
		has_religion_feature = religion_equal
		has_religion_feature = religion_feature_rhoynar_pagan
	}
	NOT = { has_religion_feature = religion_patriarchal } #supercedes culture
	NOT = { has_religion_feature = religion_matriarchal }
}
enatic_culture_trigger = {
	OR = {
		AND = { #God Empresses			
			OR = {
				culture = yi_ti
				culture = lengi
			}	
			higher_tier_than = DUKE
			capital_scope = { region = world_leng }
			NOT = { has_landed_title = e_yi_ti }
		}
		AND = {
			has_landed_title = c_dosh_khaleen 
			trait = dosh_khaleen
		}
		has_religion_feature = religion_matriarchal
	}	
	NOT = { has_religion_feature = religion_patriarchal } #supercedes culture
	NOT = { has_religion_feature = religion_equal }
	NOT = { has_religion_feature = religion_feature_rhoynar_pagan }
}
valid_exile_destination_ROOT_trigger = { #FROM is the exiler
	demesne_size = 1
	NOT = { character = FROM }
	NOT = { same_society_as = FROM }
	OR = {
		ROOT = { has_character_flag = trial_exile }
		AND = {
			NOT = { is_liege_or_above = FROM }
			NOT = { has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege } }
			NOT = { any_liege = { has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege } } }
		}
	}
	NOT = { is_liege_of = ROOT }
	OR = {
		same_realm = FROM
		is_within_diplo_range = FROM
	}	
	
	NOT = { trait = nightswatch }
	NOT = { trait = kingsguard }
	NOT = { culture_group = unoccupied_group }
	NOT = { culture_group = winter_group }
	OR = {
		NOT = { trait = wildling }
		ROOT = { trait = wildling }
		ROOT = { trait = deserter }
	}	
	OR = {
		NOT = { culture = old_andal }
		higher_tier_than = DUKE
		ROOT = { culture = old_andal }
	}
	OR = {
		NOT = { culture = rhoynar }
		higher_tier_than = DUKE
		ROOT = { culture = rhoynar }
	}	
	OR = {
		NOT = { trait = pirate }
		ROOT = { trait = pirate }
	}
	OR = {
		NOT = { is_nomadic = yes }
		ROOT = { is_nomadic = yes }
	}
	OR = { #slaves flee to non-slavery location
		ROOT = { NOT = { trait = slave } }
		crownlaw_title = { has_law = slavery_0 }			
	}
}
has_tanned_skin_trigger = {
	OR = {
		#graphical_culture = occitangfx 
		graphical_culture = italiangfx 
		graphical_culture = southerngfx
		#graphical_culture = byzantinegfx
		graphical_culture = easternslavicgfx
		graphical_culture = turkishgfx 
		graphical_culture = cumangfx
		graphical_culture = mongolgfx
		#graphical_culture = persiangfx
		graphical_culture = saltdornishgfx
		graphical_culture = yitigfx
		graphical_culture = jogosgfx
		graphical_culture = myrmangfx
		graphical_culture = chinesegfx
	}
}
has_bronzed_skin_trigger = {
	OR = {
		#graphical_culture = arabicgfx
		#graphical_culture = andalusiangfx
		graphical_culture = muslimgfx
		graphical_culture = mesoamericangfx
		graphical_culture = sanddornishgfx
		graphical_culture = ghiscarigfx
		graphical_culture = sarnorigfx		
	}
}
has_dark_skin_trigger = {
	OR = {
		graphical_culture = africangfx
		graphical_culture = westafricangfx		
		graphical_culture = brindlegfx
	}
}
has_copper_skin_trigger = {
	OR = {
		graphical_culture = indiangfx
		graphical_culture = southindiangfx
		graphical_culture = dothrakigfx
		graphical_culture = lhazareengfx
		graphical_culture = naathigfx
	}
}
has_white_skin_trigger = {
	NOR = {
		has_tanned_skin_trigger = yes
		has_bronzed_skin_trigger = yes
		has_dark_skin_trigger = yes
		has_copper_skin_trigger = yes
		graphical_culture = islandergfx
		graphical_culture = giantgfx
		graphical_culture = cotfgfx
		graphical_culture = whitewalkergfx
	}
}
has_silver_hair_ethnicity_trigger = {
	OR = { 
		graphical_culture = valyriangfx 
		graphical_culture = westvalyriangfx
		graphical_culture = lysenegfx
	}
}

has_house_words_trigger = {
	OR = {
		has_dynasty_flag = has_custom_house_words
		dynasty = 9
		dynasty = 297
		dynasty = 178
		dynasty = 450472
		dynasty = 265
		dynasty = 317
		dynasty = 1544
		dynasty = 282
		dynasty = 87
		dynasty = 34
		dynasty = 284
		dynasty = 301
		dynasty = 61
		dynasty = 1507
		dynasty = 227
		dynasty = 175
		dynasty = 194
		dynasty = 84
		dynasty = 21
		dynasty = 248
		dynasty = 1443
		dynasty = 261
		dynasty = 14
		dynasty = 242
		dynasty = 308
		dynasty = 107
		dynasty = 267
		dynasty = 285
		dynasty = 83
		dynasty = 10
		dynasty = 89
		dynasty = 190
		dynasty = 305
		dynasty = 212
		dynasty = 1
		dynasty = 102
		dynasty = 128
		dynasty = 263
		dynasty = 138
		dynasty = 237
		dynasty = 219
		dynasty = 320
		dynasty = 157
		dynasty = 226
		dynasty = 183
		dynasty = 187
		dynasty = 233
		dynasty = 2159
		dynasty = 221
		dynasty = 156
		dynasty = 59
		dynasty = 35
		dynasty = 361
		dynasty = 228
		dynasty = 101
		dynasty = 496
		dynasty = 296
		dynasty = 162
		dynasty = 307
		dynasty = 304
		dynasty = 159
		dynasty = 253
		dynasty = 52
		dynasty = 189
		dynasty = 44
		dynasty = 333
		dynasty = 199
		dynasty = 2158
		dynasty = 70
		dynasty = 136
		dynasty = 180
		dynasty = 12
	}
}

has_chosen_syncretic_faith_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_chosen_syncretic_faith
		hidden_tooltip = {
			OR = {
				has_character_modifier = syncretic_faith_westerosi_religion
				has_character_modifier = syncretic_faith_wildling_religion
				has_character_modifier = syncretic_faith_drowned_god_group
				has_character_modifier = syncretic_faith_essos_group
				has_character_modifier = syncretic_faith_sarnor_rel
				has_character_modifier = syncretic_faith_qarth_rel
				has_character_modifier = syncretic_faith_ghiscar_rel
				has_character_modifier = syncretic_faith_far_east_group
				has_character_modifier = syncretic_faith_ibben_rel
				has_character_modifier = syncretic_faith_dothraki_rel_group
				has_character_modifier = syncretic_faith_jogos_rel_group
				has_character_modifier = syncretic_faith_lhazar_rel_group
				has_character_modifier = syncretic_faith_summer_rel_group
				has_character_modifier = syncretic_faith_pirate_group
				has_character_modifier = syncretic_faith_islands_rel
				has_character_modifier = syncretic_faith_sothoryos_rel_group
				has_character_modifier = syncretic_faith_pagan_group
			}
		}
	}
}
has_dragonpit_trigger = {
	OR = {
		capital_holding = { has_building = ca_dragon_pit }
		family_palace = { has_building = fp_dragon_pit }
		AND = {
			is_ruler = no
			liege = { 
				OR = {
					capital_holding = { has_building = ca_dragon_pit }
					family_palace = { has_building = fp_dragon_pit }
				}
			}
		}
		AND = {
			tier = BARON
			capital_scope = {
				any_province_holding = {
					OR = {
						has_building = ca_dragon_pit
						has_building = fp_dragon_pit
					}
				}
			}
		}
	}
}
cannot_outbreed_trigger = {
	OR = {
		#ibbenese
		graphical_culture = celticgfx	
		graphical_culture = ibbenesegfx	
		#Brindlemen
		graphical_culture = brindlegfx
		#giant
		graphical_culture = giantgfx
		is_animal_trigger = yes
	}
}
has_alchemists_guild_prerequisites = {
	age = 16
	OR = {
		trait = mystic
		trait = scholar
		trait = metallurgist
		trait = fire_obsessed
		trait = lunatic	
		trait = erudite
	}
	conditional_tooltip = {
		trigger = { is_ruler = yes }
		demesne_size = 1
		has_tribal_or_nomadic_government_trigger = no
		conditional_tooltip = { #wildlings can only join if south of The Wall
			trigger = { trait = wildling }
			capital_scope = { NOT = { region = world_beyond_the_wall } }
		}
	}
	conditional_tooltip = {
		trigger = { is_ruler = no }
		liege = {
			demesne_size = 1
			has_tribal_or_nomadic_government_trigger = no
		}
		conditional_tooltip = { #wildlings can only join if south of The Wall
			trigger = { trait = wildling }
			liege = { capital_scope = { NOT = { region = world_beyond_the_wall } } }
		}
	}
	NOT = { trait = kingsguard }
	#NOT = { trait = nightswatch }
	NOT = { trait = maester }
	NOT = { trait = archmaester }
	NOT = { has_character_modifier = maester_education }			
	NOT = { has_priest_trait_trigger = yes }
}
wearing_asshai_mask_trigger = {
	culture = asshai
	NOT = { trait = shadowbinder }				
	location = { province_id = 795 }
	in_command = no
	NOT = { has_character_modifier = holding_large_feast }#not worn during feasts
	NOT = { liege = { has_character_modifier = holding_large_feast } }
}
wearing_shadowlander_mask_trigger = {
	culture = shadowlander
	OR = {
		has_character_modifier = holding_large_feast
		liege = { has_character_modifier = holding_large_feast }
		in_command = yes
	}
	NOT = { trait = slave }
}
has_pilgrimage_trait_trigger = { #used for disease immunity, and seclusion prevention
	OR = {
		trait = wikid
		trait = on_reaving
		trait = has_missing
		trait = on_pilgrimage
		trait = travelling
		has_character_modifier = out_traveling
	}
}
has_bastard_nickname_trigger = {
	OR = {
		has_nickname = nick_snow
		has_nickname = nick_rivers
		has_nickname = nick_stone
		has_nickname = nick_hill
		has_nickname = nick_flowers
		has_nickname = nick_storm
		has_nickname = nick_waters
		has_nickname = nick_sand
		has_nickname = nick_pyke
		has_nickname = nick_fyre
	}
}
PREV_has_abused_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_blinded_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_me}
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_me }	
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_consort }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_humiliated_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_oubilette_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_enslaved_me }
	}
}
PREV_has_abused_relative_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_son }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_spouse }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_blinded_child }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_blinded_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_blinded_spouse }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_wife_consort }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_relative_consort }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_lover }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_friend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_humiliated_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_humiliated_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_flayed_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_flayed_lover }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_flayed_friend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_flayed_child }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_spouse }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_lover }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_friend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_child }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_lover }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_friend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_oubilette_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_oubilette_friend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_oubilette_lover }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_enslaved_close_relative }
	}
}
PREV_has_murder_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_vengeance }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_murdered_first_ranger }
		reverse_has_opinion_modifier = { who = PREV modifier = suspect_of_murder }
		reverse_has_opinion_modifier = { who = PREV modifier = accused_of_murder }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_murderer }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_aborted_my_child }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_peasant_hunting }
	}
}
PREV_has_attempted_murder_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder } 
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_vassal }
	}
}
PREV_has_treason_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_traitor }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_joined_rebellion }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_traitor_AGOT }	
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_rebel_traitor }	
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_refused_order }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_charge_traitor }
		reverse_has_opinion_modifier = { who = PREV modifier = declared_me_insane }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_exiled_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_assaulted_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_refused_prisoner_transfer }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_warden_no_defend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_targeted_by_adventurer }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_disinherited_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_disinherited_my_child }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_unjust_coup }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_refused_prisoner_transfer }
	}
}
PREV_has_adultery_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_cuckolded }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_unfaithful_wife }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_unfaithful_husband }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_cuckolded_AGOT }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_unfaithful_deceiver }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_scandalised_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_scandalised_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_unfaithful_consort }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_slept_with_my_consort }
		reverse_has_opinion_modifier = { who = PREV modifier = slut_seductress }
		reverse_has_opinion_modifier = { who = PREV modifier = committed_adultery_rumour }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_suspected_adultery }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_polygamous_marriage }
	}
}
PREV_has_oath_breaking_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_betrothal_broken }
		reverse_has_opinion_modifier = { who = PREV modifier = broken_non_aggression_pact }
		reverse_has_opinion_modifier = { who = PREV modifier = dissolved_alliance }
		reverse_has_opinion_modifier = { who = PREV modifier = broke_alliance }
		reverse_has_opinion_modifier = { who = PREV modifier = broke_truce }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_divorced_relative }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_divorced }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_broken_title_promise }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_alliance_breaker }
		reverse_has_opinion_modifier = { who = PREV modifier = suzerain_deserted }
	}
}
PREV_has_blackmail_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_blackmailed }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_coerced_into_joining_faction }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_coerced_into_leaving_faction }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_coerced_into_having_child }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_threatened_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_bribe_rejected }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_charge_slanderer }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_slandered }
	}
}

has_priest_trait_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_priest_trait_trigger
		OR = {
			trait = dosh_khaleen
			trait = silent_sister
			trait = red_priest
			trait = drowned
			trait = grace
			trait = warlock
			trait = shadowbinder
			trait = bearded_priest
			trait = septa
			trait = septon
			trait = love_priest
			AND = {
				trait = blinded
				OR = {
					religion = boash 
					religion = boash_reformed
				}
			}
			trait = monk
			trait = nun
		}
	}	
}
traditional_nomad_territory_trigger = {
	trigger_if = {
		limit = { is_alternate_start = no }
		OR = {
			region = world_dothraki_sea
			region = world_jogo_nhai_plains
		}
	}	
	trigger_else = {
		has_province_flag = alt_start_nomad_territory
	}
}
has_black_nickname_prereq_trigger = {
	OR = {
		trait = cruel
		trait = impaler
		AND = {
			trait = ruthless
			trait = wroth
		}
		trait = nightswatch
		is_any_kinslayer_trigger = yes
		trait = excommunicated
	}
}
has_white_nickname_prereq_trigger = {
	trait = kingsguard
}
has_crazed_nickname_prereq_trigger = {
	OR = {
		trait = lunatic
		trait = possessed
	}
}
has_wroth_nickname_prereq_trigger = {
	trait = wroth
}
has_red_nickname_prereq_trigger = {
	OR = {
		combat_rating = 90
		has_character_modifier = known_murderer
		is_any_kinslayer_trigger = yes
		trait = suspected_kinslayer
		AND = {
			martial = 15
			OR = {
				in_command = yes
				has_job_title = job_marshal
				has_minor_title = title_commander
				trait = aggressive_leader
			}
		}
		trait = berserker
		trait = viking
		trait = ravager
		trait = seaking
		trait = sea_queen
		trait = duelist
		trait = red_priest
	}
}
has_big_nickname_prereq_trigger = {
	OR = {
		trait = is_fat
		trait = tall
	}
	NOT = { trait = dwarf }
}
has_strong_nickname_prereq_trigger = {
	is_strong_trigger = yes
}
has_fair_nickname_prereq_trigger = {
	is_attractive_trigger = yes
	diplomacy = 12
}
has_ugly_nickname_prereq_trigger = {
	OR = {
		has_ugly_trait_trigger = yes
		trait = clubfooted
		trait = harelip
		trait = hunchback
		trait = disfigured_AGOT
		trait = disfigured				
		trait = greyscale_scarred
		trait = burned
	}
}
has_little_nickname_prereq_trigger = {
	trait = dwarf
}
has_genius_nickname_prereq_trigger = {
	OR = {
		trait = genius
		AND = {
			age = 35
			OR = {
				is_smart_trigger = yes
				learning = 15
			}
		}
	}
	is_dumb_trigger	= no
}
has_dumb_nickname_prereq_trigger = {
	is_dumb_trigger	= yes
}
has_dark_nickname_prereq_trigger = {
	intrigue = 12
	OR = {
		trait = ruthless
		trait = wroth
		combat_rating = 70
		trait = depressed
		trait = mystic
		trait = schemer
	}
}
has_weak_nickname_prereq_trigger = {
	OR = {
		is_weak_trigger = yes
		AND = {
			calc_true_if = {
				amount = 3
				trait = kind
				trait = slothful
				trait = trusting
				trait = charitable
				trait = craven
				trait = shy
				trait = honorable
			}
			NOR = {
				trait = cruel
				trait = diligent
				trait = paranoid
				trait = greedy
				trait = brave
				trait = authoritative
				trait = ruthless
			}
		}	
	}
}
has_silver_nickname_prereq_trigger = {
	graphical_culture = valyriangfx
	NOT = { culture_group = valyrian }
}
has_old_nickname_prereq_trigger = {
	age = 70
}
has_warrior_nickname_prereq_trigger = {
	OR = {
		trait = master_warrior
		trait = skilled_warrior
	}
	combat_rating = 90
}
has_laughing_nickname_prereq_trigger = {
	OR  = {
		trait = gregarious
		trait = wroth
	}
}
is_feudal_monarch_trigger = { #i.e. has a royal title king, queen, emperor etc
	custom_tooltip = {
		text = TOOLTIPis_feudal_monarch_trigger
		hidden_tooltip = {
			OR = {
				higher_real_tier_than = DUKE 
				primary_title = { title = d_prince_pentos } 
				AND = {
					culture_group = sarnor_group
					tier = DUKE
				}
			}
			OR = {
				government = feudal_government
				government = pirate_government
				government = wildling_feudal_government
			}
		}
	}	
}
is_military_command_trigger = {
	OR = {
		government = military_command_government
		government = military_command_government_city
	}
}
can_use_book_trigger = {
	OR = {
		learning = 8
		trait = scholar
	}
	is_incapable = no
	NOT = { trait = blinded }
	NOT = { trait = blinded_age }
}
low_valyrian_culture_trigger = {
	OR = {
		culture = western_valyrian
		culture = eastern_valyrian
	}
}
true_valyrian_culture_trigger = {
	OR = {
		culture = high_valyrian
		culture = western_valyrian
		culture = eastern_valyrian
	}
}
can_legitimise_bastards_trigger = {
	OR = {
		is_feudal_monarch_trigger = yes
		tier = EMPEROR
		is_nomadic = yes
		culture = dothraki
		trait = wildling
		trait = pirate
		AND = {
			independent = yes
			primary_title = { NOT = { check_variable = { which = "de_facto_empire" value = 1 } } }
		}	
		top_liege = {
			is_republic = yes
			OR = {
				tier = EMPEROR
				primary_title = { NOT = { check_variable = { which = "de_facto_empire" value = 1 } } }
			}
		}
	}
	NAND = { #Is not a landless adventurer
		war = yes
		NOT = { demesne_size = 1 }
	}
	NOT = { primary_title = { mercenary = yes } }
}
can_wear_a_crown_trigger = {
	OR = { 
		is_feudal_monarch_trigger = yes
		spouse = { is_feudal_monarch_trigger = yes }
		custom_tooltip = {
			text = TOOLTIPpressing_kingdom_claim
			hidden_tooltip = {
				is_ruler = yes
				is_feudal = yes
				any_claim = {
					tier = EMPEROR
					holder_scope = { is_feudal = yes }
					any_war = { attacker = { character = PREVPREVPREV } }
				}
			}
		}
	}
}
is_valyrian_freehold_trigger = {
	custom_tooltip = {
		text = TOOLTIPis_valyrian_freehold_trigger
		has_landed_title = e_new_valyria
		culture_group = valyrian
		has_global_flag = revived_valyrian_freehold
		OR = {
			is_republic = yes
			government = noble_oligarchy
		}
	}	
}
is_volcano_location_trigger = {
	OR = {
		province_id = 221 #Dragonstone
		province_id = 788 #Marahai
		region = world_shadowlands
		region = world_valyria
	}
}
is_old_gods_religion_trigger = {
	OR = {
		religion = old_gods
		religion = old_gods_reformed
		religion_group = wildling_religion
	}
}
rules_in_active_region_trigger = {
	OR = {
		ai = no #exludes players
		AND = {
			has_global_flag = westeros_active
			capital_scope = { region = world_westeros }
		}
		AND = {
			has_global_flag = free_cities_active
			capital_scope = { region = world_free_cities }
		}
		AND = {
			has_global_flag = slavers_bay_active
			capital_scope = { region = world_ghiscar }
		}
		AND = {
			has_global_flag = grasslands_active
			capital_scope = { region = world_dothraki_sea }
		}
		AND = {
			has_global_flag = summer_sea_active
			capital_scope = { region = world_summer_sea }
		}
		AND = {
			has_global_flag = far_east_active
			capital_scope = { 
				OR = {
					region = world_jade_sea
					region = world_far_east
				}	
			}
		}
		AND = {
			has_global_flag = ibben_active
			capital_scope = { region = world_ibben }
		}
		capital_scope = { region = world_valyrian_peninsula }
	}
}
located_in_active_region_trigger = {
	OR = {
		ai = no #exludes players
		AND = {
			has_global_flag = westeros_active
			location = { region = world_westeros }
		}
		AND = {
			has_global_flag = free_cities_active
			location = { region = world_free_cities }
		}
		AND = {
			has_global_flag = slavers_bay_active
			location = { region = world_ghiscar }
		}
		AND = {
			has_global_flag = grasslands_active
			location = { region = world_dothraki_sea }
		}
		AND = {
			has_global_flag = summer_sea_active
			location = { region = world_summer_sea }
		}
		AND = {
			has_global_flag = far_east_active
			location = {
				OR = {
					region = world_jade_sea
					region = world_far_east
				}	
			}
		}
		AND = {
			has_global_flag = ibben_active
			location = { region = world_ibben }
		}
		location = { region = world_valyrian_peninsula }
	}
}
salt_dornish_province_trigger = {
	OR = {
		province_id = 343
		province_id = 347
		province_id = 348
		province_id = 352
		province_id = 351
		province_id = 346
		province_id = 342
	}	
}
sand_dornish_province_trigger = {
	OR = {
		province_id = 349
		province_id = 344
		province_id = 345
		province_id = 341
		province_id = 339
		province_id = 340
		province_id = 338
		province_id = 337
	}	
}
stone_dornish_province_trigger = {
	OR = {
		province_id = 336
		province_id = 335
		province_id = 332
		province_id = 327
		province_id = 333
		province_id = 331
		province_id = 328
		province_id = 329
		province_id = 330
		province_id = 334
	}	
}
northman_culture_trigger = {
	OR = {
		culture = northman_andal
		culture = northman
	}
}
can_be_andal_adventurer_trigger = {
	is_alive = yes
	culture = old_andal
	religion = the_seven
	is_female = no
	is_ruler = no
	is_adult = yes
	prisoner = no
	is_incapable = no
	has_severe_disability_trigger = no
	martial = 10
	NAND = {
		liege = { capital_scope = { region = world_westeros } }
		OR = {
			liege = { is_married = PREV }
			spouse = { liege = { is_close_relative = PREV } }
		}
	}
}
offer_to_take_black_potential_trigger = {
	prisoner = yes
	is_female = no			
	host = { 
		nightswatch_culture_trigger = yes 
		OR = { #Either...
			is_vassal_or_below = ROOT #My subject
			AND = { #Lower rank and not at war
				higher_tier_than = ROOT
				NOT = { war_with = ROOT }
			}
			AND = { #I'm the High Septon and Faith authority is high
				has_landed_title = k_the_most_devout
				ROOT = {
					crownlaw_title = { 
						OR = {
							has_law = investiture_law_2
							has_law = investiture_law_3
						}
					}	
				}	
			}
			AND = {
				controls_religion = yes
				religion = ROOT
			}
		}
	}
	NOT = { trait = nightswatch }			
	NOT = { trait = salt_wife }
	NOT = { trait = slave }
	NOT = { trait = dragon }
	NOT = { culture_group = winter_group }	
	NOT = { culture_group = unoccupied_group }
	OR = {
		NOT = { has_character_flag = demmanded_trial_by_combat }
		had_character_flag = { flag = demmanded_trial_by_combat days = 365 } 
	}	
	#NOT = { has_character_flag = captured_in_battle }
	NOT = { has_character_modifier = getting_justice }
}
offer_to_take_black_allow_trigger = {
	prisoner = yes
	age = 16		
	is_incapable = no
	conditional_tooltip = {
		trigger = { higher_tier_than = DUKE }
		wealth = 100
		prestige = 500
	}	
	conditional_tooltip = {
		trigger = { 
			OR = {
				tier = DUKE 
				father_even_if_dead = { higher_tier_than = DUKE }
				mother_even_if_dead = { higher_tier_than = DUKE }
			}	
		}
		wealth = 60
		prestige = 300
	}
	conditional_tooltip = {
		trigger = { 
			NOR = {
				higher_tier_than = COUNT
				father_even_if_dead = { higher_tier_than = DUKE }
				mother_even_if_dead = { higher_tier_than = DUKE }
			}
			OR = {
				tier = COUNT
				father_even_if_dead = { tier = DUKE }
				mother_even_if_dead = { tier = DUKE }
			}	
		}
		wealth = 40
		prestige = 200
	}
	conditional_tooltip = {
		trigger = { 
			NOR = {
				higher_tier_than = BARON
				father_even_if_dead = { higher_tier_than = COUNT }
				mother_even_if_dead = { higher_tier_than = COUNT }
			}	
		}
		wealth = 20
		prestige = 50
	}
	NOT = { trait = proud }
	NOT = { trait = ambitious }
	NOT = { trait = deserter }
	NOT = { diplomatic_immunity = yes }
	host = { 
		has_regent = no
		NOT = { is_inaccessible_trigger = yes }
		NOT = { any_current_enemy = { character = ROOT } }
		NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_rejected_NW_plea } }
	}
	d_nightswatch = { holder_scope = { demesne_size = 1 } }
}
is_unorganised_religion_trigger = {
	custom_tooltip = {
		text = TOOLTIPis_unorganised_religion_trigger
		OR = {
			religion = old_gods
			religion_group = wildling_religion
			religion = dothraki_pagan
			religion = jogos_pagan
			religion = great_shepherd
			religion = pirate
			religion_group = corsair_group
			religion_group = winter_religion
			religion_group = sothoryos_rel_group
		}
	}	
}
has_bank_society_prerequisites = { #for joining can_join_society = {
	conditional_tooltip = {
		trigger = { is_ruler = yes }
		FROM = {
			show_scope_change = no
			persistent_event_target:location = {
				show_scope_change = no
				kingdom = { 		
					show_scope_change = no
					custom_tooltip = {
						text = TOOLTIP_bank_society_join_LOCATION
						ROOT = {
							capital_scope = { 
								kingdom = {
									title = PREVPREVPREV 
								}
							}
						}	
					}
				}
			}
		}
			
		demesne_size = 1	
		is_theocracy = no
	}
	conditional_tooltip = {
		trigger = { is_ruler = no }		
		liege = {
			capital_scope = { 
				kingdom = {
					FROM = {
						persistent_event_target:location = {
							kingdom = { title = PREVPREVPREV }
						}
					}
				}
			}
			demesne_size = 1	
			is_theocracy = no
		}
	}
	can_press_claims_trigger = yes
}
has_ROOT_bank_society_prerequisites = { #for ROOT's bank
	conditional_tooltip = {
		trigger = { is_ruler = yes }
		capital_scope = { 
			kingdom = {
				ROOT = {
					society = {
						persistent_event_target:location = {
							kingdom = { title = PREVPREVPREVPREV }
						}
					}	
				}
			}
		}
		demesne_size = 1	
		is_theocracy = no
	}
	conditional_tooltip = {
		trigger = { is_ruler = no }		
		liege = {
			capital_scope = { 
				kingdom = {
					ROOT = {
						society = {
							persistent_event_target:location = {
								kingdom = { title = PREVPREVPREVPREV }
							}
						}	
					}
				}
			}
			demesne_size = 1	
			is_theocracy = no
		}
	}
	can_press_claims_trigger = yes
}
female_get_masculine_event_trigger = {
	OR = {
		combat_rating = 70
		culture_group = hyrkoon_group
		#trait = shieldmaiden
		has_character_flag = special_marshal
		is_member_of_any_warrior_lodge_trigger = yes
		has_religion_feature = religion_matriarchal
		AND = {
			combat_rating = 40
			OR = {
				is_nomadic = yes
				culture_group = dornish
				culture = sarnorian
				culture_group = iron_isles_culture
				culture_group = free_folk
				trait = duelist
				any_owned_bloodline = {
					has_bloodline_flag = bloodline_tomboy_mbs
				}
			}
		}
	}
}
can_use_bow_trigger = {
	OR = {
		trait = trained_warrior
		trait = skilled_warrior
		trait = master_warrior
	}
}
can_be_granted_unclear_title_trigger = { #used in event 45351
	can_press_claims_trigger = yes
	NOT = { character = ROOT }
	NOT = { character = ROOT_FROM }
	NOT = { reverse_has_opinion_modifier = { who = ROOT_FROM modifier = opinion_traitor } }
	NOT = { reverse_has_opinion_modifier = { who = ROOT_FROM modifier = declared_war } }
	NOT = { has_opinion_modifier = { who = ROOT_FROM modifier = opinion_revoked_my_title } }
	NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_suspected_bastard } }
	NAND = {
		is_ruler = yes
		NOR = { 
			is_liege_or_above = ROOT_FROM 
			has_opinion_modifier = { who = ROOT_FROM modifier = opinion_de_facto_liege }
		}
	}
	NOT = {
		any_heir_title = {
			holder_scope = { 
				NOR = { 
					is_liege_or_above = ROOT_FROM 
					has_opinion_modifier = { who = ROOT_FROM modifier = opinion_de_facto_liege }
				}
			}
		}
	}
}
has_elective_law_trigger = {
	OR = {
		has_law = noble_oligarchy_elective
		has_law = succ_feudal_elective
		has_law = succ_kingsmoot_elective
	}
}
current_wealth_is_personal_trigger = {
	OR = {
		is_ruler = no
		is_patrician = yes
		AND = {
			is_feudal = yes
			can_press_claims_trigger = yes
		}
	}
}
has_maester_society_prerequisites = {
	learning = 8
	OR = {
		maester_culture_trigger = yes
		trait = erudite
	}
	c_the_citadel = { holder_scope = { is_within_diplo_range = PREVPREV } }
	trigger_if = {
		limit = { is_ruler = yes }
		demesne_size = 1
		OR = {
			trait = scholar
			trait = astronomer
			trait = cartographer
			trait = traveller
			trait = linguist
			trait = erudite
			trait = lunatic
			trait = mystic
		}
	}
	trigger_else = {
		is_married = no
		liege = { demesne_size = 1 }	
	}
	hidden_trigger = { 
		mercenary = no 
		NOT_mythical_creature_trigger = yes
	}
	age = 14
	can_press_claims_trigger = yes
	NOT = { has_pilgrimage_trait_trigger = yes }
}
has_links_for_maester_rank_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_links_for_maester_rank_trigger
		any_artifact = { has_artifact_flag = maester_link count = 10 }
	}	
}
has_links_level_1_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_links_level_1_trigger
		any_artifact = { has_artifact_flag = maester_link count = 6 }
	}	
}
has_links_level_2_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_links_level_2_trigger
		any_artifact = { has_artifact_flag = maester_link count = 12 }
	}	
}
has_links_level_3_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_links_level_3_trigger
		any_artifact = { has_artifact_flag = maester_link count = 18 }
	}	
}
has_links_level_4_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_links_level_4_trigger
		any_artifact = { has_artifact_flag = maester_link count = 24 }
	}	
}
female_warrior_culture_trigger = {
	OR = {
		culture_group = hyrkoon_group
		has_religion_feature = religion_matriarchal
		religion_group = pagan_group
	}
}
kingsmoot_candidate_trigger = { #some of the conditions
	age = 15
	prisoner = no
	NOT = { trait = incapable }
	can_press_claims_trigger = yes
	NOT_mythical_creature_trigger = yes
	NOT = { has_character_modifier = declined_duel_of_honour }
	NOT = { has_character_modifier = lost_duel_of_honour }
	trigger_if = {
		limit = { is_ruler = yes }
		is_theocracy = no
		is_republic = no
	}	
}
may_move_court_trigger = { #Has no particular reason to stay	
	is_ruler = no
	in_command = no
	is_primary_heir = no
	NOT = { trait = maester }
	NOT = { trait = archmaester }
	NOT = { trait = kingsguard }
	NOT = { trait = slave }
	NOT = { trait = infirm }
	NOT = { trait = dragon }
	NOT = { trait = white_walker }
	NOT = { liege = { regent = { character = PREVPREV } } }
	NAND = {
		is_female = yes
		is_married = yes
		is_married_matrilineally = no
	}
	NAND = {
		is_female = yes
		any_lover = { same_liege = PREV }
	}
	NAND = {
		is_female = no
		is_married_matrilineally = yes
	}
	liege = {
		NOT = { is_friend = PREV }
		NOT = { is_married = PREV }
		NOT = { is_lover = PREV }
		NOT = { is_consort = PREV }
		NAND = {
			leads_faction = faction_claimant
			supported_claimant = { character = ROOT }
		}
	}
	OR = {
		NOT = { has_character_flag = promoted_to_new_court }
		had_character_flag = { flag = promoted_to_new_court days = 1825 }
	}
	NAND = {
		society_member_of = hermetics
		society_rank == 1
		host = { has_landed_title = c_the_citadel }
	}
	NOT = { has_minor_title = title_triarch }
	NOT = { is_inaccessible_trigger = yes }
	NOT = { has_character_modifier = planning_claimant_adventure }
}
practices_incest_trigger = { #mainly effects AI logic, doesnt actually enable incest
	custom_tooltip = {
		text = TOOLTIPpractices_incest_trigger
		OR = {
			religion = valyrian_rel
			AND = {
				religion = valyrian_rel_reformed
				NOT = { has_dlc = "Holy Fury" }
			}
			is_divine_blood_dynasty_trigger = yes
			has_religion_feature = religion_feature_valyrian_rel
			has_religion_feature = religion_holy_family
		}
	}	
}
can_use_dragon_abilities_trigger = {
	trigger_if = {
		limit = {
			graphical_culture = dragongfx
			OR = {
				has_alternate_start_parameter = { key = special_culture value = animal_kingdoms } 
				has_alternate_start_parameter = { key = special_culture value = animal_world }
				has_alternate_start_parameter = { key = special_culture value = all } 
			}			
		}
		graphical_culture = dragongfx		
	}
	trigger_else = {
		trait = dragon_rider
		any_friend = { trait = dragon }
	}
}
can_usually_eat_people_trigger = {
	OR = {
		culture = cannibal_clan
		culture = gendels_folk
		culture = brindlemen
		religion = sothoryos_rel
		graphical_culture = beargfx
		graphical_culture = dragongfx
		trait = dragon		
	}
}
is_animal_trigger = {
	OR = {
		graphical_culture = dragongfx
		graphical_culture = horsegfx
		graphical_culture = catgfx
		graphical_culture = beargfx
		graphical_culture = hedgehoggfx
		graphical_culture = duckgfx
		graphical_culture = doggfx
		graphical_culture = direwolfgfx
		graphical_culture = elephantgfx
	}
}
can_be_minor_bank_envoy_trigger = {
	is_female = no
	is_in_society = no						
	age = 21
	is_ruler = no
	prisoner = no
	is_incapable = no
	can_press_claims_trigger = yes
	NOT = { is_inaccessible_trigger = yes }
	NOT_mythical_creature_trigger = yes
	OR = {
		AND = {
			NOT = { liege = { is_close_relative = PREV } }
			has_education_stewardship_trigger = yes
		}
		liege = {
			is_close_relative = PREV
			is_feudal_monarch_trigger = no
			OR = {
				is_republic = yes
				lower_tier_than = KING
			}
			OR = {
				yearly_income = 100
				is_patrician = yes
				capital_scope = { any_province_holding = { is_richer_holding = yes } }
			}	
		}
	}
}
universal_cb_restrictions_trigger = { #can_use = { 
	ROOT = { 
		NOT = { trait = nightswatch } 
		NOT = { trait = kingsguard } 
		NOT = { culture_group = unoccupied_group }
		NAND = { 
			culture_group = winter_group 
			NOR = {
				has_alternate_start_parameter = { key = special_culture value = mythological } 
				has_alternate_start_parameter = { key = special_culture value = all } 
			}
		}
	}
	FROM = { 
		NOT = { culture_group = unoccupied_group } 
		NAND = { 
			culture_group = winter_group 
			NOR = {
				has_alternate_start_parameter = { key = special_culture value = mythological } 
				has_alternate_start_parameter = { key = special_culture value = all } 
			}
		}
	}
	OR = {
		ROOT = { trait = wildling }
		FROM = { NOT = { trait = nightswatch } }
		AND = {
			ROOT = { trait = nightswatch }
			FROM = { trait = nightswatch }
		}
	}	
	# OR = {
		# NOT = { ROOT = { has_global_flag = war_cooldown_period } }
		# ROOT = { had_global_flag = { flag = war_cooldown_period days = 25 } }
	# }
	OR = { #Cannot attack vassals split by mega war
		NOT = { FROM = { has_opinion_modifier = { who = ROOT modifier = opinion_de_facto_liege } } }
		NOT = { ROOT = { higher_tier_than = FROM } }
	}	
}
universal_cb_restrictions_excl_NW_KG_trigger = { #can_use = { (exclude NW/KG restrictions)
	ROOT = { 
		#NOT = { trait = nightswatch } 
		#NOT = { trait = kingsguard } 
		NOT = { culture_group = unoccupied_group }
		NAND = { 
			culture_group = winter_group 
			NOR = {
				has_alternate_start_parameter = { key = special_culture value = mythological } 
				has_alternate_start_parameter = { key = special_culture value = all } 
			}
		}
	}
	FROM = { 
		NOT = { culture_group = unoccupied_group } 
		NAND = { 
			culture_group = winter_group 
			NOR = {
				has_alternate_start_parameter = { key = special_culture value = mythological } 
				has_alternate_start_parameter = { key = special_culture value = all } 
			}
		}
	}
	# OR = {
		# ROOT = { trait = wildling }
		# FROM = { NOT = { trait = nightswatch } }
		# AND = {
			# ROOT = { trait = nightswatch }
			# FROM = { trait = nightswatch }
		# }
	# }	
	# OR = {
		# NOT = { ROOT = { has_global_flag = war_cooldown_period } }
		# ROOT = { had_global_flag = { flag = war_cooldown_period days = 25 } }
	# }
	OR = { #Cannot attack vassals split by mega war
		NOT = { FROM = { has_opinion_modifier = { who = ROOT modifier = opinion_de_facto_liege } } }
		NOT = { ROOT = { higher_tier_than = FROM } }
	}	
}
universal_cb_title_restrictions_trigger = { #can_use_title
	OR = {
		AND = {
			NOT = { title = d_kingsguard }
			NOT = { title = b_white_sword_tower }
		}
		FROM = { NOT = { trait = kingsguard } }
	}
	trigger_if = {
		limit = { tier = COUNT }
		NOT = { #Cannot be used to take nomadic territory
			location = { 
				NOT = { 
					any_province_holding = {
						holder_scope = { NOT = { culture_group = unoccupied_group } }
						OR = {
							holding_type = castle
							holding_type = city
						}
					}
				}
			}	
		}
		OR = { #cant invade nomad domains
			holder_scope = {
				NOT = { is_nomadic = yes }
			}
			location = { NOT = { traditional_nomad_territory_trigger = yes } }
		}
	}	
}
universal_cb_other_restrictions_trigger = { #can_use = { (other_claim, other_county_claim etc...)
	ROOT = {
		NOT = { trait = nightswatch } 
		NOT = { trait = kingsguard } 
		NOT = { culture_group = unoccupied_group }
		NAND = { 
			culture_group = winter_group 
			NOR = {
				has_alternate_start_parameter = { key = special_culture value = mythological } 
				has_alternate_start_parameter = { key = special_culture value = all } 
			}
		}
	}	
	FROM = { 
		NOT = { culture_group = unoccupied_group } 
		NAND = { 
			culture_group = winter_group 
			NOR = {
				has_alternate_start_parameter = { key = special_culture value = mythological } 
				has_alternate_start_parameter = { key = special_culture value = all } 
			}
		}
	}
	OR = {
		trait = wildling
		FROM = { NOT = { trait = nightswatch } }
	}	
	# OR = {
		# NOT = { has_global_flag = war_cooldown_period }
		# had_global_flag = { flag = war_cooldown_period days = 25 }
	# }	
	OR = { #Cannot attack vassals split by mega war
		NOT = { FROM = { has_opinion_modifier = { who = PREV modifier = opinion_de_facto_liege } } }
		NOT = { higher_tier_than = FROM }
	}	
}
universal_cb_valid_restrictions_trigger = { #is_valid = { 
	ROOT = { 
		NOT = { culture_group = unoccupied_group }
		NAND = { 
			culture_group = winter_group 
			NOR = {
				has_alternate_start_parameter = { key = special_culture value = mythological } 
				has_alternate_start_parameter = { key = special_culture value = all } 
			}
		}
	}
	FROM = { 
		NOT = { culture_group = unoccupied_group } 
		NAND = { 
			culture_group = winter_group 
			NOR = {
				has_alternate_start_parameter = { key = special_culture value = mythological } 
				has_alternate_start_parameter = { key = special_culture value = all } 
			}
		}
	}
	OR = { #Cannot attack vassals split by mega war
		NOT = { FROM = { has_opinion_modifier = { who = ROOT modifier = opinion_de_facto_liege } } }
		NOT = { ROOT = { higher_tier_than = FROM } }
	}	
}
wildling_culture_trigger = {
	OR = {
		AND = {
			culture_group = free_folk
			culture_scope = { NOT = { check_variable = { which = alt_start_disabled_wildling_culture value = 1 } }	}
		}
		culture_scope = { check_variable = { which = alt_start_wildling_culture value = 1 } }			
	}	
}
trial_charge_can_be_castrated_trigger = {
	is_female = no
	NOT = { trait = eunuch }
	character = event_target:accused
	event_target:accuser = { 
		event_target:accused = {
			OR = {
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_me }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_son }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_kin }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_spouse }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_me }	
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_consort }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage }
				has_character_modifier = took_illegal_first_night
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_raper }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_wife_consort }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_relative_consort }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_kin }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_spouse }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_lover }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_friend }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_child }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_kin }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_lover }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_friend }
				PREV_has_adultery_opinion_trigger = yes
				has_character_modifier = known_sodomite
			}	
		}
	}
}
have_canon_family_trigger = {
	NOT = { c_60119 = { character = PREV } } # Orrell Allyrion
	NOT = { c_60129 = { character = PREV } } # Geleria Allyrion
	NOT = { c_60139 = { character = PREV } } # Damarya Allyrion
	NOT = { c_5085178 = { character = PREV } } # Hubert Arryn
	NOT = { c_207178 = { character = PREV } } # Rodrik Arryn
	NOT = { c_5050178 = { character = PREV } } # Joffrey Arryn
	NOT = { c_204178 = { character = PREV } } # Jonothor Arryn
	NOT = { c_202178 = { character = PREV } } # Donnel Arryn
	NOT = { c_94001 = { character = PREV } } # Jasper Arryn
	NOT = { c_88026 = { character = PREV } } # Alyn Ashford
	NOT = { c_94042 = { character = PREV } } # Corwyn Baelish
	NOT = { c_307200 = { character = PREV } } # Qarlon Banefort
	NOT = { c_3009049 = { character = PREV } } # Enfren Bar Emmon
	NOT = { c_3012049 = { character = PREV } } # Duram Bar Emmon
	NOT = { c_3014049 = { character = PREV } } # Kaeron Bar Emmon
	NOT = { c_1317 = { character = PREV } } # Orys Baratheon
	NOT = { c_13317 = { character = PREV } } # Boremund Baratheon
	NOT = { c_14317 = { character = PREV } } # Borros Baratheon
	NOT = { c_29317 = { character = PREV } } # Davos Baratheon
	NOT = { c_15317 = { character = PREV } } # Corwen Baratheon
	NOT = { c_16317 = { character = PREV } } # Arion Baratheon
	NOT = { c_17317 = { character = PREV } } # Davos Baratheon
	NOT = { c_20317 = { character = PREV } } # Lyonel Baratheon
	NOT = { c_3008282 = { character = PREV } } # Lyman Beesbury
	NOT = { c_3011282 = { character = PREV } } # Alan Beesbury
	NOT = { c_3017282 = { character = PREV } } # Joslon Beesbury
	NOT = { c_282 = { character = PREV } } # Ben Beesbury
	NOT = { c_3019161 = { character = PREV } } # Orstos Belmore
	NOT = { c_3021161 = { character = PREV } } # Pearse Belmore  
	NOT = { c_77025 = { character = PREV } } # Aegor Bittersteel
	NOT = { c_61418 = { character = PREV } } # Andrey Blackmont
	NOT = { c_61718 = { character = PREV } } # Arrant Blackmont
	NOT = { c_62218 = { character = PREV } } # Rayne Blackmont
	NOT = { c_3014118 = { character = PREV } } # Garmon Blacktyde
	NOT = { c_28150 = { character = PREV } } # Benjicot Blackwood
	NOT = { c_26150 = { character = PREV } } # Quentyn Blackwood
	NOT = { c_301364 = { character = PREV } } # Harrag Botley
	NOT = { c_21149 = { character = PREV } } # Harys Bracken
	NOT = { c_19149 = { character = PREV } } # Bradamar Bracken
	NOT = { c_18149 = { character = PREV } } # Hendry Bracken
	NOT = { c_17149 = { character = PREV } } # Humfrey Bracken
	NOT = { c_16149 = { character = PREV } } # Walder Bracken
	NOT = { c_15149 = { character = PREV } } # Kennoth Bracken
	NOT = { c_11149 = { character = PREV } } # Harys Bracken
	NOT = { c_305216 = { character = PREV } } # Tommen Brax
	NOT = { c_303216 = { character = PREV } } # Alan Brax
	NOT = { c_3020042 = { character = PREV } } # Clarence Brune
	NOT = { c_60100319 = { character = PREV } } # Barristan Buckler
	NOT = { c_60200319 = { character = PREV } } # Brienne Buckler
	NOT = { c_3006319 = { character = PREV } } # Regenard Buckler
	NOT = { c_3007319 = { character = PREV } } # Kennald Buckler
	NOT = { c_3006034 = { character = PREV } } # Gunthor Buckwell
	NOT = { c_3011034 = { character = PREV } } # Garett Buckwell
	NOT = { c_3143 = { character = PREV } } # Ambrose Butterwell
	NOT = { c_60200301 = { character = PREV } } # Robert Caron
	NOT = { c_304301 = { character = PREV } } # Royce Caron
	NOT = { c_305301 = { character = PREV } } # Jason Caron
	NOT = { c_4014264 = { character = PREV } } # Orbert Caswell
	NOT = { c_3016264 = { character = PREV } } # Mason Caswell
	NOT = { c_88294 = { character = PREV } } # Armond Caswell
	NOT = { c_3004050 = { character = PREV } } # Edwell Celtigar
	NOT = { c_3013050 = { character = PREV } } # Bartimos Celtigar
	NOT = { c_3014050 = { character = PREV } } # Clement Celtigar
	NOT = { c_3020050 = { character = PREV } } # Amrell Celtigar
	NOT = { c_6011277 = { character = PREV } } # Belion Chester
	NOT = { c_3018169 = { character = PREV } } # Banor Coldwater
	NOT = { c_302316 = { character = PREV } } # Kyle Connington
	NOT = { c_88000393 = { character = PREV } } # Roy Connington
	NOT = { c_307316 = { character = PREV } } # Alfros Connington
	NOT = { c_308316 = { character = PREV } } # Athell Connington
	NOT = { c_214176 = { character = PREV } } # Quenton Corbray
	NOT = { c_218176 = { character = PREV } } # Dermett Corbray
	NOT = { c_94048 = { character = PREV } } # Gawen Corbray
	NOT = { c_6009294 = { character = PREV } } # Tomas Cordwayner
	NOT = { c_3008287 = { character = PREV } } # Owen Costayne
	NOT = { c_3009287 = { character = PREV } } # Jonel Costayne
	NOT = { c_3015287 = { character = PREV } } # Arwood Costayne
	NOT = { c_60211197 = { character = PREV } } # Rennifer Crabb
	NOT = { c_26227 = { character = PREV } } # Jonos Crakehall
	NOT = { c_227 = { character = PREV } } # Sumner Crakehall
	NOT = { c_6010234 = { character = PREV } } # Ellard Crane
	NOT = { c_6017234 = { character = PREV } } # Mathis Crane
	NOT = { c_6021234 = { character = PREV } } # Albyn Crane
	NOT = { c_3019289 = { character = PREV } } # Lester Cuy
	NOT = { c_35136 = { character = PREV } } # Dinias Dalt
	NOT = { c_35176 = { character = PREV } } # Selara Dalt
	NOT = { c_6025364 = { character = PREV } } # Kendel Darklyn
	NOT = { c_71117 = { character = PREV } } # Aeron Dayne
	NOT = { c_306303 = { character = PREV } } # Manfred Dondarrion
	NOT = { c_307303 = { character = PREV } } # Ryman Dondarrion
	NOT = { c_7079 = { character = PREV } } # Roderick Dustin
	NOT = { c_6079 = { character = PREV } } # Jarett Dustin
	NOT = { c_307318 = { character = PREV } } # Cendrick Errol
	NOT = { c_305330 = { character = PREV } } # Lundram Estermont
	NOT = { c_306330 = { character = PREV } } # Dormen Estermont
	NOT = { c_310194 = { character = PREV } } # Robert Farman
	NOT = { c_309194 = { character = PREV } } # Marq Farman
	NOT = { c_305194 = { character = PREV } } # Lyndon Farman
	NOT = { c_303194 = { character = PREV } } # Orbert Farman
	NOT = { c_306313 = { character = PREV } } # Alora Fell
	NOT = { c_307313 = { character = PREV } } # Jareth Fell
	NOT = { c_308313 = { character = PREV } } # Armaund Fell
	NOT = { c_309313 = { character = PREV } } # Aimery Fell
	NOT = { c_10084 = { character = PREV } } # Merald Flint
	NOT = { c_9084 = { character = PREV } } # Mathell Flint
	NOT = { c_88257 = { character = PREV } } # Darell Florent
	NOT = { c_88258 = { character = PREV } } # Dalton Florent
	NOT = { c_88259 = { character = PREV } } # Erton Florent
	NOT = { c_88263 = { character = PREV } } # Aladore Florent
	NOT = { c_88021 = { character = PREV } } # Imry Florent
	NOT = { c_6001321 = { character = PREV } } # Sherett Follard
	NOT = { c_3015248 = { character = PREV } } # Dermett Footly
	NOT = { c_3016248 = { character = PREV } } # Edger Footly
	NOT = { c_22261 = { character = PREV } } # Owen Fossoway
	NOT = { c_21261 = { character = PREV } } # Oswell Fossoway
	NOT = { c_20261 = { character = PREV } } # Raymun Fossoway
	NOT = { c_3262 = { character = PREV } } # Liera Fossoway
	NOT = { c_61414 = { character = PREV } } # Gerald Fowler
	NOT = { c_18127 = { character = PREV } } # Whalen Frey
	NOT = { c_16127 = { character = PREV } } # Orland Frey
	NOT = { c_127 = { character = PREV } } # Walder Frey
	NOT = { c_174345 = { character = PREV } } # Tormund Giantsbane
	NOT = { c_35167 = { character = PREV } } # Davit Gargalen
	NOT = { c_35187 = { character = PREV } } # Joleta Gargalen
	NOT = { c_16148 = { character = PREV } } # Abros Goodbrook
	NOT = { c_15148 = { character = PREV } } # Ellenei Goodbrook
	NOT = { c_3013186 = { character = PREV } } # Jaymond Grafton
	NOT = { c_308308 = { character = PREV } } # Arthur Grandison
	NOT = { c_338232 = { character = PREV } } # Richard Greenfield
	NOT = { c_23133 = { character = PREV } } # Bryne Grell
	NOT = { c_26107 = { character = PREV } } # Vickon Greyjoy
	NOT = { c_25107 = { character = PREV } } # Goren Greyjoy
	NOT = { c_19107 = { character = PREV } } # Alton Greyjoy
	NOT = { c_17107 = { character = PREV } } # Torwyn Greyjoy
	NOT = { c_3005275 = { character = PREV } } # Grance Grimm
	NOT = { c_3009275 = { character = PREV } } # Olys Grimm
	NOT = { c_3012275 = { character = PREV } } # Hewyn Grimm
	NOT = { c_124184 = { character = PREV } } # Denys Hardyng
	NOT = { c_3357 = { character = PREV } } # Lucas Harroway
	NOT = { c_6000932 = { character = PREV } } # Rance Hayford
	NOT = { c_3022278 = { character = PREV } } # Alester Hewett
	NOT = { c_17285 = { character = PREV } } # Manfred Hightower
	NOT = { c_88000272 = { character = PREV } } # Addam Hightower
	NOT = { c_88000275 = { character = PREV } } # Manfred Hightower
	NOT = { c_16285 = { character = PREV } } # Martyn Hightower
	NOT = { c_88000276 = { character = PREV } } # Donnel Hightower
	NOT = { c_175285 = { character = PREV } } # Lyonel Hightower
	NOT = { c_10285 = { character = PREV } } # Bradwell Hightower
	NOT = { c_5500285 = { character = PREV } } # Jon Hightower
	NOT = { c_3007177 = { character = PREV } } # Alec Hunter
	NOT = { c_3009177 = { character = PREV } } # Bellard Hunter
	NOT = { c_3010177 = { character = PREV } } # Harlan Hunter
	NOT = { c_61310 = { character = PREV } } # Marden Jordayne
	NOT = { c_61510 = { character = PREV } } # Orlyn Jordayne
	NOT = { c_61000810 = { character = PREV } } # Arlene Jordayne
	NOT = { c_11089 = { character = PREV } } # Karlon Karstark
	NOT = { c_10089 = { character = PREV } } # Karl Karstark
	NOT = { c_8089 = { character = PREV } } # Tommard Karstark
	NOT = { c_189 = { character = PREV } } # Rickard Karstark
	NOT = { c_11142 = { character = PREV } } # Tristifer Keath
	NOT = { c_305195 = { character = PREV } } # Herrock Kenning
	NOT = { c_574800 = { character = PREV } } # Gerrick Kingsblood
	NOT = { c_305213 = { character = PREV } } # Lyonel Lefford
	NOT = { c_9088 = { character = PREV } } # Harrion Locke
	NOT = { c_8088 = { character = PREV } } # Elfram Locke
	NOT = { c_5355 = { character = PREV } } # Lucas Lothston
	NOT = { c_3355 = { character = PREV } } # Lucas Lothston
	NOT = { c_2355 = { character = PREV } } # Manfryd Lothston
	NOT = { c_1355 = { character = PREV } } # Danelle Lothston
	NOT = { c_15217 = { character = PREV } } # Cyril Lydden
	NOT = { c_14217 = { character = PREV } } # Lyle Lydden
	NOT = { c_3012174 = { character = PREV } } # Benedar Lynderly
	NOT = { c_9128 = { character = PREV } } # Joscelyn Mallister
	NOT = { c_17080 = { character = PREV } } # Theomore Manderly
	NOT = { c_13080 = { character = PREV } } # Desmond Manderly
	NOT = { c_1017080 = { character = PREV } } # Medrick Manderly
	NOT = { c_1015080 = { character = PREV } } # Torrhen Manderly
	NOT = { c_12080 = { character = PREV } } # Borian Manderly
	NOT = { c_62120 = { character = PREV } } # Mors Manwoody
	NOT = { c_62420 = { character = PREV } } # Aryard Manwoody
	NOT = { c_307212 = { character = PREV } } # Seldon Marbrand
	NOT = { c_306212 = { character = PREV } } # Arden Marbrand
	NOT = { c_21001 = { character = PREV } } # Nymor Martell
	NOT = { c_14001 = { character = PREV } } # Qoren Martell
	NOT = { c_11001 = { character = PREV } } # Maron Martell
	NOT = { c_6000046 = { character = PREV } } # Triston Massey
	NOT = { c_6002146 = { character = PREV } } # Allard Massey
	NOT = { c_6002246 = { character = PREV } } # Maslan Massey
	NOT = { c_3020270 = { character = PREV } } # Robett Meadows
	NOT = { c_4018284 = { character = PREV } } # Gelenna Meadows
	NOT = { c_3011181 = { character = PREV } } # Jeron Melcolm
	NOT = { c_3013181 = { character = PREV } } # Dorik Melcolm
	NOT = { c_263 = { character = PREV } } # Owen Merryweather
	NOT = { c_306327 = { character = PREV } } # Garse Mertyns
	NOT = { c_307327 = { character = PREV } } # Elys Mertyns
	NOT = { c_19138 = { character = PREV } } # Jonah Mooton
	NOT = { c_18138 = { character = PREV } } # Gaston Mooton
	NOT = { c_17138 = { character = PREV } } # Bryar Mooton
	NOT = { c_13102 = { character = PREV } } # Alwin Mormont
	NOT = { c_340178456 = { character = PREV } } # Jeyne Nutt
	NOT = { c_10237 = { character = PREV } } # Renly Oakheart
	NOT = { c_235 = { character = PREV } } # Eustace Osgrey
	NOT = { c_100513 = { character = PREV } } # Bellegere Otherys
	NOT = { c_54197 = { character = PREV } } # Parena Parren
	NOT = { c_16134 = { character = PREV } } # Coston Paege
	NOT = { c_3000298 = { character = PREV } } # Armen Peake
	NOT = { c_3011298 = { character = PREV } } # Unwin Peake
	NOT = { c_200320 = { character = PREV } } # Ronnel Penrose
	NOT = { c_9157 = { character = PREV } } # Petyr Piper
	NOT = { c_8157 = { character = PREV } } # Mychel Piper
	NOT = { c_7157 = { character = PREV } } # Ardros Piper
	NOT = { c_6157 = { character = PREV } } # Florian Piper
	NOT = { c_203226 = { character = PREV } } # Ossifer Plumm
	NOT = { c_202226 = { character = PREV } } # Viserys Plumm
	NOT = { c_308196 = { character = PREV } } # Ewan Prester
	NOT = { c_307196 = { character = PREV } } # Egon Prester
	NOT = { c_306196 = { character = PREV } } # Farin Prester
	NOT = { c_3015167 = { character = PREV } } # Renly Pryor
	NOT = { c_3017167 = { character = PREV } } # Desmond Pryor
	NOT = { c_359 = { character = PREV } } # Quenton Qoherys
	NOT = { c_2359 = { character = PREV } } # Gargon Qoherys
	NOT = { c_61115 = { character = PREV } } # Ganlos Qorgyle
	NOT = { c_61515 = { character = PREV } } # Balan Qorgyle
	NOT = { c_174347 = { character = PREV } } # Mance Rayder
	NOT = { c_3012183 = { character = PREV } } # Elbert Redfort
	NOT = { c_3015183 = { character = PREV } } # Gwenda Redfort
	NOT = { c_94058 = { character = PREV } } # Horton Redfort
	NOT = { c_17288 = { character = PREV } } # Manfryd Redwyne
	NOT = { c_288 = { character = PREV } } # Runceford Redwyne
	NOT = { c_88013 = { character = PREV } } # Denys Redwyne
	NOT = { c_9197 = { character = PREV } } # Bertrand Reyne
	NOT = { c_8197 = { character = PREV } } # Victor Reyne
	NOT = { c_197 = { character = PREV } } # Roger Reyne
	NOT = { c_308322 = { character = PREV } } # Tymos Rogers
	NOT = { c_309322 = { character = PREV } } # Arson Rogers
	NOT = { c_6001329 = { character = PREV } } # Jace Rollingford
	NOT = { c_8145 = { character = PREV } } # Arstyn Roote
	NOT = { c_300938 = { character = PREV } } # Mathar Rosby
	NOT = { c_88000458 = { character = PREV } } # Haric Rosby
	NOT = { c_301138 = { character = PREV } } # Whalon Rosby
	NOT = { c_301238 = { character = PREV } } # Bolen Rosby
	NOT = { c_301338 = { character = PREV } } # Ormory Rosby
	NOT = { c_20250 = { character = PREV } } # Rickard Rowan
	NOT = { c_17250 = { character = PREV } } # Thaddeus Rowan
	NOT = { c_6014247 = { character = PREV } } # Edgarren Roxton
	NOT = { c_6017247 = { character = PREV } } # Jon Roxton
	NOT = { c_3007187 = { character = PREV } } # Yorbert Royce
	NOT = { c_30091871 = { character = PREV } } # Rhea Royce
	NOT = { c_3010187 = { character = PREV } } # Willam Royce
	NOT = { c_3016187 = { character = PREV } } # Gunthor Royce
	NOT = { c_88000444 = { character = PREV } } # Guncer Royce
	NOT = { c_8800399 = { character = PREV } } # Andar Royce
	NOT = { c_3015187 = { character = PREV } } # Gunthor Royce
	NOT = { c_17152 = { character = PREV } } # Terin Ryger
	NOT = { c_13068 = { character = PREV } } # Cavan Ryswell
	NOT = { c_68 = { character = PREV } } # Rodrik Ryswell
	NOT = { c_3016109 = { character = PREV } } # Ralf Saltcliffe
	NOT = { c_316002 = { character = PREV } } # Angron Santagar
	NOT = { c_319002 = { character = PREV } } # Senara Santagar
	NOT = { c_305233 = { character = PREV } } # Nestor Sarsfield
	NOT = { c_322302 = { character = PREV } } # Sebara Selmy
	NOT = { c_327302 = { character = PREV } } # Beren Selmy
	NOT = { c_200302 = { character = PREV } } # Lyonel Selmy
	NOT = { c_3015276 = { character = PREV } } # Jeffroy Serry
	NOT = { c_3019276 = { character = PREV } } # Justyn Serry
	NOT = { c_6012246 = { character = PREV } } # Petyr Shermer
	NOT = { c_5156 = { character = PREV } } # Joseth Smallwood
	NOT = { c_4156 = { character = PREV } } # Bellos Smallwood
	NOT = { c_15298 = { character = PREV } } # Barion Smallwood
	NOT = { c_38323 = { character = PREV } } # Timmen Staedmon
	NOT = { c_319323 = { character = PREV } } # Tristen Staedmon
	NOT = { c_326323 = { character = PREV } } # Yuric Staedmon
	NOT = { c_327323 = { character = PREV } } # Arlana Staedmon
	NOT = { c_6001241 = { character = PREV } } # Ossifer Staunton
	NOT = { c_6001035 = { character = PREV } } # Donnel Stokeworth
	NOT = { c_10035 = { character = PREV } } # Samwell Stokeworth
	NOT = { c_6356 = { character = PREV } } # Bywin Strong
	NOT = { c_4356 = { character = PREV } } # Lyonel Strong
	NOT = { c_300356 = { character = PREV } } # Larys Strong
	NOT = { c_3000363 = { character = PREV } } # Marla Sunderland
	NOT = { c_3051363 = { character = PREV } } # Steffon Sunderland
	NOT = { c_3012363 = { character = PREV } } # Maron Sunderland
	NOT = { c_3016363 = { character = PREV } } # Gelion Sunderland
	NOT = { c_31651 = { character = PREV } } # Clemond Sunglass
	NOT = { c_31951 = { character = PREV } } # Wellard Sunglass
	NOT = { c_312306 = { character = PREV } } # Allos Swann
	NOT = { c_202306 = { character = PREV } } # Manfred Swann
	NOT = { c_306228 = { character = PREV } } # Tommard Swyft
	NOT = { c_305228 = { character = PREV } } # Ingram Swyft
	NOT = { c_229225 = { character = PREV } } # Alyn Tarbeck
	NOT = { c_228225 = { character = PREV } } # Jon Tarbeck
	NOT = { c_27225 = { character = PREV } } # Walderan Tarbeck
	NOT = { c_26296 = { character = PREV } } # Donald Tarly
	NOT = { c_25296 = { character = PREV } } # Alan Tarly
	NOT = { c_3011172 = { character = PREV } } # Symond Templeton
	NOT = { c_274344 = { character = PREV } } # Sigorn Thenn
	NOT = { c_35204 = { character = PREV } } # Talfryn Toland
	NOT = { c_1358 = { character = PREV } } # Walton Towers
	NOT = { c_2358 = { character = PREV } } # Jordan Towers
	NOT = { c_3358 = { character = PREV } } # Maegor Towers
	NOT = { c_324304 = { character = PREV } } # Pylman Trant
	NOT = { c_17159 = { character = PREV } } # Edmyn Tully
	NOT = { c_15159 = { character = PREV } } # Grover Tully
	NOT = { c_13159 = { character = PREV } } # Kermit Tully
	NOT = { c_19159 = { character = PREV } } # Edmure Tully
	NOT = { c_1159 = { character = PREV } } # Medgar Tully
	NOT = { c_15253 = { character = PREV } } # Theo Tyrell
	NOT = { c_88000338 = { character = PREV } } # Martyn Tyrell
	NOT = { c_13253 = { character = PREV } } # Matthos Tyrell
	NOT = { c_88067 = { character = PREV } } # Leo Tyrell
	NOT = { c_11093 = { character = PREV } } # Jon Umber
	NOT = { c_10093 = { character = PREV } } # Osric Umber
	NOT = { c_9093 = { character = PREV } } # Harmond Umber
	NOT = { c_5093 = { character = PREV } } # Hoarfrost Umber
	NOT = { c_3019170 = { character = PREV } } # Olwyn Upcliff
	NOT = { c_35148 = { character = PREV } } # Cassella Vaith
	NOT = { c_50012300 = { character = PREV } } #Aurion Varezys
	NOT = { c_6016258 = { character = PREV } } # Talen Varner
	NOT = { c_3000119 = { character = PREV } } # Qhorin Volmark
	NOT = { c_3007189 = { character = PREV } } # Bermar Waxley
	NOT = { c_3010189 = { character = PREV } } # Leorald Waxley
	NOT = { c_3010182 = { character = PREV } } # Guston Waynwood
	NOT = { c_3012182 = { character = PREV } } # Wayland Waynwood
	NOT = { c_3013182 = { character = PREV } } # Armond Waynwood
	NOT = { c_94021 = { character = PREV } } # Anya Waynwood
	NOT = { c_2238 = { character = PREV } } # Reynard Webber
	NOT = { c_1238 = { character = PREV } } # Wyman Webber
	NOT = { c_3238 = { character = PREV } } # Rohanne Webber
	NOT = { c_61611 = { character = PREV } } # Theobard Wells
	NOT = { c_16199 = { character = PREV } } # Roland Westerling
	NOT = { c_15199 = { character = PREV } } # Daric Westerling
	NOT = { c_4146 = { character = PREV } } # Osmund Whent
	NOT = { c_9082 = { character = PREV } } # Merion Woolfield
	NOT = { c_3017180 = { character = PREV } } # Eddard Wydman
	NOT = { c_651919 = { character = PREV } } # Guerin Wyl
	NOT = { c_652019 = { character = PREV } } # Coran Wyl
	NOT = { c_651919 = { character = PREV } } # Guerin Wyl	
	NOT = { c_311329 = { character = PREV } } # Jasper Wylde
	NOT = { c_31412 = { character = PREV } } # Morys Yronwood
	NOT = { c_32212 = { character = PREV } } # Farien Yronwood			
}
no_warrior_trigger = {
	NOT = { c_696969102 = { character = PREV } } # Moon Boy
	NOT = { c_2004994 = { character = PREV } } # Patchface
	NOT = { c_49174413 = { character = PREV } } # Clarent Cargyll
	NOT = { c_309316 = { character = PREV } } # Gallard Connington
	NOT = { c_88000248 = { character = PREV } } # Androw Farman
	NOT = { c_60814 = { character = PREV } } # Madoc Fowler
	NOT = { c_88000237 = { character = PREV } } # Horas Harroway
	NOT = { c_3010177 = { character = PREV } } # Harlan Hunter
	NOT = { c_1190 = { character = PREV } } # Tytos Lannister
	NOT = { c_6001246 = { character = PREV } } # Albin Massey
	NOT = { c_11491 = { character = PREV } } # Sam Stoops
	NOT = { c_300356 = { character = PREV } } # Larys Strong
	NOT = { c_3358 = { character = PREV } } # Maegor Towers
	NOT = { c_550253 = { character = PREV } } # Meryn Tyrell
	NOT = { c_65013 = { character = PREV } } # Justin Uller
	NOT = { c_20140 = { character = PREV } } # Preston Wayn
}
can_be_made_alt_start_canon_dynasty_trigger = {
	OR = {
		higher_tier_than = BARON
		is_feudal = yes
	}	
	is_landed = yes
	NOT = { trait = nightswatch }
	NOR = {
		mercenary = yes
		controls_religion = yes 
	}
	NOT = { culture_group = unoccupied_group }
	NOT = { has_character_flag = made_canon_dynasty }
}
has_knighthood_religion_trigger = {
	OR = {
		religion = the_seven
		has_religion_feature = religion_feature_the_seven
	}
}
has_cutthroat_religion_trigger = {
	OR = {
		religion = dothraki_pagan
		religion = old_ones
		has_religion_feature = religion_cutthroat
	}
}
has_sacrifice_religion_trigger = { #excludes rhllor which has seperate triggers
	OR = {
		has_religion_feature = religion_ritual_sacrifice
		has_religion_feature = religion_feature_norse
		religion = drowned_god
		religion_group = wildling_religion
		religion = black_goat
		religion = gods_bone_mountains
		religion_group = pagan_group
		religion = old_ones
		religion = gods_nghai
		religion = lady_of_the_waves
		religion = stone_cow		
		religion = cold_gods						
		religion = sothoryos_rel
		AND = {
			NOT = { has_dlc = "Holy Fury" }
			OR = {
				religion = drowned_god_reformed
				religion = beyond_wall_old_gods_reformed
				religion = black_goat_reformed
				religion = gods_bone_mountains_reformed
				religion = gods_nghai_reformed
				religion = lady_of_the_waves_reformed
				religion = stone_cow_reformed
			}	
		}
	}
}
has_blood_magic_religion_trigger = { #enables qarth warlock style healing
	OR = {
		religion = qarth_warlocks
		has_religion_feature = religion_haruspicy
		has_religion_feature = religion_feature_valyrian_rel
	}
}
has_dark_magic_religion_trigger = { #enables devil worshipper powers
	OR = {
		has_religion_feature = religion_haruspicy
		has_religion_feature = religion_feature_valyrian_rel
	}
}
has_jogos_nhai_war_block_trigger = {
	OR = {
		religion = jogos_pagan 
		religion = jogos_pagan_reformed
	}
	NOT = { has_religion_feature = religion_warlike }
}
is_drowned_god_religion_trigger = {
	OR = {
		religion = drowned_god
		religion = drowned_god_reformed
	}
}
has_ironborn_invasion_religion_trigger = {
	trigger_if = {
		limit = { has_dlc = "Holy Fury" }
		OR = {
			religion = drowned_god
			has_religion_feature = religion_adventuring
			has_religion_feature = religion_feature_norse
		}
	}
	trigger_else = {
		is_drowned_god_religion_trigger = yes
	}	
}
has_kingsmoots_culture_religion_trigger = {
	OR = {
		culture_group = iron_isles_culture
		religion = drowned_god
		AND = {
			religion = drowned_god_reformed
			OR = {
				NOT = { has_dlc = "Holy Fury" }
				has_religion_feature = religion_feature_elective
				has_religion_feature = religion_feature_norse
			}	
		}
	}	
}
has_elective_culture_religion_trigger = {
	OR = {
		culture_group = iron_isles_culture
		religion = drowned_god
		AND = {
			religion = drowned_god_reformed
			NOT = { has_dlc = "Holy Fury" }
		}	
		has_religion_feature = religion_feature_elective
		has_religion_feature = religion_feature_norse
	}	
}
has_black_goat_sacrifice_religion_trigger = {
	OR = {
		religion = black_goat
		AND = {
			religion = black_goat_reformed
			OR = {
				NOT = { has_dlc = "Holy Fury" }
				has_religion_feature = religion_ritual_sacrifice
			}
		}
	}
}
has_tolerant_religion_trigger = {
	OR = {
		is_unorganised_religion_trigger = yes
		religion = valyrian_rel
		religion = moonsingers
		pacifist = yes
		has_religion_feature = religion_cosmopolitan
		AND = {
			OR = {
				religion = valyrian_rel_reformed
				religion = moonsingers_reformed
			}
			NOT = { has_dlc = "Holy Fury" }
		}
	}	
}
is_summer_rel_trigger = {
	OR = {
		religion = summer_rel
		religion = summer_rel_reformed
	}
}
is_naathi_harmony_religion_trigger = {
	OR = {
		religion = nath_pagan
		AND = {
			religion = nath_pagan_reformed
			OR = {
				NOT = { has_dlc = "Holy Fury" }
				has_religion_feature = religion_peaceful
			}	
		}	
		has_religion_feature = religion_feature_nath_pagan
	}
}
is_lady_of_the_waves_pirate_religion_trigger = {
	OR = {
		religion = lady_of_the_waves
		AND = {
			religion = lady_of_the_waves_reformed
			OR = {
				NOT = { has_dlc = "Holy Fury" }
				NOT = { has_religion_feature = religion_peaceful }
			}				
		}	
	}
}
may_wear_martial_headgear_trigger = {
	OR = {
		AND = { 
			in_command = yes 
			NOT = { has_game_rule = { name = martial_headgear value = off } }
		}
		AND = {
			trait = undead
			combat_rating = 10
		}
	}
}
does_not_wear_martial_headgear_trigger = {
	OR = {
		#is_female = yes
		trait = maester
		trait = archmaester
		trait = nightswatch
		AND = {
			is_alive = no
			#NOT = { government = military_command_government }
			NOT = { death_reason = death_battle }
		}
		AND = {
			has_game_rule = { name = martial_headgear value = no_rulers }
			OR = {
				higher_real_tier_than = DUKE
				AND = {
					tier = DUKE
					demesne_size = 1
					#NOT = { government = military_command_government }
					NOT = { trait = nightswatch }
					NOT = { trait = kingsguard }
					NOT = {
						primary_title = {
							OR = {
								mercenary = yes
								holy_order = yes
							}
						}
					}
				}
			}
		}
	}
}
resistant_to_illness_trigger = { #1/4 chance of illness, 1/2 recovery time
	graphical_culture = valyriangfx
}

eligible_archon_trigger = {
	age = 15		
	true_valyrian_culture_trigger = yes #Must be of Valyrian blood	
	OR = {
		AND = {
			is_ruler = yes
			OR = {
				culture = high_valyrian
				any_demesne_province = { region = world_valyrian_peninsula }
			}	
		}	
		has_character_flag = title_freeholder
	}
	OR = {
		liege = { has_landed_title = e_new_valyria }
		is_ruler = no
	}
	# NAND = {
		# is_councillor = yes
		# has_character_flag = elected_valyrian_councillor
		# liege = { has_landed_title = e_new_valyria }
	# }				
	prisoner = no
	is_incapable = no
	NOT = { trait = former_slave }
	is_theocracy = no
	NOT = { dynasty = 0 }
	NOT = { has_character_modifier = deposed_AGOT }
	NOT = { has_minor_title = title_archon_for_life }
}
is_immediate_relative_ROOT_trigger = {
	OR = { 
		sibling = ROOT
		is_child_of = ROOT
		is_grandchild_of = ROOT
		is_parent_of = ROOT
		is_grandparent_of = ROOT
	}
}
is_immediate_relative_PREV_trigger = {
	OR = { 
		sibling = PREV
		is_child_of = PREV
		is_grandchild_of = PREV
		is_parent_of = PREV
		is_grandparent_of = PREV
	}
}
free_city_pre_doom_conquest_CB_trigger = {
	ROOT = {
		has_global_flag = freehold_submod_initialised
		OR = {
			culture_group = valyrian
			culture_group = free_cities
		}
		NOT = { capital_scope = { region = world_valyrian_peninsula } }
	}
	FROM = {
		NOR = {
			culture_group = valyrian
			culture_group = free_cities
		}
	}
}
can_be_expelled_from_court_trigger = {
	prisoner = no
	is_adult = yes
	is_landed = no
	important_character_to_root_trigger = no
	NOT = {
		any_spouse = { 
			host = { character = ROOT }
			important_character_to_root_trigger = yes
		}
	}	
	NOT = {
		any_child = { 
			OR = {
				is_child_of = ROOT
				AND = {
					host = { character = ROOT }
					important_character_to_root_trigger = yes
				}
			}	
		}
	}
	NOT_mythical_creature_trigger = yes
	NOT = { trait = nightswatch }
	NOT = { trait = slave }
	immortal = no
}
is_valyrian_road_location_trigger = {
	OR = { #optimise
		region = world_free_cities
		region = world_valyrian_peninsula
		region = world_sarnor
	}	
	OR = {
		province_id = 757
		province_id = 1162
		province_id = 597
		province_id = 1157
		province_id = 1154
		province_id = 755
		province_id = 1165
		province_id = 1169
		province_id = 758
		province_id = 1160
		province_id = 756
		province_id = 1186
		province_id = 759
		province_id = 1175
		province_id = 760
		province_id = 761
		province_id = 484
		province_id = 483
		province_id = 419
		province_id = 421
		province_id = 488
		province_id = 1174
		province_id = 1178
		province_id = 1180
		province_id = 599
		province_id = 598
		province_id = 600
		province_id = 601
		province_id = 604
		province_id = 605
		province_id = 606
		province_id = 406
		province_id = 409
		province_id = 452
		province_id = 450
		province_id = 455
		province_id = 442
		province_id = 433
		province_id = 435
		province_id = 436
		province_id = 438
		province_id = 476
		province_id = 437
		province_id = 429
		province_id = 478
		province_id = 540
		province_id = 542
		province_id = 549
		province_id = 548
		province_id = 544
	}
}
has_fashionable_groomed_trigger = {
	OR = {
		trait = groomed
		trait = fashionable
	}
}
